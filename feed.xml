<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.0">Jekyll</generator><link href="https://ordina-jworks.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ordina-jworks.github.io/" rel="alternate" type="text/html" /><updated>2018-01-23T10:42:22+00:00</updated><id>https://ordina-jworks.github.io/</id><title type="html">Ordina JWorks Tech Blog</title><subtitle>We build innovative solutions with Java and JavaScript. To support this mission, we have several Competence Centers. From within those Competence Centers, we provide coaching to the employee and expert advice towards our customer. In order to keep in sync with the latest technologies and the latest trends, we frequently visit conferences around the globe.
</subtitle><entry><title type="html">The JWorks Tech Radar</title><link href="https://ordina-jworks.github.io/tech/2018/01/20/JWorks-Tech-Blog.html" rel="alternate" type="text/html" title="The JWorks Tech Radar" /><published>2018-01-20T00:00:00+00:00</published><updated>2018-01-20T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/tech/2018/01/20/JWorks-Tech-Blog</id><content type="html" xml:base="https://ordina-jworks.github.io/tech/2018/01/20/JWorks-Tech-Blog.html">&lt;blockquote&gt;
  &lt;p&gt;The JWorks Technology Radar is intended to showcase our opinion on the most important tech trends we see today.
It is based on the Thoughtworks Technology Radar and uses its open source framework for visualization.
We adopted the mechanics and methodology from Thoughtworks, as described below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our tech radar can be reached through &lt;a href=&quot;https://ordina-jworks.github.io/tech-blog&quot;&gt;this link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-radar&quot;&gt;The Radar&lt;/h2&gt;

&lt;p&gt;The Radar is a document that sets out the changes that we think are currently interesting in software development - things in motion that we think you should pay attention to and consider using in your projects.
It reflects the idiosyncratic opinion of a bunch of senior technologists and is based on our day-to-day work and experiences.
While we think this is interesting, it shouldn’t be taken as a deep market analysis.&lt;/p&gt;

&lt;h2 id=&quot;quadrants&quot;&gt;Quadrants&lt;/h2&gt;

&lt;p&gt;The quadrants are a categorization of the type of blips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Programming Languages and Frameworks.&lt;/strong&gt; Quite straight-forward, languages and software frameworks.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Tools.&lt;/strong&gt; These can be components, such as databases, software development tools, such as Versions Control Systems; or more generic categories of tools, such as the notion of polyglot persistence.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Platforms.&lt;/strong&gt; Things that we build software on top of such as mobile technologies like Android, virtual platforms like the JVM, or generic kinds of platforms like hybrid clouds.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Techniques.&lt;/strong&gt; These include elements of a software development process, such as experience design; and ways of structuring software, such as microservices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We don’t make a big deal out of the quadrants - they’re really just a way to break up the Radar into topic areas. We don’t think it’s important which quadrant a blip goes into, unlike the rings - which generate a lot of discussion.&lt;/p&gt;

&lt;h2 id=&quot;rings&quot;&gt;Rings&lt;/h2&gt;

&lt;p&gt;The metaphor of a radar says that the closer a blip is to you, the sooner it will be on top of you. Like most metaphors, you can’t take it too seriously, but there’s an essential sense to it.&lt;/p&gt;

&lt;p&gt;Our Radar has four rings, which we’ll describe starting from the middle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;Adopt&lt;/strong&gt; ring represents blips that we think you should be using now. We don’t say that you should use these for every project; any tool should only be used in an appropriate context. However we do think that a blip in the Adopt ring represents something where there’s no doubt that it’s proven and mature for use.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Trial&lt;/strong&gt; ring is for blips that we think are ready for use, but not as completely proven as those in the Adopt ring. So for most organizations we think you should use these on a trial basis, to decide whether they should be part of your toolkit. Typically we’re happy to use trial blips now, but we realize that most readers will be more cautious than us.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Assess&lt;/strong&gt; ring are things that you should look at closely, but not necessarily trial yet - unless you think they would be a particularly good fit for you. Typically, blips in the Assess ring are things that we’re currently trialling, on our projects.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;Hold&lt;/strong&gt; ring is for things that are getting attention in the industry, but we don’t think are ready for use. Sometimes this is because we don’t think they’re mature enough yet: sometimes it means we think they’re irredeemably flawed. We don’t have an “avoid” ring, but we do throw things in the Hold ring that we wish our clients wouldn’t use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unlike the quadrants, we do have some quite passionate arguments about which ring a blip should go into. We don’t tend to have angry debates, but rings are what generate the most energetic discussions. Over the course of making the Radar we’ve come up with some useful rules of thumb to help us put things into rings.&lt;/p&gt;

&lt;p&gt;We can only put blips into the Trial ring when we have experience of that blip on a real project. This can mean we sometimes look behind the technology curve, because we may like the look of a technology but haven’t yet persuaded a client to try it out - and until we do that blip cannot pass into Trial.&lt;/p&gt;

&lt;p&gt;For the Adopt ring, we only include items when we think it would be a poor and potentially irresponsible choice not to use them given the appropriate project context.&lt;/p&gt;

&lt;p&gt;More information can be found on the &lt;a href=&quot;https://www.thoughtworks.com/radar/faq&quot;&gt;Thoughtworks website&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Andreas&quot;, &quot;last_name&quot;=&gt;&quot;Evers&quot;, &quot;permalink&quot;=&gt;&quot;/author/andreas-evers/&quot;, &quot;avatar&quot;=&gt;&quot;andreas-evers.jpg&quot;, &quot;title&quot;=&gt;&quot;Principal Consultant&quot;, &quot;email&quot;=&gt;&quot;andreas.evers@ordina.be&quot;, &quot;twitter&quot;=&gt;&quot;andreasevers&quot;, &quot;github&quot;=&gt;&quot;andreasevers&quot;, &quot;title2&quot;=&gt;&quot;Practice Leader Backend&quot;, &quot;linkedin&quot;=&gt;&quot;eversandreas&quot;, &quot;bio&quot;=&gt;&quot;Andreas is a Principal Java consultant at Ordina, passionate about the Spring ecosystem, microservices, REST, clean code and best practices in general. An avid open source enthusiast and Spring contributor. Helps fellow developers as Competence Center leader for architecture and best practices by giving workshops, talks and courses about the newest technologies.&quot;}</name><email>andreas.evers@ordina.be</email></author><category term="Tech" /><category term="Tech Radar" /><summary type="html">The JWorks Technology Radar is intended to showcase our opinion on the most important tech trends we see today. It is based on the Thoughtworks Technology Radar and uses its open source framework for visualization. We adopted the mechanics and methodology from Thoughtworks, as described below.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/techradar/TechRadar.png" /></entry><entry><title type="html">Automated testing with Gauge</title><link href="https://ordina-jworks.github.io/testing/2018/01/05/Gauge-automated-testing.html" rel="alternate" type="text/html" title="Automated testing with Gauge" /><published>2018-01-05T00:00:00+00:00</published><updated>2018-01-05T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/testing/2018/01/05/Gauge-automated-testing</id><content type="html" xml:base="https://ordina-jworks.github.io/testing/2018/01/05/Gauge-automated-testing.html">&lt;p&gt;After finishing a new feature in your web app, you test whether it works.
However, while working on that new feature, you may have broken something else.
If you want to know for sure, you have to test everything.
Clicking around, filling in forms, … will cost you some valuable time.
So, you’ll probably end up not doing it thorough enough or even not at all, assuming everything else still works fine.
That’s exactly why you should have automated tests do it for you!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://getgauge.io/&quot; target=&quot;_blank&quot;&gt;Gauge&lt;/a&gt; is yet another test automation tool that serves that purpose.
The founder is &lt;a href=&quot;https://www.thoughtworks.com/&quot; target=&quot;_blank&quot;&gt;ThoughtWorks&lt;/a&gt;, the company that also created  &lt;a href=&quot;http://www.seleniumhq.org/&quot; target=&quot;_blank&quot;&gt;Selenium&lt;/a&gt; and &lt;a href=&quot;https://www.gocd.org/&quot; target=&quot;_blank&quot;&gt;GoCD&lt;/a&gt;.
It’s still in beta at the moment of writing, but it already works terrific!
Gauge is comparable with Protractor or JUnit extended with Cucumber (if you haven’t heard of these, they are worth checking out).
In this blog we’ll be mainly talking about automating browser testing using Selenium WebDriver, although that isn’t the sole purpose of Gauge.
If you don’t know WebDriver, it’s what allows you to interact with the browser to traverse the DOM, click on elements and so on.&lt;/p&gt;

&lt;p&gt;Now, unlike Cucumber, Gauge itself only supports three languages at the moment: Java, Ruby and C#.
Others may be supported by the community like JavaScript.
You can define steps written in either one of those languages.
These are the actual tests and can be identified by a sentence you can choose yourself.
By combining these sentences, you can write test scenarios which are written in Markdown.
That means you don’t need any programming experience to write test scenarios.
You could create some sort of dictionary with the step sentences that others can use for the scenarios or the other way around.
In other words, anyone is able to read and write test scenarios.
The actual implementation of the steps does require some technical knowledge.&lt;/p&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#writing-tests&quot;&gt;Writing tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#running-the-specs&quot;&gt;Running the specs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#environments-and-configuration&quot;&gt;Environments and configuration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reports&quot;&gt;Reports&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;setup&quot;&gt;Setup&lt;/h1&gt;
&lt;p&gt;Gauge offers an installer which can be downloaded &lt;a href=&quot;https://getgauge.io/get-started.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.
During the install, you can select which core plugins to install.
In this blog the tests are written in Java, so we would need the Java core plugin.
After the install, you’ll be able to run &lt;code class=&quot;highlighter-rouge&quot;&gt;gauge&lt;/code&gt; from the command line.
It can, for example, be used to install more plugins (as well as core plugins &lt;code class=&quot;highlighter-rouge&quot;&gt;gauge install java&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Next, in order to use WebDriver in our tests, we’ll need the Java SDK and Maven.
When you’re a Java developer, you probably already have those installed.
If not, you’ll find enough on Google on how to install those.&lt;/p&gt;

&lt;p&gt;To start a new project, create a new folder and run &lt;code class=&quot;highlighter-rouge&quot;&gt;gauge init java&lt;/code&gt; in it.
This will setup a basic Gauge project.
Then we need to add a &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium/blob/master/pom.xml&quot; target=&quot;_blank&quot;&gt;pom.xml&lt;/a&gt; file ourselves, because we need some dependencies such as Selenium WebDriver.
Next, WebDriver needs to be set up in our test code.
A good example of how you could do that can be found &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium/tree/master/src/test/java/utils&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.
They created a &lt;code class=&quot;highlighter-rouge&quot;&gt;DriverFactory&lt;/code&gt; so you can easily switch between browsers using environment variables (we’ll get to that).
Gauge hooks are used to start and stop WebDriver when running the test suite.
Just copy those pieces of code into your own project.
Or, you could start from the &lt;em&gt;Maven + Selenium&lt;/em&gt; example provided by Gauge which can be found on &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.
That way you’d have some examples to start from.&lt;/p&gt;

&lt;p&gt;Now we can start writing tests.&lt;/p&gt;

&lt;h1 id=&quot;writing-tests&quot;&gt;Writing tests&lt;/h1&gt;
&lt;p&gt;On the lowest level we have our Java functions that control the browser using WebDriver commands.
To these functions we can assign a &lt;code class=&quot;highlighter-rouge&quot;&gt;@Step&lt;/code&gt; annotation to be able to identify it.
It’s usually a sentence describing the action being performed.
The sentences can then be used to write the scenarios of our tests (or specs).
If you’d like to combine multiple steps into once sentence, you can do so by creating so called “concepts”.&lt;/p&gt;

&lt;p&gt;A typical folder structure for a Gauge setup using WebDriver and Java is as follows:&lt;/p&gt;
&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:194px&quot; alt=&quot;Gauge Maven project structure&quot; src=&quot;/img/2018-01-05-gauge-automated-testing/files.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h3 id=&quot;writing-the-specs&quot;&gt;Writing the specs&lt;/h3&gt;
&lt;p&gt;The specs are written in Markdown.
Each spec file starts with a title and is underlined with &lt;code class=&quot;highlighter-rouge&quot;&gt;===&lt;/code&gt;.
Next, some steps can be defined that will be run before each scenario.
When listing steps, you need to prefix each step with an asterix (*) as in a Markdown list.
After that, the actual scenarios can be written.
They start with a title and are underlined with &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;.
Again, the steps for a scenario should be listed as in a Markdown list.
You can also add some tags which can be used to only run certain specs and to search in the HTML reports.
Here’s an example specification:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gu&quot;&gt;Customer sign-up
================
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;
*&lt;/span&gt; Go to sign up page

&lt;span class=&quot;gh&quot;&gt;Customer sign-up
----------------
&lt;/span&gt;tags: sign-up, customer
&lt;span class=&quot;p&quot;&gt;
*&lt;/span&gt; Sign up a new customer with name &quot;JWorks&quot; email &quot;jworks@ordina.be&quot; and &quot;password&quot;
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Check if the sign up was successful
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;writing-the-steps&quot;&gt;Writing the steps&lt;/h3&gt;
&lt;p&gt;The sentences we wrote in the specs still need to be linked to Java functions.
We can do so by simply adding a &lt;code class=&quot;highlighter-rouge&quot;&gt;@Step&lt;/code&gt; annotation to a Java function.
It doesn’t matter in which class you put the functions, you’re free to choose how to organize them.
As long as they are under the &lt;code class=&quot;highlighter-rouge&quot;&gt;src/test/java&lt;/code&gt; folder.
You could, for example, group them per page or feature.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomerSignup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sign up as &amp;lt;customer&amp;gt; with email &amp;lt;customer@example.com&amp;gt; and &amp;lt;password&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;registerCustomerWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebDriver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new_user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[username]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[email]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[password]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[password_confirmation]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;commit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Check if the sign up was successful&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;checkSignUpSuccessful&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebDriver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getText&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;You have been signed up successfully!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As shown in the example above, you can easily pass parameters to steps.
You simply have to wrap the keywords in &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&amp;gt;&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;@Step&lt;/code&gt; annotation
and list the same keywords as parameters in the actual Java function.
Obviously, you can then use them in your Java code.&lt;/p&gt;

&lt;h3 id=&quot;page-object-pattern&quot;&gt;Page object pattern&lt;/h3&gt;
&lt;p&gt;A clean way to organize all your code would be to use the page object pattern.
This means that for every page in your web app, you should create a class.
Such a class contains all code to interact with that specific page.&lt;/p&gt;

&lt;p&gt;The example we saw earlier, could be transformed into this:&lt;/p&gt;

&lt;p&gt;Page object:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SignUpPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usernameField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emailField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwordField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwordConfirmField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commitButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;SignUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebDriver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;WebElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;new_user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;usernameField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[username]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;emailField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[email]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[password]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordConfirmField&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user[password_confirmation]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commitButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;By&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;commit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Step definition:&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CustomerSignup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SignUpPage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signUpPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SignUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Step&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sign up as &amp;lt;customer&amp;gt; with email &amp;lt;customer@example.com&amp;gt; and &amp;lt;password&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;registerCustomerWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;usernameField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;emailField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;passwordConfirmField&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sendKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signUpPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;commitButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The great benefit of this approach is that you can reuse a lot of the code.
You only have to locate the elements once instead of in every step.
Functions can be added to the page objects as well.
Suppose you have a dropdown, you first have to click to open it and then select an option from the list.
You can write a function doing all that.
In your step definition, you then simply have to call that function to select something from a dropdown.
It’s a good way to avoid too much code duplication.&lt;/p&gt;

&lt;h3 id=&quot;concepts&quot;&gt;Concepts&lt;/h3&gt;
&lt;p&gt;If you find yourself repeating the same sequence of steps over and over,
you could combine those steps into one step using concepts.
These are also written in Markdown and you can pass arguments the same way as in the Java &lt;code class=&quot;highlighter-rouge&quot;&gt;@Step&lt;/code&gt; annotations.
They should be placed in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/specs/concepts&lt;/code&gt; folder and use the *.cpt extension.&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Sign up a new customer with name &amp;lt;name&amp;gt; email &amp;lt;email&amp;gt; and &amp;lt;password&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Sign up as &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt; with email &lt;span class=&quot;nt&quot;&gt;&amp;lt;email&amp;gt;&lt;/span&gt; and &lt;span class=&quot;nt&quot;&gt;&amp;lt;password&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Show a message &quot;Thank you for signing up! You are now logged in.&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cucumber only offers this feature in some implementations, they don’t in Cucumber.js for example.
They refuse to implement it because they believe this creates too much abstraction and makes you lose sight of the overall picture.
Gauge does offer it, so it’s up to you whether you want to make use of it or not.&lt;/p&gt;

&lt;h1 id=&quot;running-the-specs&quot;&gt;Running the specs&lt;/h1&gt;
&lt;p&gt;Since the project is setup with Maven, the tests can be run with &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn test&lt;/code&gt;.
However, if you want to pass any arguments, you’ll need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;mvn gauge:execute&lt;/code&gt; instead.&lt;/p&gt;

&lt;h3 id=&quot;tags&quot;&gt;Tags&lt;/h3&gt;

&lt;p&gt;You may have noticed in the spec files that tags can be added.
They can be used to run only certain specs.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn gauge:execute -DspecsDir=specs -Dtags=&quot;sign-up &amp;amp; customer&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;parallel&quot;&gt;Parallel&lt;/h3&gt;
&lt;p&gt;So far, Gauge didn’t stand out from other automated testing solutions.
Although there’s one thing that really does stand out and that’s how easy it is to use parallel execution!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn gauge:execute -DspecsDir=specs -DinParallel=true&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Running this command will start up a stream for each CPU core your computer has.
For each stream it will open a browser window and execute the specs.
So if you have four CPU cores, four browser windows will be opened.
You can overwrite the number of parallel executors, but it’s recommended not to exceed the number of CPU cores.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn gauge:execute -DspecsDir=specs -DinParallel=true -Dnodes=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, some specs may take longer to run than others.
By default, specs are divided dynamically over the streams.
So when a spec has finished, it will take the next one from the list of specs that still need to be executed.
It’s possible to change this so the specs are divided on startup, but the command is deprecated and will be removed.&lt;/p&gt;

&lt;h3 id=&quot;making-tests-independent&quot;&gt;Making tests independent&lt;/h3&gt;
&lt;p&gt;To make use of this parallel execution, you’ll have to make sure that your tests don’t rely on each other.
I think it’s pretty clear why you shouldn’t do that.
Anyway, suppose you test the sign up and sign in.
If your sign in relies on the user being signed up through a previous test, these tests should be run synchronously.
However, if you would want to test whether a user can sign in after having signed up, you should do so in one test.
That immediately solves our problem and we are safe to use the parallel execution!&lt;/p&gt;

&lt;h1 id=&quot;environments-and-configuration&quot;&gt;Environments and configuration&lt;/h1&gt;
&lt;p&gt;The config files are located under &lt;code class=&quot;highlighter-rouge&quot;&gt;env/default&lt;/code&gt;.
You should have three files in that folder: &lt;code class=&quot;highlighter-rouge&quot;&gt;default.properties&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;java.properties&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;user.properties&lt;/code&gt;.
In the &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium&quot; target=&quot;_blank&quot;&gt;example by Gauge&lt;/a&gt;, they have an &lt;code class=&quot;highlighter-rouge&quot;&gt;APP_URL&lt;/code&gt; parameter in that last file.
I recommend using that approach as well, you can get parameters in your Java code using &lt;code class=&quot;highlighter-rouge&quot;&gt;System.getenv(&quot;APP_URL&quot;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It’s possible to create different environments by simply creating a new folder.
There you can add &lt;code class=&quot;highlighter-rouge&quot;&gt;*.properties&lt;/code&gt; files containing additional properties or properties overwriting the ones in the default folder.
So, that means you don’t need to copy the whole configuration. 
Gauge will always load all the default properties. 
Then it will load those defined for the environment you wish to use. 
If a property is defined for an environment and it already exists in the default configuration, it will use the one defined for that environment instead.
Now, suppose you want a different configuration for your CI-tool, you can create a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;ci&lt;/code&gt;.
When running the specs, simply pass an argument stating the environment.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mvn gauge:execute -Denv=&quot;ci&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Environments can also be used to run gauge with another browser like in the &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium&quot; target=&quot;_blank&quot;&gt;example by Gauge&lt;/a&gt;.
Create a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;firefox&lt;/code&gt; for example and add a file called &lt;code class=&quot;highlighter-rouge&quot;&gt;browser.properties&lt;/code&gt;.
In that file you add &lt;code class=&quot;highlighter-rouge&quot;&gt;browser = FIREFOX&lt;/code&gt;.
When you then run the tests with the &lt;code class=&quot;highlighter-rouge&quot;&gt;firefox&lt;/code&gt; environment, it will use FireFox as a browser instead.
(This only works if you have your project set up like in the example, the &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium/tree/master/src/test/java/utils/driver&quot; target=&quot;_blank&quot;&gt;Driver&lt;/a&gt; and &lt;a href=&quot;https://github.com/getgauge-examples/java-maven-selenium/tree/master/src/test/java/utils/driver&quot; target=&quot;_blank&quot;&gt;DriverFactory&lt;/a&gt; files are required here.)&lt;/p&gt;

&lt;h1 id=&quot;reports&quot;&gt;Reports&lt;/h1&gt;
&lt;p&gt;To get a HTML report, the plugin has to be installed first: &lt;code class=&quot;highlighter-rouge&quot;&gt;gauge install html-report&lt;/code&gt;.
That’s about it!
After running the specs, a nice HTML report will be outputted to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/reports&lt;/code&gt; folder.
It shows which tests succeeded and which failed with some additional graphs.
In the report you’ll even find how long it took to run a test and each of its steps.
There’s also a search functionality to quickly find a certain spec.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; alt=&quot;Gauge HTML report&quot; src=&quot;/img/2018-01-05-gauge-automated-testing/gauge-report.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It’s a good idea to write automated tests.
If you do it well, you don’t have to spend a lot of time manually testing your application.
The chance of something being broken by your changes will decrease dramatically.
Also, be sure to use the page object pattern and create functions for repetitive actions.
It avoids code duplication and having to update the same code in multiple places.&lt;/p&gt;

&lt;p&gt;If you’re starting a new project or starting from scratch with writing browser tests, you should consider using Gauge.
Even though it’s still in beta.
With ThoughtWorks as the main force behind this tool, it’s here to stay!&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Martijn&quot;, &quot;last_name&quot;=&gt;&quot;Willekens&quot;, &quot;linkedin&quot;=&gt;&quot;mwillekens&quot;, &quot;permalink&quot;=&gt;&quot;/author/martijn-willekens/&quot;, &quot;avatar&quot;=&gt;&quot;martijn-willekens.jpg&quot;, &quot;title&quot;=&gt;&quot;Frontend developer&quot;, &quot;email&quot;=&gt;&quot;martijn.willekens@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Martijn is a frontend developer at Ordina Belgium. He primarily devotes himself to building Angular and Ionic apps written in TypeScript. ReactiveX is his favorite set of tools to work with.&quot;}</name><email>martijn.willekens@ordina.be</email></author><category term="Testing" /><category term="Gauge" /><category term="E2E" /><category term="End to end" /><category term="Testing" /><category term="Test automation" /><category term="Automation" /><summary type="html">After finishing a new feature in your web app, you test whether it works. However, while working on that new feature, you may have broken something else. If you want to know for sure, you have to test everything. Clicking around, filling in forms, … will cost you some valuable time. So, you’ll probably end up not doing it thorough enough or even not at all, assuming everything else still works fine. That’s exactly why you should have automated tests do it for you!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2018-01-05-gauge-automated-testing/gauge.png" /></entry><entry><title type="html">3 Stages of API testing</title><link href="https://ordina-jworks.github.io/testing/2018/01/04/3-stages-api-testing.html" rel="alternate" type="text/html" title="3 Stages of API testing" /><published>2018-01-04T00:00:00+00:00</published><updated>2018-01-04T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/testing/2018/01/04/3-stages-api-testing</id><content type="html" xml:base="https://ordina-jworks.github.io/testing/2018/01/04/3-stages-api-testing.html">&lt;blockquote&gt;
  &lt;p&gt;Continuous Integration with automated testing is more and more incorporated in the culture of software delivery companies.
Running tests in different stages is a big part of it.
In this post, we’ll have a look at our three stages of API testing we are promoting at Ordina.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#setup&quot;&gt;About the setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#stage-1-unit-testing-the-communication-layer-front-and-back-end&quot;&gt;Stage 1: Unit testing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#stage-2-testing-against-a-mock-end&quot;&gt;Stage 2: Testing against a mock-end&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#stage-3-testing-full-environment&quot;&gt;Stage 3: Testing full environment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;setup&quot;&gt;Setup&lt;/h1&gt;

&lt;p&gt;The example we are going to use is part of a bigger microfrontend/microservice setup.
The front-end part of this example is the actual header of this microfrontend setup. It’s the top bar, developed as a separate front-end application.
This header provides the user with a search input field, where the user can search our database of competence centers.
This part is written in Angular (5).
The app gets dockerized after the unit tests (and build) are successfully completed.
It is served by a simple Express server inside a Docker container.
The back-end part provides the data of the competence centers.
It’s nothing more than a simple REST API written in TypeScript using the Nest.js framework.
The data provided by this service is a JSON file.
Its content is parsed into memory and is exposed through this REST API.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px;&quot; alt=&quot;Easy client server setup&quot; src=&quot;/img/3-stages-api-testing/setup.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The front-end (header) is providing the user with an input field.
This field allows the user to perform a search on our back-end service.
It also provides a &lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt; button, so the user can remove the content from the input field and reset the local cache of search results.
A second button is the &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; button.
When pressed, it will emit an event that can be listened to by other microfrontends.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filterCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPlatformBrowser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;platformId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'filterCCs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;needle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;needle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dispatchEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filterStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;needle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_updateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_updateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_ccService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;needle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resetSearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;needle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When resetting the content with the &lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt; button, we’re not sending a request.
When there’s nothing to search for, the result would be an empty array.
So we’re just resetting our local data to an empty array.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:925px;&quot; alt=&quot;Easy client server setup&quot; src=&quot;/img/3-stages-api-testing/header.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The back-end API is exposing three endpoints:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAllCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ccs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_ccsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAllCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/search'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'needle'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filtered&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_ccsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filtered&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/:id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getCC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_ccsService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The header will always trigger the endpoint at &lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt; with a needle.
When the needle is undefined (or an empty string), the search endpoint will return an empty list.&lt;/p&gt;

&lt;h1 id=&quot;stage-1-unit-testing-the-communication-layer-front-and-back-end&quot;&gt;Stage 1: Unit testing the communication layer (front and back-end)&lt;/h1&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px;&quot; alt=&quot;decoupled&quot; src=&quot;/img/3-stages-api-testing/unit.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The first stage is unit testing each component. This step is almost always part of the component’s build. Let’s take a quick look at each component.&lt;/p&gt;

&lt;h3 id=&quot;unit-testing-the-communication-part-of-the-ui&quot;&gt;Unit testing the communication part of the UI&lt;/h3&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:325px;&quot; alt=&quot;Easy client server setup&quot; src=&quot;/img/3-stages-api-testing/unit-client.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;For unit testing our front-end Angular 5 application, we are going to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;import { MockBackend } from '@angular/http/testing';&lt;/code&gt; from Angular itself to mock our back-end.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;TestBed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;configureTestingModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;CCService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// our service that is handling the communication&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;provide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XHRBackend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;useClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MockBackend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// our mock&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;compileComponents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Should query ccs with an observable'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Should return data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CCService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XHRBackend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ccService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mockBackend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;mockBackend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connections&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mockRespond&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ResponseOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})));&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ccService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getStats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ccs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tim.vierbergen@ordina.be'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Angular framework handles the communication part.
We want to mock the &lt;code class=&quot;highlighter-rouge&quot;&gt;$http&lt;/code&gt; call and see how we are handling the result.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;mockBackend&lt;/code&gt; is working inbetween our own code and the provided &lt;code class=&quot;highlighter-rouge&quot;&gt;$http&lt;/code&gt; part.
Every call is triggering the &lt;code class=&quot;highlighter-rouge&quot;&gt;mockBackend.connections&lt;/code&gt;, so the subscribers are triggered.
We are providing our own data and returning it as the response of the &lt;code class=&quot;highlighter-rouge&quot;&gt;$http&lt;/code&gt; call.&lt;/p&gt;

&lt;h3 id=&quot;unit-testing-the-communication-layer-of-the-service&quot;&gt;Unit testing the communication layer of the service&lt;/h3&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:325px&quot; alt=&quot;Easy client server setup&quot; src=&quot;/img/3-stages-api-testing/unit-service.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;For unit testing our back-end, we are using Jest.
&lt;a href=&quot;https://facebook.github.io/jest/&quot; target=&quot;_blank&quot;&gt;Jest&lt;/a&gt; is a testing framework by Facebook.
If you are interested in Jest, make sure to watch this blog, as a post around this topic is in the making.
Just as with our front-end, we trust the framework to correctly handle the communication itself.&lt;/p&gt;

&lt;p&gt;Our unit tests will start at the controller level of our API.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'searchCCs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'should return a filtered array of competence centers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ccsController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCCs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mockResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mockResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tim.vierbergen@ordina.be'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Where mockResponse is exactly that.
A simple mock of the response object.&lt;/p&gt;

&lt;h3 id=&quot;purpose-of-these-unit-tests&quot;&gt;Purpose of these unit tests&lt;/h3&gt;

&lt;p&gt;The goal of these unit tests is to make sure that the functions inside the components are working as expected.
This way the next stage of testing can only fail due to errors from outside this component.
However, to make sure this is the case, the mock data should be as close to production data when it comes to data specific characteristics.
This is more important for your front-end because you have less control over the data itself.
Your back-end API is only responding to request params that are defined in the specs.
So it’s easier to control them, or ignore unknowns.&lt;/p&gt;

&lt;h1 id=&quot;stage-2-testing-against-a-mock-end&quot;&gt;Stage 2: Testing against a mock-end&lt;/h1&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px&quot; alt=&quot;Easy client server setup&quot; src=&quot;/img/3-stages-api-testing/mock-end.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;In our second stage we are going to use a mock service to test against.
This means that we are going to mock ‘the other’ component by replacing it with an easy to use solution.
Although we are mocking some parts, this can be seen as an end-to-end test for each component itself.
We want to test our component by means of external services, just as it is supposed to work in a complete environment.&lt;/p&gt;

&lt;h3 id=&quot;mocking-our-back-end-to-test-our-front-end&quot;&gt;Mocking our back-end to test our front-end.&lt;/h3&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px&quot; alt=&quot;Mocking the back-end&quot; src=&quot;/img/3-stages-api-testing/front-end-mock.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;For our front-end component (user interface), we are going to mock the back-end.
Some front-ends are performing calls even without human interaction.
However, in most cases, front-end communication is depending on human interaction.
To end-to-end test this part, we are also in need of a framework to mock this user interaction.
&lt;a href=&quot;https://getgauge.io/&quot; target=&quot;_blank&quot;&gt;Gauge&lt;/a&gt;, &lt;a href=&quot;http://www.protractortest.org/&quot; target=&quot;_blank&quot;&gt;Protractor&lt;/a&gt; and &lt;a href=&quot;http://nightwatchjs.org/&quot; target=&quot;_blank&quot;&gt;Nightwatch.js&lt;/a&gt; are some examples of these frameworks.
Most of them depend on ‘Selenium WebDriver’.&lt;/p&gt;

&lt;h4 id=&quot;node-red-for-back-end-mocking&quot;&gt;Node-RED for back-end mocking&lt;/h4&gt;

&lt;p&gt;We are using Node-RED for our back-end mock because it’s so easy to setup and dockerize.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://nodered.org&quot; target=&quot;_blank&quot;&gt;Node-RED&lt;/a&gt; is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Node-RED is much more than just a tool to mock a back-end or any other service.
It comes with a great User Interface to define your flows and to deploy them on your server.&lt;/p&gt;

&lt;p&gt;For this example we will mock our three endpoints and return test data.
This test data can come from different sources.
Node-RED provides multiple ways of working with data.
You can include a simple MongoDB in your setup and read (even write) data from it.
Or you can just use functions where you hard code your data.
To keep it simple, we will use the latter in our setup.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:875px&quot; alt=&quot;Mocking the back-end&quot; src=&quot;/img/3-stages-api-testing/node-red-flow.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;A simple mock for a http-call consists out of three parts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The entry point definition itself (input)&lt;/li&gt;
  &lt;li&gt;The function that handles the data (can be static or database or …)&lt;/li&gt;
  &lt;li&gt;The response definition&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:425px;&quot; alt=&quot;Data function config&quot; src=&quot;/img/3-stages-api-testing/node-red-data.png&quot; /&gt;
&lt;/p&gt;

&lt;h4 id=&quot;user-interface-automation&quot;&gt;User interface automation&lt;/h4&gt;

&lt;p&gt;In this setup we are using Protractor for the e2e tests.
The user input is limited to an input field to trigger the search REST-call and two buttons, one button for clearing the input and one for sending the search string to other microfrontend components.&lt;/p&gt;

&lt;p&gt;Some of the use cases, such as ‘clearing’ the input, are already covered in the unit tests.
Depending on the effort you can always retest them in these e2e tests, but for this example, those are not important.
We want to trigger the search REST call by sending the search string &lt;code class=&quot;highlighter-rouge&quot;&gt;tim&lt;/code&gt; to the input field, and testing the outcome in the user interface.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:925px;&quot; alt=&quot;Data function config&quot; src=&quot;/img/3-stages-api-testing/search-e2e.png&quot; /&gt;
&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Searching with Tim should show 2 results'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setSeachText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mySearchString'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Input field should contain 'tim'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSearchText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Result should show 2 entries&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;will show the number 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getResultNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;will show a dropdown with 2 results&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getResultList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;conclusion-for-our-front-end&quot;&gt;Conclusion for our front-end&lt;/h4&gt;

&lt;p&gt;This mock e2e test is depending on a mock back-end and a user input automation system.
We are running these tests on our &lt;a href=&quot;https://www.gocd.org/&quot; target=&quot;_blank&quot;&gt;GoCD&lt;/a&gt; setup with dockerized elastic agents.
To run these tests, we are in need of a go-agent that can run these e2e test with Protractor, but we also need an environment where we can serve this front-end and the mocked service.
We are doing this with a go-agent that first spins up a docker-compose (for our front-end and mock-end), runs the protractor tests to this new environment and then brings down the environment when tests are finished.&lt;/p&gt;

&lt;h3 id=&quot;mocking-our-front-end-to-test-our-back-end&quot;&gt;Mocking our front-end to test our back-end.&lt;/h3&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:500px;&quot; alt=&quot;Mocking the back-end&quot; src=&quot;/img/3-stages-api-testing/back-end-mock.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;For testing our back-end service, we only need one other service.
This service will need to fire REST calls to our back-end service and analyse the response.
We can use &lt;a href=&quot;https://www.getpostman.com/&quot; target=&quot;_blank&quot;&gt;Postman&lt;/a&gt; to set this up.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Postman is the complete toolchain for API developers, used by more than 3 million developers and 30000 companies worldwide.
Postman makes working with APIs faster and easier by supporting developers at every stage of their workflow.
It’s available for Mac OS X, Windows, Linux and Chrome users.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can use Postman for more than just API testing.
In our setup, we need to create a testing scenario and just run it against our back-end service.
Postman provides a user interface to do so.
However, because we are running our tests on a cloud elastic go-agent, we need to find a way to automate this step.
Luckily, Postman also provides a command-line tool called &lt;a href=&quot;https://github.com/postmanlabs/newman&quot; target=&quot;_blank&quot;&gt;Newman&lt;/a&gt;.
Newman let’s you run your test scenarios from your command line.
You can first configure everything through the user interface and then just export the scenario so you can use it through the CLI.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can read more about Postman and Newman in our blogpost &lt;a href=&quot;https://ordina-jworks.github.io/testing/2016/09/16/Automation-testing-with-postman.html&quot; target=&quot;_blank&quot;&gt;API Testing with Postman and Newman&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below, you can find a part of the exported JSON configuration.
This part will send a GET request to the search endpoint, providing the search string &lt;code class=&quot;highlighter-rouge&quot;&gt;tim&lt;/code&gt;.
It will then analyse the response and check if the resulting array contains 2 entries and verifies the data.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Search existing ccs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;event&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;listen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;exec&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;var jsonData = JSON.parse(responseBody);&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;var firstResult = jsonData[0];&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;tests[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Status code is 200&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] = responseCode.code === 200;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;tests[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;4 results returned&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] = jsonData.length === 2;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;tests[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;First result contains id &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] ='id' in firstResult;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;tests[&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Cl name contains tim vierbergen&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;] = firstResult.cl === &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Tim Vierbergen&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;;&quot;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;request&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;raw&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:/ccs/search?needle=tim&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;port&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;ccs&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;search&quot;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;query&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;needle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;tim&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;equals&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;s2&quot;&gt;&quot;variable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&quot;header&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
		&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;response&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our continuous integration system, we are running these tests on a simple go-agent that can run these Newman tests.
This agent spins up our service container, runs these tests and bring down that container.&lt;/p&gt;

&lt;h4 id=&quot;conclusion-for-our-back-end&quot;&gt;Conclusion for our back-end&lt;/h4&gt;

&lt;p&gt;Testing this back-end service with a mock front-end is pretty easy.
Since our data is included in this service and it is limited to a simple JSON file, we are not running performance tests.
However, when your back-end needs to communicate with a database and/or make calculations, you can and should already include some performance tests in this stage.
You can, for example, include some &lt;a href=&quot;https://gatling.io/&quot; target=&quot;_blank&quot;&gt;Gatling&lt;/a&gt; tests in this stage and put some load on this service to check response times.&lt;/p&gt;

&lt;p&gt;The goal of this stage is to test the whole component, including the frameworks we are using for the communication.
It is still a decoupled system.
Failures in this stage will show you that some integrations are failing and you know exactly where to look for the errors.&lt;/p&gt;

&lt;h1 id=&quot;stage-3-testing-full-environment&quot;&gt;Stage 3: Testing full environment&lt;/h1&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px;&quot; alt=&quot;No more mocking&quot; src=&quot;/img/3-stages-api-testing/full-env.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We now want to end-to-end test the whole system.
We can use docker-compose to spin up this environment and then again run tests against the user interface.
It will communicate with the real back-end to query its data and show the results in the user interface.
Again, we want to run those tests on an elastic go-agent, so we are in need of an automated system.
Right, we already used this in the previous stage where we were testing the user interface against a mocked back-end.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:575px;&quot; alt=&quot;No more mocking&quot; src=&quot;/img/3-stages-api-testing/full-env-ui.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;This elastic go-agent must be able to run the Protractor tests (obviously). It will first need to spin up this environment, run the tests and tear down the environment. Same goes for performance tests in this stage.
You can use some frameworks to put extra load on your front-end to see how it’s behaving when it needs to handle more REST-calls for different parts.
Or you can run more instances of the user interface, resulting in more load on the back-end service.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Decoupling your system and running tests in different stages will make it easier to debug when something is going wrong.
Finding errors earlier will also save you some time and resources.
Being able to find bugs before taking it to the next stage and spinning up complete environments will reduce the cost of your system (cloud).&lt;/p&gt;

&lt;p&gt;Yes, writing tests can be more expensive in time and resources in the short run, but it will save you a lot more time and resources in the long run.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Tim&quot;, &quot;last_name&quot;=&gt;&quot;Vierbergen&quot;, &quot;permalink&quot;=&gt;&quot;/author/tim-vierbergen/&quot;, &quot;avatar&quot;=&gt;&quot;tim-vierbergen.jpg&quot;, &quot;twitter&quot;=&gt;&quot;vierbergentim&quot;, &quot;linkedin&quot;=&gt;&quot;tim-vierbergen-82557834&quot;, &quot;github&quot;=&gt;&quot;VeeTeeDev&quot;, &quot;title&quot;=&gt;&quot;Software Engineer&quot;, &quot;title2&quot;=&gt;&quot;Principal Consultant &amp; Competence Lead CI/CD&quot;, &quot;email&quot;=&gt;&quot;tim.vierbergen@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Tim is a senior developer and architect at Jworks Ordina Belgium. Tim has a DevOps culture mindset and is experienced in many different domains. From frontend to backend to pipelining and automation. Tim is keen on learning new technologies.&lt;br /&gt;&lt;br /&gt;Tim is a true sportsman and spends part of his free time running and working out. Tim is also very passionate about surfing and is learing how to snowboard.&quot;}</name><email>tim.vierbergen@ordina.be</email></author><category term="Testing" /><category term="Node-RED" /><category term="angular" /><category term="nestjs" /><category term="jest" /><category term="GoCD" /><category term="docker" /><category term="ci" /><summary type="html">Continuous Integration with automated testing is more and more incorporated in the culture of software delivery companies. Running tests in different stages is a big part of it. In this post, we’ll have a look at our three stages of API testing we are promoting at Ordina.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/3-stages-api-testing/overview.png" /></entry><entry><title type="html">JSConf Budapest 2017 Day 2</title><link href="https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-2.html" rel="alternate" type="text/html" title="JSConf Budapest 2017 Day 2" /><published>2018-01-03T00:00:00+00:00</published><updated>2018-01-03T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-2</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-2.html">&lt;h2 id=&quot;from-jsconf-budapest-with-love&quot;&gt;From JSConf Budapest with love&lt;/h2&gt;

&lt;p&gt;This year’s edition of JS Conf Budapest returned to the first venue at &lt;a href=&quot;http://www.urania-nf.hu/&quot;&gt;Urania National Movie theater&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Uránia Cinema in the middle of the city, near the party-district.
Designed by Henrik Schmahl in the late 1890’s, the interior is characterized by the ornamental motifs of the Venetian Gothic and Moor styles.
The place is listed as the world’s 3rd most beautiful cinema on Bored Panda.
Many tech conferences were hosted here recently, such as TEDx and Strech Conference, because of the unique atmosphere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JS Conf Budapest 2017 is hosted by &lt;a href=&quot;https://twitter.com/glenmaddern&quot;&gt;Glen Maddern&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/superhighfives&quot;&gt;Charlie Gleason&lt;/a&gt;.
At 10:00 the second day of the conference started. Enough time to drink great coffee and enjoy the breakfast.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img class=&quot;image fit&quot; src=&quot;/img/js-conf-budapest-2017/js-conf-budapest-2017-collage.jpg&quot; alt=&quot;JS Conf Budapest 2017 Photo Collage&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-2-talks&quot;&gt;Day 2: Talks&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#don-burks-mvc---what-a-web-app-and-a-mozart-violin-concerto-have-in-common&quot;&gt;Don Burks: MVC - What a web app and a Mozart Violin Concerto have in common&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#opher-vishnia-web-animation-from-disney-to-sass&quot;&gt;Opher Vishnia: Web Animation: from Disney to SASS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#imad-elyafi-migrating-pinterest-profiles-to-react&quot;&gt;Imad Elyafi: Migrating Pinterest profiles to React&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#laura-carvajal-yes-your-site-can-and-should-be-accessible-too-lessons-learned-in-building-ftcom&quot;&gt;Laura Carvajal: YES, your site can (and should) be accessible too. Lessons learned in building FT.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nikita-baksalyar-exploring-the-p2p-world-with-webrtc--javascript&quot;&gt;Nikita Baksalyar: Exploring the P2P world with WebRTC &amp;amp; JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vaidehi-joshi-goldilocks-and-the-three-code-reviews&quot;&gt;Vaidehi Joshi: Goldilocks And The Three Code Reviews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-2-morning&quot;&gt;Day 2: Morning&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Don Burks&quot; src=&quot;/img/js-conf-budapest-2017/speaker-don.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;don-burks-mvc---what-a-web-app-and-a-mozart-violin-concerto-have-in-common&quot;&gt;Don Burks: MVC - What a web app and a Mozart Violin Concerto have in common&lt;/h3&gt;

&lt;p&gt;You can find him on Twitter using the handle &lt;a href=&quot;https://twitter.com/don_burks&quot;&gt;@don_burks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;https://donburks.com/2017-10-27-jsconfbp-presentation/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Composers and developers of applications have more in common than you might think. In his talk, Don Burks pointed out the similarities in structure between music and apps.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;An app has a certain structure, being the architecture or the configuration of how all the different components interact with each other. 
The same applies to a composition, where the structure represents the different themes in the composition. 
When you look at an application, you see a system of databases, web servers, load balancers, etc. 
All these components are part of the system. Composers have the same vision on their composition.&lt;/p&gt;

&lt;p&gt;When creating the flow of an application, developers start from a certain point and move forward from one step to another, where each step describes an action or event in the app. 
These steps are like a melody in music that moves everything forward. 
Developers also think vertically to visualize the architecture of the application. 
All the technologies that are used, are represented in a vertical stack.&lt;/p&gt;

&lt;p&gt;The goal of the application is to deliver a complete package, where the horizontal problem-solving and the vertical architecture should be transparent to the user. 
In music it is important that every tune is played on time. 
The musician must deliver the right tune at the right time in order to create the music like the composer intended it to be. 
An app should run the same way: it has to deliver the right “tune” at the desired time to provide the best user experience.&lt;/p&gt;

&lt;p class=&quot;image&quot;&gt;&lt;img src=&quot;/img/js-conf-budapest-2017/don-burks-summary.png&quot; alt=&quot;Composing music is an art and so is coding&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The talk gave us more insight about various aspects in development, seen from a musician’s perspective. Composing music is an art and so is coding.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;opher-vishnia-web-animation-from-disney-to-sass&quot;&gt;Opher Vishnia: Web Animation: from Disney to SASS&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Opher Vishnia&quot; src=&quot;/img/js-conf-budapest-2017/speaker-opher.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can find Opher on Twitter using the handle &lt;a href=&quot;https://twitter.com/opherv&quot;&gt;@opherv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;http://slides.com/opherv/jsconfbp2017/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Opher is a designer and developer. In his talk, Opher shared his vision on how animations come to live.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;After we got introduced to Opher’s cute dog named &lt;em&gt;Blizzard&lt;/em&gt;, which grew up to a direwolf that can be casted directly in a TV show about dragons and an upcoming winter, Opher started his talk with some child nostalgia from Disney. He shared his amazement about the animations used in old animated movies such as &lt;em&gt;The Lion King&lt;/em&gt;, especially since they were hand drawn, and how these animation bring the characters and surroundings to life.&lt;/p&gt;

&lt;p&gt;Now, how do animations come to life? Two of the influencing factors are &lt;em&gt;Follow Through&lt;/em&gt; and &lt;em&gt;Overlapping Actions&lt;/em&gt;, which are part of the 12 basic principles of animation. The Follow Through principle defines that not every part of a moving entity moves the same way and stops the same way. Rather when one part of an entity stops, the other parts will follow through and come back. To illustrate this, Opher showed us an animation of a moving carrot that stopped suddenly, causing the leaves to go further before they stopped moving as well.&lt;/p&gt;

&lt;p&gt;The Overlapping Action principle means that when an entity is moving, its looser parts start moving later. The animation of the moving carrot clearly showed that the carrot itself moved in a smooth way, while the leaves were being dragged behind the carrot.&lt;/p&gt;

&lt;p&gt;These animation principles are applied by design specifications of huge companies such as the Material Design specs of Google. By taking these principles into account, you can give components and also the flow of your application more realism, for example when responding to events such as user input.&lt;/p&gt;

&lt;p&gt;Now, how can we implement these animations in our app? Opher discussed three implementations with us by means of an animation he has been working on:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CSS&lt;/li&gt;
  &lt;li&gt;GSAP, GreenSock Animation Platform&lt;/li&gt;
  &lt;li&gt;WAAPI, Web Animation API&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;css&quot;&gt;CSS&lt;/h4&gt;
&lt;p&gt;With the CSS implementation, Opher’s animation performed well across different devices and was directly understood by the browser. However, he stumbled upon the limitations of CSS, which made it tricky to implement complex animations and dynamic animations were even a complete no-go. Besides that, debugging was not a joy.&lt;/p&gt;

&lt;h4 id=&quot;gsap&quot;&gt;GSAP&lt;/h4&gt;
&lt;p&gt;GSAP provides a great, robust API to implement animations and even dynamic animations. It also deals with inconsistencies of browsers, which makes the life of a developer easier. Unfortunately, there are some downsides too. One of them is that you depend on an extra lib. Additionally, the JavaScript where GSAP is based on is implementation-sensitive and more advanced features of GSAP are not free.&lt;/p&gt;

&lt;h4 id=&quot;waapi&quot;&gt;WAAPI&lt;/h4&gt;
&lt;p&gt;WAAPI provides a native JavaScript API for animations. Basically you query for the desired elements in JS and call the animation function of those elements where you configure the animation. The animate function accepts two parameters: the keyframes and the duration of the animation. The keyframes should be an array of objects, where each object defines the state of the object at a certain time. The second parameter can also be replaced by an options object which enables you to configure the animation way better, such as adding delays or repeating the animation infinitely. The downside is that WAAPI is not supported by many browsers, but there is nothing a good polyfill cannot fix.&lt;/p&gt;

&lt;p&gt;So, which one should you use in your next project? As for most situations, this depends on your specific requirements and your expertise with the different implementations. It is recommended to keep these principles in mind when implementing animations in the future. With a little effort you can bring your own app to life, just like the animators of Disney did in their fairy tales.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;imad-elyafi-migrating-pinterest-profiles-to-react&quot;&gt;Imad Elyafi: Migrating Pinterest profiles to React&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Imad Elyafi&quot; src=&quot;/img/js-conf-budapest-2017/speaker-imad.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can find Imad on Twitter using the handle &lt;a href=&quot;https://twitter.com/eelyafi&quot;&gt;@eelyafi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;https://assets.contentful.com/nn534z2fqr9f/3RwYa1gv9SyQqsyscwws0A/be3e79ee3073cb973038395648bd249a/Imad_Elyafi_How_We_Migrated_Pinterest_Profiles_to_React.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A similar presentation was recorded on PolyConf 2017 and can be found on &lt;a href=&quot;https://www.youtube.com/watch?v=OtEsmImvYeo&quot;&gt;YouTube&lt;/a&gt;.
A detailed write-out of that presentation can be found on &lt;a href=&quot;https://medium.com/@Pinterest_Engineering/migrating-pinterest-profiles-to-react-479f4f7306aa&quot;&gt;Medium&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Imad Elyafi is a software engineer at Pinterest. 
In this talk Imad tells you the story of how Pinterest migrated to React, explaining the techniques they tried and challenges they faced.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;With the current availability of fantastic modern frameworks, Pinterest decided to migrate from their outdated Denzel framework to React.&lt;/p&gt;

&lt;h5 id=&quot;why-react&quot;&gt;Why React?&lt;/h5&gt;
&lt;p&gt;Imad started off by saying they had a list of requirements for the new framework.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Large developer community&lt;/li&gt;
  &lt;li&gt;Design patterns that are compatible with the existing stack to make the migration easier&lt;/li&gt;
  &lt;li&gt;Isomorphic rendering, therefore being able to reuse templates on server- and client-side&lt;/li&gt;
  &lt;li&gt;Performance&lt;/li&gt;
  &lt;li&gt;Developer Experience&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;road-to-react&quot;&gt;Road to React&lt;/h5&gt;
&lt;p&gt;Rewriting the whole app from scratch would be risky and expensive.
Also, Pinterest did not want to freeze code and stop shipping new features.
So they had to migrate a service that is constantly changing. 
A very complicated challenge Imad compares to changing the engines of an airplane while mid-flight.&lt;/p&gt;

&lt;p&gt;The solution was to rewrite the app piece by piece. 
That resulted in creating a so called hybrid app where two frameworks can exist together for the time it takes to migrate from the old framework to the new one.&lt;/p&gt;

&lt;p&gt;The very first step they had to take to make this hybrid app was to change their infrastructure and enable server-side JavaScript rendering.
Before they used the &lt;em&gt;Jinja&lt;/em&gt; templating engine for server-side rendering in Python and the JavaScript equivalent &lt;em&gt;Nunjucks&lt;/em&gt; for client-side rendering.
By also enabling Nunjucks rendering on a stand-alone NodeJS server, they now achieved pure isomorphic rendering with JavaScript on the server and on the client.&lt;/p&gt;

&lt;p&gt;Secondly, Pinterest had to render React components in their old Denzel framework. 
So they added React-specific bindings to Nunjucks’ templating language with a new keyword (component), to represent the “bridge” between Denzel and React.&lt;/p&gt;

&lt;p&gt;An example of a Nunjucks template with a React-Denzel bridge:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% if in_react %}
  {{ component('MyReactComponent', {pinId: '123'}) }}
{% else %}
  {{ module('MyDenzelComponent', pinId='123') }}
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lastly, they had to create adapters for the old data resources. 
To do so, they used a technique called High-Order Components (HOC).
A HOC is a function that takes a component and returns another component.&lt;/p&gt;

&lt;p&gt;This technique allowed them to compose components with a resource.
When the component is added to the DOM, it will create the resource and send a request to the API.
A callback function will update its state and trigger the rendering of the given component. 
With this approach, you can keep your components and data in sync all the time.&lt;/p&gt;

&lt;p&gt;You can read more about HOCs &lt;a href=&quot;https://reactjs.org/docs/higher-order-components.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;ui-experiments&quot;&gt;UI experiments&lt;/h5&gt;
&lt;p&gt;Imad explained that they used an A/B testing framework to measure the impact of the migration.
By doing this they managed to see consistent performance and engagement improvements, both of these metrics have improved by 20 percent.&lt;/p&gt;

&lt;p&gt;Last but not least, migrating to React was also great for the developers: less duplicated code, 
a single language on client and server and a large developer community Imad was definitely happy to be a part of.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;laura-carvajal-yes-your-site-can-and-should-be-accessible-too-lessons-learned-in-building-ftcom&quot;&gt;Laura Carvajal: YES, your site can (and should) be accessible too. Lessons learned in building FT.com&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Laura Carvajal&quot; src=&quot;/img/js-conf-budapest-2017/speaker-laura.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can find Laura on Twitter using the handle &lt;a href=&quot;https://twitter.com/lc512k&quot;&gt;@lc512k&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;https://speakerdeck.com/lc512k/yes-your-site-can-and-should-be-accessible&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Laura Carvajali works at the Financial Times. 
She's responsible for the accessibility of their website so that even blind people are able to use it.
In her talk, she explained how to achieve this.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Accessibility doesn’t happen by accident, you have to make it happen yourself.
A good starting point is to install pa11y (with npm).
It checks your HTML and points out where you can improve.
Color contrast issues, no or bad alt text for images and no related label for input fields are very common issues pa11y reports on.
Pa11y-ci can be used to integrate it with your CI and can break the build when there are errors.&lt;/p&gt;

&lt;p&gt;Next, there are some extra steps that can be taken.
The most expensive one is getting an external audit to get more feedback.
They have people that test with voice control, keyboard only mode, text to speech and other tools.
A cheaper option is to do customer research and user testing with users with various disabilities.
Instead of having other people doing the testing, you could learn how to use the tools for people with disabilities yourself.
This is of course the cheapest option.
A MacBook for example already has a lot of tools built in for people with disabilities!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-2-afternoon&quot;&gt;Day 2 afternoon&lt;/h2&gt;

&lt;h3 id=&quot;nikita-baksalyar-exploring-the-p2p-world-with-webrtc--javascript&quot;&gt;Nikita Baksalyar: Exploring the P2P world with WebRTC &amp;amp; JavaScript&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Nikita Baksalyar&quot; src=&quot;/img/js-conf-budapest-2017/speaker-nikita.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can find Nikita on Twitter using the handle &lt;a href=&quot;https://twitter.com/nbaksalyar&quot;&gt;@nbaksalyar&lt;/a&gt;.
A similar presentation as the one given at JSConf can be found &lt;a href=&quot;https://www.slideshare.net/nbaksalyar/exploring-decentralized-networks-with-webrtc&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Nikita Baksalyar is a Software Engineer at MaidSafe. During his talk he explained how we could use newer and not so new technologies to decentralize the web to its former state.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The web becomes increasingly centralized. We trust our private data to be stored in data centers despite news about data leaks. We exchange our messages and they are handled to three-letter agencies without you knowing about it. Can we do better and return the web to its decentralized roots? A combination of proven and emerging technologies like WebRTC can help us.&lt;/p&gt;

&lt;h5 id=&quot;what-is-webrtc&quot;&gt;What is WebRTC?&lt;/h5&gt;

&lt;p&gt;Whenever you visit a webpage, you’d typically enter a web address or click a link to view a page. A request is made to the server and that server provides the webpage you’ve requested. The key here is that you make a HTTP request to a locatable server and get a response back.
Let’s say that you want to do a video chat with mom. Mom’s computer is probably not a web-server, so how will she receive my audio and video data? Enter WebRTC.&lt;/p&gt;

&lt;p&gt;WebRTC stands for web real-time communications. It is a very exciting, powerful, and highly disruptive cutting-edge technology and standard. WebRTC leverages a set of plugin-free APIs that can be used in both desktop and mobile browsers and is progressively becoming supported by all major modern browser vendors.&lt;/p&gt;

&lt;p&gt;The primary benefit of WebRTC is real-time peer-to-peer audio and video communication. In order to communicate with another person (i.e., peer) via a web browser, each person’s web browser must agree to begin communication, know how to locate one another and transmit all multimedia communications in real-time.&lt;/p&gt;

&lt;h5 id=&quot;decentralized-networks&quot;&gt;Decentralized networks&lt;/h5&gt;

&lt;p&gt;When you think of networks you immediately start thinking of network providers, hubs and the likes. We are moving away from the initial idea of the internet, which was supposed to be a decentralized network. Now what is a decentralized network? A good example of a decentralized network is BitCoin. Data is shared over multiple nodes and those nodes get updated by sending update events.&lt;/p&gt;

&lt;h4 id=&quot;the-way-forward&quot;&gt;The way forward&lt;/h4&gt;

&lt;p&gt;The Internet started as a way to have data spread across the world to make sure that in case of a disaster, natural or human made, data would be preserved.
Peer 2 Peer communication is key in both a decentralized and the internet of old. We are making moves towards this redecentralization with the power of WebRTC and other more commonly known technologies such as BitTorrent for file sharing, Distributed git for code, etc.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;vaidehi-joshi-goldilocks-and-the-three-code-reviews&quot;&gt;Vaidehi Joshi: Goldilocks And The Three Code Reviews&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Vaidehi Joshi&quot; src=&quot;/img/js-conf-budapest-2017/speaker-vaidehi.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;You can find Vaidehi on Twitter using the handle &lt;a href=&quot;https://twitter.com/vaidehijoshi&quot;&gt;@vaidehijoshi&lt;/a&gt;.
The presentation can be found &lt;a href=&quot;http://slides.com/vaidehijoshi/better-code-reviews/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A similar presentation was recorded on RailsConf 2017 and can be found on &lt;a href=&quot;https://www.youtube.com/watch?v=-6EzycFNwzY&quot;&gt;YouTube&lt;/a&gt;.
A detailed write-out of that presentation can be found on &lt;a href=&quot;https://medium.com/@vaidehijoshi/crafting-better-code-reviews-1a5fc00a9312&quot;&gt;Medium&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
The original intent behind code reviews was that they would help us take collective ownership in the creation of our software.
In other words, we’d each be stakeholders in our development process by having a hand in controlling the quality of our products.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;While code reviews are generally understood as being a necessity to catch problems at the “lowest-value” stages (the time at which the least investment has been made and at which the cost to correct the problem is the lowest), Vaidehi Joshi asks whether they actually work and, if not, how can we try to improve upon the process.
Based on Code Complete by Steve McConnell, she identified 3 major formats of code review:&lt;/p&gt;

&lt;h5 id=&quot;1-inspections&quot;&gt;1. Inspections&lt;/h5&gt;

&lt;p&gt;Inspections are longer, deeper code reviews that typically catch about 60% of defects in a program.&lt;/p&gt;

&lt;h5 id=&quot;2-walkthroughs&quot;&gt;2. Walkthroughs&lt;/h5&gt;

&lt;p&gt;A walkthrough is shorter and is usually intended to provide teaching opportunities for senior developers to newer programmers, while giving junior developers the chance to change old methodologies.
Typically, they catch about 20 to 40% of the defects in a program.&lt;/p&gt;

&lt;h5 id=&quot;3-short-code-reviews&quot;&gt;3. Short code reviews&lt;/h5&gt;

&lt;p&gt;Short reviews are faster, but still in-depth. They focus on small changes, including single-line changes, that tend to be the most error-prone.&lt;/p&gt;

&lt;p&gt;McConnell’s research uncovered the following about shorter code review:&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;
An organization that introduced reviews for one-line changes found that its error rate went from 55 percent before reviews to 2 percent afterward.
A telecommunications organization in the late 80’s went from 86 percent correct before reviewing code changes to 99.6 percent afterward.
&lt;/blockquote&gt;

&lt;h4 id=&quot;but-what-do-developers-think-of-code-reviews&quot;&gt;But what do developers think of code reviews?&lt;/h4&gt;

&lt;p&gt;To know this, Vaidehi did a &lt;a href=&quot;https://twitter.com/vaidehijoshi/status/835597499813494788&quot;&gt;survey on Twitter&lt;/a&gt; and got about 500 responses.
The survey had questions with a scale of 1 to 10, where 1 was strongly disagree and 10 was strongly agree.
These are the stats:&lt;/p&gt;

&lt;h5 id=&quot;the-quantitive-data&quot;&gt;The quantitive data&lt;/h5&gt;

&lt;p&gt;The question “Code reviews are beneficial to my team” had a clear answer.
The average score was around 9 for most languages, with the top 3 containing Swift at an average of 9.46, Ruby at an average of 9.19 and JavaScript at an average of 9.1.&lt;/p&gt;
&lt;p class=&quot;image&quot;&gt;&lt;img src=&quot;/img/js-conf-budapest-2017/vaidehi-joshi-beneficial.jpeg&quot; alt=&quot;Code reviews are beneficial to my team&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another question was “How many pull requests are reviewed”, on which the majority answered that all pull request were reviewed.
However, about 10% of the answers indicated that pull requests where only reviewed when someone was explicitly requested to review.&lt;/p&gt;
&lt;p class=&quot;image&quot;&gt;&lt;img src=&quot;/img/js-conf-budapest-2017/vaidehi-joshi-how-many-pull-request-reviews.jpeg&quot; alt=&quot;How many pull requests are reviewed&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;the-qualitative-data&quot;&gt;The qualitative data&lt;/h5&gt;

&lt;p&gt;So, most developers think code reviews are needed and state that all code is being reviewed.
But what do they think of the quality of code reviews?&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Ultimately, what seemed to make or break a code review experience depended upon two things: how much energy was spent during the review process and how much substance the review itself had.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A code review was bad (and left a bad taste in the reviewer’s and reviewee’s mouth) if there wasn’t enough energy spent on the review, or if it lacked substance.
On the other hand, if a code review process was thorough and time was spent reviewing aspects of the code in a substantive way, it left a much more positive impression overall on both the reviewer and the reviewee.&lt;/p&gt;

&lt;h6 id=&quot;energy&quot;&gt;ENERGY&lt;/h6&gt;

&lt;p&gt;On the question “Who all is doing the review and how much time are they spending on it?”, a lot of things could be learned.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A developer blindly thumbs-up everything or the second or third reviewer is more likely to agree when already seeing an approval.
This makes the code review a formality, which doesn’t carry any weight.&lt;/li&gt;
  &lt;li&gt;A review is performed different depending on who submits.
Seniors get no feedback, while juniors are picked to death.
The reviews are unfair and can break confidence.&lt;/li&gt;
  &lt;li&gt;Commits are too big, which cause long review time, which in turn has a bad effect on future branches/PRs/merges.
Long review times take too much energy, which causes them to be postponed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;substance&quot;&gt;SUBSTANCE&lt;/h6&gt;

&lt;p&gt;The question “What exactly is someone saying, doing, or making another person feel while they review their code?” brought these answers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An assessor who takes all the feedback for his own account, having a mentality of “see red squiggle, fix red squiggle”.
They just change the code without second thought, as long as it makes the reviewer happy.&lt;/li&gt;
  &lt;li&gt;A reviewer’s comment is not clearly explained.
The reviewee just has to change their code to the reviewers vision.&lt;/li&gt;
  &lt;li&gt;A reviewer is unable to distinguish between stylistic preference and functional difference, which causes nitpicking at syntax.
Multiple reviewers might even have conflicting visions.&lt;/li&gt;
  &lt;li&gt;Words matter, an unkind review might break confidence.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;how-can-one-do-better&quot;&gt;How can one do better?&lt;/h4&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
A bad code review almost made me leave the company. A great code review leaves me feeling better equipped to tackle future projects.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Use PR templates.
Github provides some default templates for a PR, in which a couple of questions need to be answered short and clearly.&lt;/li&gt;
  &lt;li&gt;Include screenshots/gifs, providing more context on what is changed and why.&lt;/li&gt;
  &lt;li&gt;Use linters to eliminate style and syntax nitpicking.&lt;/li&gt;
  &lt;li&gt;Encapsulating PRs into small packages, aiming for small commits.&lt;/li&gt;
  &lt;li&gt;Assign specific reviewers, so they may provide valuable input and/or teach or learn something.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;but-even-more-important&quot;&gt;But even more important&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Review everyone: it’s a good horse that never stumbles.
A senior developer is not infallible and might even be overconfident.&lt;/li&gt;
  &lt;li&gt;Develop empathy: call out the good stuff, too.
Make people feel less vulnerable, push for a culture that values vulnerability — both in actions and in words.&lt;/li&gt;
  &lt;li&gt;Most importantly, iterate: start a conversation when feeling that the code review flow doesn’t work well.
Give everyone the chance to propose their suggestions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This survey answer summarized the importance of the last part perfectly:&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
I love code reviews in theory. In practice, they are only as good as the group that’s responsible for conducting them in the right manner.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;afterparty-at-extra-budapest-by-epam&quot;&gt;Afterparty at EXTRA Budapest by EPAM&lt;/h3&gt;

&lt;p&gt;EPAM invited everyone to chill, have some drinks and games at the EXTRA ruinpub after JSConf Budapest. Beer and a selection of soft drinks and juices are on the house.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;after-movie&quot;&gt;After Movie&lt;/h2&gt;
&lt;div class=&quot;responsive-video&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/fysiFabvGnQ&quot; frameborder=&quot;0&quot; gesture=&quot;media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;got-triggered&quot;&gt;Got triggered?&lt;/h2&gt;

&lt;p&gt;All talks were recorded by the JSconf team. You can view them &lt;a href=&quot;https://www.youtube.com/playlist?list=PL37ZVnwpeshH9ztZfHqvQhF1_Zm4VcCTD&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;/conference/2018/01/03/JS-Conf-Budapest-day-1.html&quot;&gt;Read our full report on day 1 of JS Conf Budapest 2017 here!&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Frédéric&quot;, &quot;last_name&quot;=&gt;&quot;Ghijselinck&quot;, &quot;github&quot;=&gt;&quot;fredericghijselinck&quot;, &quot;twitter&quot;=&gt;&quot;f_ghijselinck&quot;, &quot;linkedin&quot;=&gt;&quot;fredericghijselinck&quot;, &quot;permalink&quot;=&gt;&quot;/author/frederic-ghijselinck/&quot;, &quot;avatar&quot;=&gt;&quot;frederic-ghijselinck.jpg&quot;, &quot;title&quot;=&gt;&quot;Competence Lead JavaScript&quot;, &quot;email&quot;=&gt;&quot;frederic.ghijselinck@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Frédéric is a Senior developer at Ordina Belgium, focussing on Frontend Development with technologies as Angular and TypeScript. Next to frontend development, he continues to maintain his backend development skills using the Spring technology stack. Frédéric is also Competence Lead for the JavaScript Competence Center where he gives workshops, talks and courses about the newest technologies.&quot;}</name><email>frederic.ghijselinck@ordina.be</email></author><category term="Conference" /><category term="JS Conf Budapest" /><category term="JavaScript" /><category term="Conference" /><summary type="html">From JSConf Budapest with love</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/js-conf-budapest-2017/header.png" /></entry><entry><title type="html">JSConf Budapest 2017 Day 1</title><link href="https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-1.html" rel="alternate" type="text/html" title="JSConf Budapest 2017 Day 1" /><published>2018-01-03T00:00:00+00:00</published><updated>2018-01-03T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-1</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2018/01/03/JS-Conf-Budapest-day-1.html">&lt;h2 id=&quot;from-jsconf-budapest-with-love&quot;&gt;From JSConf Budapest with love&lt;/h2&gt;

&lt;p&gt;This year’s edition of JS Conf Budapest returned to the first venue at &lt;a href=&quot;http://www.urania-nf.hu/&quot;&gt;Urania National Movie theater&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Uránia Cinema in the middle of the city, near the party-district.
Designed by Henrik Schmahl in the late 1890’s, the interior is characterized by the ornamental motifs of the Venetian Gothic and Moor styles.
The place is listed as the world’s 3rd most beautiful cinema on Bored Panda. 
Many tech conferences were hosted here recently, such as TEDx and Strech Conference, because of the unique atmosphere.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JS Conf Budapest 2017 is hosted by &lt;a href=&quot;https://twitter.com/glenmaddern&quot;&gt;Glen Maddern&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/superhighfives&quot;&gt;Charlie Gleason&lt;/a&gt;.
First thing to do when entering the building was getting our badges.
Then we could have breakfast at some standing tables on the first floor.
For the coffee lovers, professional baristas served the best coffee possible. With a nice heart drawn on top if it.
At 9:45 the conference would officially start so we went to the conference room.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img class=&quot;image fit&quot; src=&quot;/img/js-conf-budapest-2017/js-conf-budapest-2017-collage.jpg&quot; alt=&quot;JS Conf Budapest 2017 Photo Collage&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-1-talks&quot;&gt;Day 1: Talks&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#bodil-stokke-you-have-nothing-to-lose-but-your-chains&quot;&gt;Bodil Stokke: You Have Nothing To Lose But Your Chains&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#stefan-judis-watch-your-back-browser-youre-being-observed&quot;&gt;Stefan Judis: Watch your back, Browser! You’re being observed&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jonathan-martin-async-patterns-to-scale-your-multicore-javascript-elegantly&quot;&gt;Jonathan Martin: Async patterns to scale your multicore JavaScript… elegantly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#madeleine-neumann-impostor-syndrome---am-i-suffering-enough-to-talk-about-it&quot;&gt;Madeleine Neumann: Impostor syndrome - am I suffering enough to talk about it?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#eirik-vullum-javascript-metaprogramming---es6-proxy-use-and-abuse&quot;&gt;Eirik Vullum: JavaScript Metaprogramming - ES6 Proxy Use and Abuse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sandrina-pereira-how-can-javascript-improve-your-css-mixins&quot;&gt;Sandrina Pereira: How can Javascript improve your CSS mixins&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#kacper-sokołowski-you-use-content-security-policy-dont-you&quot;&gt;Kacper Sokołowski: You use Content Security Policy, don’t you?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dan-callahan-practical-webassembly&quot;&gt;Dan Callahan: Practical WebAssembly&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#luke-bonaccorsi-how-i-ended-up-automating-my-curtains-and-shouting-at-my-laptop&quot;&gt;Luke Bonaccorsi: How I ended up automating my curtains and shouting at my laptop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-1-morning&quot;&gt;Day 1: Morning&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Bodil Stokke&quot; src=&quot;/img/js-conf-budapest-2017/speaker-bodil.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;bodil-stokke-you-have-nothing-to-lose-but-your-chains&quot;&gt;Bodil Stokke: You Have Nothing To Lose But Your Chains&lt;/h3&gt;

&lt;p&gt;You can find her on Twitter using the handle &lt;a href=&quot;https://twitter.com/bodil&quot;&gt;@bodil&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation she gave can be found at her &lt;a href=&quot;https://bodil.lol/join-us-now/&quot;&gt;personal website&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
A talk about the open source movement and the Free Software movement it grew out of
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The talk started with a story about Richard and a Xerox printer. Richard is a developer suffering from a minor
usability flaw in the Xerox printer at his office. Like the good developer he is, he wants to fix the issue and share
it with the world for everybody’s benefit. Therefore, he needs access to the code. However, it turns out that Xerox’ 
code for that particular printer is not publicly available. So, Richard can’t fix the issue. He will have to live 
with the inconvenience, as well as everyone at the office and even everyone using that same printer. The clue here is 
that a minor fix has to wait until someone at Xerox finds the time to solve the issue. Considering the minor status of 
the issue, it’s not even likely to happen… ever. With open source software this fix could be done by a motivated user 
in a few moments.&lt;/p&gt;

&lt;p&gt;This little intro sets the mood for the talk. One can consider it a bit opinionated, but there are with no doubt some 
powerful arguments for open source software. The talk also covers the free software movement that all started it and 
from which the open source movement branched of. The difference though is just in its philosophy. First of all, a common
misunderstanding is that free software does not mean one can get it with zero cost. It says that anyone can get the code 
and is free to do with it as pleased. Modify, change, sell or use it for another purpose. On the other hand, open source 
software provides some restrictions. Therefore, open source software is more popular and used more widely, because it 
gives control.&lt;/p&gt;

&lt;p&gt;For example: a concurring company might purchase your proprietary software and then have access to the code. They could 
copy your product and sell it for a lower price. This can be done with Free software, but open source software has some 
licenses defined to prevent this. In the talk some of these licenses are covered. I took the liberty to list some of them here with a 
short explanation. Click trough to see how easily it is to use them and have a legal basis to rely on.&lt;/p&gt;

&lt;p&gt;The most popular and widely used licenses are:&lt;/p&gt;
&lt;h4 id=&quot;apache-license-20&quot;&gt;&lt;a href=&quot;https://opensource.org/licenses/Apache-2.0&quot;&gt;Apache License 2.0&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Designed to be simple and easy to comply with, but more extensive than the previous versions. One can use the licensed 
software for any purpose, to change and redistribute. Changes can be distributed under other licenses, but unchanged 
code needs to be distributed under the same license.&lt;/p&gt;

&lt;h4 id=&quot;3-clause-bsd-license&quot;&gt;&lt;a href=&quot;https://opensource.org/licenses/BSD-3-Clause&quot;&gt;3-clause BSD license&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Designed to be simple and short. It allows unlimited redistribution for any purpose as long as its copyright notices 
and the license’s disclaimers of warranty are maintained. The license also contains a clause restricting use of the 
names of contributors for endorsement of a derived work without specific permission. In the 2-clause version that 
restriction is left out.&lt;/p&gt;

&lt;h4 id=&quot;gnu-general-public-license&quot;&gt;&lt;a href=&quot;https://opensource.org/licenses/GPL-3.0&quot;&gt;GNU General Public License&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Software under GNU GPL is free (as in: do with it as you please). The main restrictions defined by this license are that
you should always mention the authors of the software and it must always stay under the GNU GPL license.&lt;/p&gt;

&lt;h4 id=&quot;mit-license&quot;&gt;&lt;a href=&quot;https://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Created by Massachusetts Institute of Technology. It has one simple rule: the copyright statement should stay in any
copy of the software. ‘Copyright (c) &amp;lt;year&amp;gt; &amp;lt;copyright holders&amp;gt;’&lt;/p&gt;

&lt;h4 id=&quot;mozilla-public-license-20&quot;&gt;&lt;a href=&quot;https://opensource.org/licenses/MPL-2.0&quot;&gt;Mozilla Public License 2.0&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Code under MPL can be copied or changed, but must stay under MPL. The code can be combined with closed source files.&lt;/p&gt;

&lt;p&gt;Open source should be considered by many companies, since many can benefit from open source. SpaceX for example benefits 
from open source software, non the less their own code is closed. Another company by the same founder, Elon Musk, has 
its code publicly available: Tesla, the electric car manufacturer. Here’s a part I found on 
 &lt;a href=&quot;https://www.tesla.com/blog/all-our-patent-are-belong-you&quot;&gt;Tesla’s own blog&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
 At Tesla we felt compelled to create patents out of concern that the big car companies would copy our technology and 
 then use their massive manufacturing, sales and marketing power to overwhelm Tesla. We couldn’t have been more wrong. 
 The unfortunate reality is the opposite: electric car programs (or programs for any vehicle that doesn’t burn 
 hydrocarbons) at the major manufacturers are small to non-existent, constituting an average of far less than 1% of 
 their total vehicle sales.
 &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;While the competition might benefit from sharing your code, so does the world. This counts for Tesla in particular. 
While there might be a huge market for electric vehicles, we also need them as fast a possible. Open source software 
can help us achieve that goal.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Stefan Judis&quot; src=&quot;/img/js-conf-budapest-2017/speaker-stefan.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;stefan-judis-watch-your-back-browser-youre-being-observed&quot;&gt;Stefan Judis: Watch your back, Browser! You’re being observed&lt;/h3&gt;

&lt;p&gt;You can find Stefan on Twitter using the handle &lt;a href=&quot;https://twitter.com/stefanjudis&quot;&gt;@stefanjudis&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found on &lt;a href=&quot;https://speakerdeck.com/stefanjudis/watch-your-back-browser-youre-being-observed&quot;&gt;speakerdeck&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
To get information from a browser, you always had to do a pull. However, it's now also possible to ask the browser to push this information to you when something has changed by using observables!
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Verifying whether an element has become visible in the viewport is a very common use case. 
If you have to pull that information from the browser, it’s also a very heavy one since the piece of code doing that verification, is run each time a scroll event is fired. 
A better way would be to have the browser letting us know when an element has reached the viewport. 
Therefore, browsers offer a so called &lt;code class=&quot;highlighter-rouge&quot;&gt;IntersectionObserver&lt;/code&gt; through JavaScript. 
When creating an &lt;code class=&quot;highlighter-rouge&quot;&gt;IntersectionObserver&lt;/code&gt; you can pass it a callback function which will be fired when the observed elements enter or leave the viewport. 
Optionally you can also pass some options such as how much of the element should become visible/hidden in the viewport.
Unfortunately Safari doesn’t support this feature yet, but luckily, it’s polyfillable.&lt;/p&gt;

&lt;p&gt;There are several more observers such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MutationObserver&lt;/code&gt; - fires when an attribute of an observed element has changed (supported by all major browsers)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ResizeObserver&lt;/code&gt; - fires when an element is resized (behind a flag in Chrome, not yet supported in other major browsers)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PerformanceObserver&lt;/code&gt; - emits metrics about the performance of the web page (e.g. time to paint, &lt;code class=&quot;highlighter-rouge&quot;&gt;mark&lt;/code&gt; statements, navigation time…) (supported by all major browsers except Edge)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another great benefit of these observers is that all functions RxJS offers us (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;skip&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;pairwise&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; …), can be used as well!
The emitted values of the observers are collections so we can use functions such as &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;reduce&lt;/code&gt; there as well.
As mentioned in the presentation, these two combined gives us “Collection super powers!”.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Jonathan Martin&quot; src=&quot;/img/js-conf-budapest-2017/speaker-jonathan.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;jonathan-martin-async-patterns-to-scale-your-multicore-javascript-elegantly&quot;&gt;Jonathan Martin: Async patterns to scale your multicore JavaScript… elegantly&lt;/h3&gt;

&lt;p&gt;You can find Jonathan on Twitter using the handle &lt;a href=&quot;https://twitter.com/nybblr&quot;&gt;@nybblr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found on &lt;a href=&quot;https://speakerdeck.com/nybblr/async-patterns-to-scale-your-multicore-javascript-dot-dot-dot-elegantly&quot;&gt;speakerdeck&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
“JavaScript is single-threaded, so it doesn’t scale. JavaScript is a toy language because it doesn’t support multithreading.”
Outside (and inside) the web community, statements like these are common.

In a way, it’s true: JavaScript’s event loop means your program does one thing at a time.
This intentional design decision shields us from an entire class of multithreading woes,
but it has also birthed the misconception that JavaScript can’t handle concurrency.

In fact, JavaScript’s design is well-suited for solving a plethora of concurrency problems
without succumbing to the “gotchas” of other multithreaded languages. You might say that JavaScript is single-threaded…
just so it can be multithreaded!
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Before diving into solving concurrency problems, Jonathan explained how the (V8) JavaScript runtime actually works and reacts under the hood.
Next, he told us how the call stack, event loop WebAPIs and the callback queue works and how it handles synchronous (blocking) and asynchronous (non-blocking) code.
Explaining that would be an entire blog post on its own. Luckily he gave us a great link to a video that explains it very clearly, so I’ll add that instead.&lt;/p&gt;

&lt;div class=&quot;responsive-video&quot;&gt;
&lt;iframe src=&quot;https://player.vimeo.com/video/96425312&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/96425312&quot; target=&quot;_blank&quot;&gt;Philip Roberts: Help, I&amp;#039;m stuck in an event-loop.&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;what-is-concurrency-multi-threading-and-parallelism&quot;&gt;What is concurrency, multi threading and parallelism&lt;/h4&gt;
&lt;p&gt;So if you’ve just watched the video above, you know that JavaScript has one call stack (a single thread) and executes the functions in sequence.
With multithreading, as the word says, we have multiple threads.
This means that the program can assign these tasks to multiple stacks so that multiple tasks get executed at the same time.&lt;/p&gt;

&lt;p&gt;In a computer with a single processor and single core, to do multi threading,
the processor would alternate between these tasks really fast so that they appear to be happening at the same time.
Back in the early days of computing, this was the only option we had. This is called &lt;b&gt;concurrency&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;Around 2005 Intel, AMD and the other chip manufacturers started creating processors with multiple cores. 
This meant it could actually do multiple things at the same time, since it had multiple “brains”.
Processors could now assign different tasks to different cores and they would run at the same time. 
This is what we call &lt;b&gt;parallelism&lt;/b&gt;&lt;/p&gt;

&lt;h3 id=&quot;javascript-multi-threading-impossible&quot;&gt;JavaScript multi threading: impossible?&lt;/h3&gt;
&lt;p&gt;Although your JavaScript code is single-threaded and only does one thing at a time, the JavaScript Runtime and Web APIs are multithreaded!
When you pass a callback function to &lt;code class=&quot;highlighter-rouge&quot;&gt;setTimeout()&lt;/code&gt; or start an AJAX request with &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch()&lt;/code&gt;,
you are essentially spinning up a background thread in the runtime. 
Once that background thread completes and the current call stack finishes executing, your callback function is pushed onto the (now empty) call stack and run-to-completion.
So your JavaScript code itself is single-threaded, but it orchestrates legions of threads!&lt;/p&gt;

&lt;h3 id=&quot;es2017-async-functions&quot;&gt;ES2017 async functions&lt;/h3&gt;
&lt;p&gt;The title of his talk contained the word ‘Elegant’ and this is where the ES2017 async/await functionality comes in.
This is a great alternative for dealing with promises in JavaScript. 
If you’re a JavaScript developer you probably know what ‘callback hell’ is, or at least heard of it.
When writing complex programs, we could find ourselves in a situation where we would have to create multiple nested Promises to make sure we have the results of one call to continue with the next and so on.&lt;/p&gt;

&lt;p&gt;Async - declares an asynchronous function (&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;someName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Automatically transforms a regular function into a Promise.&lt;/li&gt;
  &lt;li&gt;When called, async functions resolve to whatever is returned in their body.&lt;/li&gt;
  &lt;li&gt;Async functions enable the use of await.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Await - pauses the execution of async functions. (&lt;code class=&quot;highlighter-rouge&quot;&gt;var result = await someAsyncCall();&lt;/code&gt;).&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;When placed in front of a Promise call, await forces the rest of the code to wait until that Promise finishes and returns a result.&lt;/li&gt;
  &lt;li&gt;Await works only with Promises, it does not work with callbacks.&lt;/li&gt;
  &lt;li&gt;Await can only be used inside async functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Promise approach&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getJSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// To make the function blocking we manually create a Promise.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://myurl.com/example.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// The data from the request is available in a .then block&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// We return the result using resolve.&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Async/Await approach&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// The async keyword will automatically create a new Promise and return it.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getJSONAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The await keyword saves us from having to write a .then() block.&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://myurl.com/example.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// The result of the GET request is available in the json variable.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// We return it just like in a regular synchronous function.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you’re a beginner with async functions and want to learn more this topic, check out &lt;a href=&quot;https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;t=362s&quot; target=&quot;_blank&quot;&gt;this video&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For further reading on how Jonathan used async patterns for multicore JavaScript, he has written an &lt;a href=&quot;https://www.bignerdranch.com/blog/cross-stitching-elegant-concurrency-patterns-for-javascript/&quot; target=&quot;_blank&quot;&gt;elaborate blog post&lt;/a&gt; about it. 
We suggest you go check it out!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Madeleine Neumann&quot; src=&quot;/img/js-conf-budapest-2017/speaker-madeleine.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;madeleine-neumann-impostor-syndrome---am-i-suffering-enough-to-talk-about-it&quot;&gt;Madeleine Neumann: Impostor syndrome - am I suffering enough to talk about it?&lt;/h3&gt;

&lt;p&gt;Madeleine is a front-end developer at 9Elements. She’s also a conference organiser of RuhrJS.
You can find Madeleine on Twitter using the handle &lt;a href=&quot;https://twitter.com/maggysche&quot;&gt;@maggysche&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found on &lt;a href=&quot;https://www.slideshare.net/MadeleineNeumann/jsconf-budapest-impostor-syndrome-am-i-suffering-enough-to-talk-about-it&quot;&gt;slideshare&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
The reason we struggle with insecurity is because we compare our behind the scenes with everyone else’s highlight reel.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Madeleine wanted to share her life experience with us. 
While she attended secondary school, Madeleine was the creepy loner. 
&lt;em&gt;‘What’s wrong with me?’&lt;/em&gt;, &lt;em&gt;‘What did I do wrong?’&lt;/em&gt; she asked herself on several occasions. 
&lt;em&gt;‘My behaviour must be wrong, I have to change’&lt;/em&gt;. 
So she decided to take up programming in high school and felt truly belonged.
After Madeleine graduated high school, she started to work as a front-end developer where she was learning a lot, very quickly! 
However, she soon discovered that the speed at which she was learning gradually stagnated. 
She had mixed feelings about her profession and abilities, thinking she did not belong there and had no idea what she was doing.
So, she decided to work even harder. 
All of her friends and colleagues congratulated her for her effort and hard work, but Madeleine still wasn’t satisfied. 
Shortly after, she learned about &lt;em&gt;“the imposter syndrome”&lt;/em&gt;.
Here are some common signs that someone might experience, where one feels like an imposter:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Does everyone overestimate you?&lt;/li&gt;
  &lt;li&gt;Do you tend to discuss yourself?&lt;/li&gt;
  &lt;li&gt;Do you compare your ability to those around you and think they’re more intelligent than you are?&lt;/li&gt;
  &lt;li&gt;Does the fear of failure freak you out?&lt;/li&gt;
  &lt;li&gt;Sometimes you’re afraid others will discover how much knowledge you really lack?&lt;/li&gt;
  &lt;li&gt;You can’t understand the compliments you receive?&lt;/li&gt;
  &lt;li&gt;You feel bad when you’re not ‘the best’ or at least ‘very special’?&lt;/li&gt;
  &lt;li&gt;You avoid evaluations if possible and have a dread of others evaluating you?&lt;/li&gt;
  &lt;li&gt;Do you focus more on what you haven’t done?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Madeleine discovered that her answer to all the previous questions was ‘yes’ and came to the conclusion she sabotaged herself. 
Now, how do you escape the ‘imposter zone’?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You aren’t born to live a life of another person&lt;/li&gt;
  &lt;li&gt;Learn to be a healthy perfectionist&lt;/li&gt;
  &lt;li&gt;Answer on the following question ‘What would I do, if I was not afraid?’&lt;/li&gt;
  &lt;li&gt;Ask for help&lt;/li&gt;
  &lt;li&gt;Mentor people what you’re doing&lt;/li&gt;
  &lt;li&gt;It’s a good thing to know, what you don’t know&lt;/li&gt;
  &lt;li&gt;Talk about it&lt;/li&gt;
  &lt;li&gt;Bribe your friends&lt;/li&gt;
  &lt;li&gt;Being wrong doesn’t make you a fraud&lt;/li&gt;
  &lt;li&gt;Focus on providing value and write it down&lt;/li&gt;
  &lt;li&gt;Keep a file of nice things someone has said about you&lt;/li&gt;
  &lt;li&gt;Stop commenting compliments&lt;/li&gt;
  &lt;li&gt;And finally, take time for yourself&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Madeleine learned that sometimes, it’s not that bad to be an imposter. 
Because if you are an imposter, you are an overachiever and you can surprise people with your talent.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-1-afternoon&quot;&gt;Day 1 afternoon&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Eirik Vullum&quot; src=&quot;/img/js-conf-budapest-2017/speaker-eirik.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;eirik-vullum-javascript-metaprogramming---es6-proxy-use-and-abuse&quot;&gt;Eirik Vullum: JavaScript Metaprogramming - ES6 Proxy Use and Abuse&lt;/h3&gt;

&lt;p&gt;You can find Eirik on Twitter using the handle &lt;a href=&quot;https://twitter.com/eiriklv&quot;&gt;@eiriklv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;http://slides.com/eiriklv/javascript-metaprogramming-with-proxies/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
This very interesting talk handles metaprogramming in JavaScript. Recently a new feature in ES6 was added to all 
major browsers, making JavaScript even more exciting! 
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;First of all, what is metaprogramming? According to wikipedia: &lt;em&gt;‘The ability to read, generate, analyse or transform 
other programs, and even modify itself while running’&lt;/em&gt;. That is clear enough in my opinion.&lt;/p&gt;

&lt;p&gt;In metaprogramming one can define 2 branches. The first branch could be described as macros to extend your language. 
This happens during compile/transpile time. The second branch is called reflection and happens at runtime. There are 
three forms of reflection:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Introspection: the ability to examine itself&lt;/li&gt;
  &lt;li&gt;Self-modification: the ability to alter its structure&lt;/li&gt;
  &lt;li&gt;Intercession: the ability to alter its behaviour&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In JavaScript they are possible by default. Lets call it a perk of this beautiful scripting language. However, it seldom 
results in readable code and you’ll probably need to write a lot of code for something we can now achieve in a much 
easier way.&lt;/p&gt;

&lt;p&gt;This talk covers some of the possibilities of proxies. Proxies couldn’t be used until recently, because it isn’t
polyfillable. It’s a feature that needs to be supported by the engine, where reflection truly happens. 
Therefore, nor typescript, nor babel, nor any other JavaScript preprocessor could solve that for you. 
By the way, preprocessors extend your language through macros, since their magic happens at transpile time.&lt;/p&gt;

&lt;p&gt;So what is this proxy I am so exited about? It’s called a proxy after the same principle we use in networking.
A proxy is middleware that intercepts interaction with an interface. Therefore, it has access to the communication 
stream and it needs access to the interface it’s routing to. That’s very similar to how we can use proxies in 
JavaScript. We can wrap any object with a proxy and define a handler. That handler is an object containing traps. 
A trap is a function that ‘mocks’ a property or function from the object that is being proxied. The proxy then knows 
which actions will be performed (before they are actually performed) and can choose how to handle them. It could do 
something totally different or even nothing at all.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// do what you desire (alter the value for example);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this wil execute the default setter&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// to indicate success&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;    
    &lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this wil execute the default getter&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// do what you desire&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mySquare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Square&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myProxySquare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mySquare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above handler will intercept all &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; calls to a proxied class. &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; methods here are so 
called traps. For what purposes can we use this? One of the main purposes is to create developer friendly interfaces. 
In the slides you’ll find some nice examples of great uses. My favorite is the url builder, it’s glorious in its 
simplicity, &lt;a href=&quot;http://slides.com/eiriklv/javascript-metaprogramming-with-proxies/#/46&quot;&gt;check it out here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now to wrap it all up, proxies are awesome, we can create powerful abstractions, be lazy and write less code and add
functionality in a transparent way. Even though it might seem like magic for anyone else than yourself and despite a 
small performance cost, it’s still perfect if you want to create clean interfaces for others to enjoy.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Sandrina Pereira&quot; src=&quot;/img/js-conf-budapest-2017/speaker-sandrina.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;sandrina-pereira-how-can-javascript-improve-your-css-mixins&quot;&gt;Sandrina Pereira: How can Javascript improve your CSS mixins&lt;/h3&gt;

&lt;p&gt;Sandrina is UI Developer at Farfetch. You can find Sandrina on Twitter using the handle &lt;a href=&quot;https://twitter.com/a_sandrina_p&quot;&gt;@a_sandrina_p&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All code can be found on her &lt;a href=&quot;https://github.com/sandrina-p/css-mixins-on-javascript-with-unit-tests&quot;&gt;GitHub&lt;/a&gt; page and the slides &lt;a href=&quot;https://docs.google.com/presentation/d/19v8jkgS_0F7DrGw-8SzHktzy7nkC9W9XCNDqeXzB2wg/edit#slide=id.g235012375a_0_0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
To write good tests, you have to know exactly what you need to do. 
When you know what to do, you do less.
When you do less, you can do better!
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;CSS and JavaScript work together more than ever these days. 
Using the good parts of both worlds ensures us that we can get better in web development. 
One of the reasons is because CSS primarily doesn’t have logic behind it. 
It’s simple and straightforward. 
However, when you have to start using logic in your CSS, you can for example add a loop with SCSS.
When you find yourself reusing the same CSS code over and over, you can write a &lt;em&gt;mixin&lt;/em&gt;.
However, at the end of the day, things can get ugly. 
Therefore, many programmers use PostCSS to write logic in their CSS code. 
There are more than half a million downloads per month of PostCSS plugins!&lt;/p&gt;

&lt;p&gt;Here’s how you write a mixin in CSS:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// index.css &lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mixin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 	&lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;avatar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;mixin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is how it works in JavaScript:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// size.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mixinNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
 	&lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// postcss.config.js&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...  &lt;/span&gt;
 	&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postcss-mixins'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)({&lt;/span&gt;
 			&lt;span class=&quot;na&quot;&gt;mixindsDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../src/mixins/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; 
		&lt;span class=&quot;c1&quot;&gt;// ... &lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// index.css&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;avatar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;mixin&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we can’t test logic in CSS, but in JavaScript we can!&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// size.test.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'../src/mixins/size.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Size returns width and height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'24px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'24px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'24px'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So you started to use CSS mixins with JavaScript and ended up with a folder full of mixins to improve your CSS. 
Instead of using a series of mixins in the CSS file itself that only improve &lt;strong&gt;your&lt;/strong&gt; project, 
we can create a custom property with the PostCSS plugin called &lt;em&gt;‘Boilerplate’&lt;/em&gt;.
Using that, we can do the following:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// index.css&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;avatar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// index.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postcss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postcss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;postcss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postcss-size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// let’s transform CSS with JS&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;walkDecls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'size'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 1. get the size value &lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 2. add “width” &amp;amp; “height” properties&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;decl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloneBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;decl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cloneBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 3. remove “size” property &lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;decl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// index.test.js&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./index.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;postcss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'postcss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sets width and height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'.foo { size: 1px; }'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'.foo { width: 1px; height: 1px; }'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After you execute the command &lt;code class=&quot;highlighter-rouge&quot;&gt;npm publish&lt;/code&gt; in the console, you aren’t only going to improve your own project, but everyone’s projects.
You can find other popular PostCSS plugins &lt;a href=&quot;https://github.com/postcss/postcss/blob/master/docs/plugins.md&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
That’s why I came here today. To share something that improved my project and might improve yours as well. 
I believe sharing is what make us better.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Kacper Sokołowski&quot; src=&quot;/img/js-conf-budapest-2017/speaker-kacper.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;kacper-sokołowski-you-use-content-security-policy-dont-you&quot;&gt;Kacper Sokołowski: You use Content Security Policy, don’t you?&lt;/h3&gt;

&lt;p&gt;Kacper is a front-end developer for Codewise.
He’s also a speaker and community organiser for KrakowJS.
You can find Kacper on Twitter using the handle &lt;a href=&quot;https://twitter.com/kaapa_s&quot;&gt;@kaapa_s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;http://slides.com/kaapa/deck/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Everyone knows that security is important right?
The biggest companies like Facebook and Google spend tons of money on bug bounty programs to ensure that their products are secure.
But is there a way that we can make our website prone to some of the most popular attacks?
There is one security mechanism which can help, but yet not everyone knows and uses it.
It’s called Content Security Policy.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Kacper started his presentation with an example to demonstrate why security is &lt;strong&gt;hard&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;
In 2005, Kamkar released the Samy worm, the first self-propagating cross-site scripting worm, onto MySpace.
The worm carried a payload that would display the string &quot;but most of all, Samy is my hero&quot; on a victim's profile and cause the victim to unknowingly send a friend request to Kamkar.
When a user viewed that profile, they would have the payload planted on their page.
Within just 20 hours of its October 4, 2005 release, over one million users had run the payload, making it the fastest spreading virus of all time.
&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4 id=&quot;xss&quot;&gt;XSS&lt;/h4&gt;
&lt;p&gt;Cross Site Scripting (XSS) was used to inject and spread the virus.
It’s a technique to inject and execute any JavaScript code in the context of the page.&lt;/p&gt;

&lt;p&gt;What can you do with XSS?&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Steal cookies&lt;/li&gt;
  &lt;li&gt;Steal localstorage data&lt;/li&gt;
  &lt;li&gt;Break the layout and style of the page&lt;/li&gt;
  &lt;li&gt;Whatever you can do with JavaScript…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find a lot of information about XSS and other vulnerabilities on this website: &lt;a href=&quot;https://www.owasp.org&quot;&gt;https://www.owasp.org&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;how-to-be-safe&quot;&gt;HOW TO BE SAFE?!&lt;/h4&gt;

&lt;h5 id=&quot;csp&quot;&gt;CSP&lt;/h5&gt;
&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks.&lt;/p&gt;

&lt;p&gt;Inline code is considered harmful so don’t use something like this:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello JSConfBP!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Instead externalise your code and do something like this:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;http-headers&quot;&gt;HTTP HEADERS&lt;/h5&gt;

&lt;p&gt;When you have externalised your scripts, you need to make sure your site only loads these scripts.
To enable CSP, you need to configure your web server to return the Content-Security-Policy HTTP header.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Specifying your policy:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Content-Security-Policy:&lt;/strong&gt; script-src ‘self’ http://google.com …&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Specifying your directive(s):&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Content-Security-Policy: &lt;strong&gt;script-src&lt;/strong&gt; ‘self’ http://google.com …&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Specifying the URL list:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Content-Security-Policy: script-src &lt;strong&gt;‘self’ http://google.com …&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Other directives you can use:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;connect-src&lt;/li&gt;
  &lt;li&gt;img-src&lt;/li&gt;
  &lt;li&gt;script-src&lt;/li&gt;
  &lt;li&gt;style-src&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can use the fallback directive for other resource types that don’t have policies of their own: &lt;strong&gt;default-src&lt;/strong&gt;&lt;/p&gt;

&lt;h5 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h5&gt;

&lt;p&gt;Many parts of your website &lt;strong&gt;will probably break&lt;/strong&gt; when you CSP for the first time.
So, start using it as early as possible!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Dan Callahan&quot; src=&quot;/img/js-conf-budapest-2017/speaker-dan.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;dan-callahan-practical-webassembly&quot;&gt;Dan Callahan: Practical WebAssembly&lt;/h3&gt;

&lt;p&gt;You can find Dan on Twitter using the handle &lt;a href=&quot;https://twitter.com/callahad&quot;&gt;@callahad&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;In this talk Dan explained what WebAssembly is all about. 
How it works, what it's for, the features that are already there and which features are yet to come.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;WebAssembly, what is it?
Well, according to &lt;a target=&quot;_blank&quot; href=&quot;http://webassembly.org/&quot;&gt;http://webassembly.org/&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote class=&quot;clear&quot;&gt;&quot;WebAssembly or wasm is a new portable, size- and load-time-efficient format suitable for compilation to the web.&quot;&lt;/blockquote&gt;

&lt;p&gt;&lt;b&gt;A compiler for the web:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Low-level, binary format for programs:&lt;br /&gt;
  WebAssembly is a fast, portable, compact, cross-browser binary format for compilation to the web.&lt;/li&gt;
  &lt;li&gt;It’s an &lt;i&gt;open standard&lt;i&gt; supported by &lt;i&gt;all major browsers&lt;/i&gt;. &lt;a href=&quot;https://caniuse.com/#feat=wasm&quot; target=&quot;_blank&quot;&gt;caniuse.com&lt;/a&gt;&lt;/i&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Direct successor of asm.js&lt;/li&gt;
  &lt;li&gt;General purpose virtual architecture&lt;/li&gt;
  &lt;li&gt;It allows new types of applications and heavy 3D games to run efficiently in browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Why?&lt;/h3&gt;

&lt;h5 id=&quot;performance&quot;&gt;Performance!&lt;/h5&gt;

&lt;p&gt;WebAssembly is a binary format for JS.
It has 2 major benefits:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The JS engine can skip the parsing step&lt;/li&gt;
  &lt;li&gt;It’s much more compact than the JS original source&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;portability&quot;&gt;Portability&lt;/h5&gt;

&lt;p&gt;At the moment of writing this blog, there are two languages that can compile into wasm, those are C/C++ and Rust.
This is great for portability since code written in C works on Mac, Linux and Windows.&lt;/p&gt;

&lt;h3 id=&quot;is-javascript-dead&quot;&gt;Is JavaScript dead?&lt;/h3&gt;

&lt;p&gt;JavaScript is alive, but its client-side monopoly is dead.
WebAssembly doesn’t replace JavaScript, but does expand the web and complements JavaScript:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;High Level (JS) vs. Low Level (WASM)&lt;/li&gt;
  &lt;li&gt;Text (JS) vs. Binary (WASM)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unity-support&quot;&gt;Unity Support&lt;/h3&gt;

&lt;p&gt;When it comes to creating 3D games, Unity also has experimental support for WebAssembly.&lt;br /&gt;
Check out &lt;b&gt;&lt;a target=&quot;_blank&quot; href=&quot;http://webassembly.org/demo/&quot;&gt;this demo&lt;/a&gt; of an in browser game&lt;/b&gt;&lt;/p&gt;

&lt;h3 id=&quot;unreal-engine&quot;&gt;Unreal Engine&lt;/h3&gt;

&lt;p&gt;This is a video of Epic’s “Zen Garden” demo running in Firefox.
The demo is built with WebAssembly and WebGL 2, both emerging standards that enable amazing video games and applications in the browser.&lt;/p&gt;

&lt;div class=&quot;responsive-video m-b&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/TwuIRcpeUWE?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&quot;what-about-older-browsers&quot;&gt;What about older browsers&lt;/h3&gt;

&lt;p&gt;Use asm.js as a fallback.&lt;/p&gt;

&lt;p&gt;When using Binaryen with Emscripten, it can load the compiled code using one of several methods.&lt;/p&gt;

&lt;p&gt;By setting &lt;code&gt;-s BINARYEN_METHOD='..'&lt;/code&gt; you can specify those methods, as a comma-separated list. 
It will try them one by one, which allows fallbacks.&lt;/p&gt;

&lt;p&gt;By default, it will try native support. The full list of methods is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;native-wasm: Use native binary wasm support in the browser.&lt;/li&gt;
  &lt;li&gt;interpret-s-expr: Load a .wast, which contains wasm in s-expression format and interpret it.&lt;/li&gt;
  &lt;li&gt;nterpret-binary: Load a .wasm, which contains wasm in binary format and interpret it.&lt;/li&gt;
  &lt;li&gt;interpret-asm2wasm: Load .asm.js, compile to wasm on the fly and interpret that.&lt;/li&gt;
  &lt;li&gt;asmjs: Load .asm.js and just run it, no wasm. Useful for comparisons or as a fallback for browsers without WebAssembly support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;can-i-compile-js-to-wasm&quot;&gt;Can I compile JS to WASM?&lt;/h3&gt;

&lt;p&gt;Don’t do that!
Browsers will still have native JavaScript VM along-side wasm.
There’s no reason to compile JS to wasm because you would also have to include a whole JavaScript VM.
The resulting code would be huge and slower than the JS VM natively provided.&lt;/p&gt;

&lt;h3 id=&quot;interesting-links&quot;&gt;Interesting Links:&lt;/h3&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://mbebenita.github.io/WasmExplorer/&quot; target=&quot;_blank&quot;&gt;Here&lt;/a&gt; you can translate C/C++ to WebAssembly and see the machine code generated by the browser.
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://youtu.be/3GHJ4cbxsVQ&quot; target=&quot;_blank&quot;&gt;YouTube video&lt;/a&gt; on what WebAssembly means for React
    &lt;/li&gt;
    &lt;li&gt;Tanks demo Unity game on &lt;a target=&quot;_blank&quot; href=&quot;http://webassembly.org/demo/&quot;&gt;webassembly.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Luke Bonaccors&quot; src=&quot;/img/js-conf-budapest-2017/speaker-luke.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&quot;luke-bonaccorsi-how-i-ended-up-automating-my-curtains-and-shouting-at-my-laptop&quot;&gt;Luke Bonaccorsi: How I ended up automating my curtains and shouting at my laptop&lt;/h3&gt;

&lt;p&gt;You can find Luke on Twitter using the handle &lt;a href=&quot;https://twitter.com/lukeb_uk&quot;&gt;@lukeb_uk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation can be found &lt;a href=&quot;https://docs.google.com/presentation/d/1lG5SmhHLaFwqw1jSKiyNkjipm2UwxSfaPvxKX-C8VVI/edit#slide=id.p&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;
Being lazy can lead to some great out of the box thinking and finding innovative solutions for common everyday stuff.
Luke talks about how he created a chatbot that automates things for him to make them a bit less common and/or boring.&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3 id=&quot;woodhouse&quot;&gt;Woodhouse&lt;/h3&gt;

&lt;div&gt;
&lt;p style=&quot;width: 60%;&quot;&gt;
&lt;img src=&quot;/img/js-conf-budapest-2017/luke-woodhouse.jpg&quot; alt=&quot;Woodhouse&quot; style=&quot;float: left; padding: 5px;&quot; height=&quot;100px&quot; /&gt;
He would have named it Jarvis, but since this would be a far worse butler than Jarvis was, he named it Woodhouse after the butler character from the tv-series 'Archer'.
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Around mid-2014 he started working on a chatbot that does little bits in his house. 
Basically, he put together a Raspberry Pi running JavaScript code that actually serves as a router with some core functionality built in like:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Broadcasting&lt;/li&gt;
  &lt;li&gt;Preference storage&lt;/li&gt;
  &lt;li&gt;Scheduling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s two types of modules that make it up:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Plugins do all the heavy-lifting so you can interface with hardware (as long as it’s possible with JavaScript or the node ecosystem) or get it to send a message. You could for example let it connect to API’s to get it to do your builds on your CI tools.&lt;/li&gt;
  &lt;li&gt;The interfaces which are basically chat systems. They are the way to talk to the chat bots. If the system has a way for you to build stuff for it in JavaScript, you can connect to it and let it do stuff on for example: Facebook, Slack, HipChat and many more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;open-source&quot;&gt;Open source&lt;/h3&gt;
&lt;p&gt;All of it is open source (MIT) and is avaiable on &lt;a href=&quot;https://github.com/Woodhouse/core&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;. 
It’s written in JavaScript and runs on NodeJs.&lt;/p&gt;

&lt;h3 id=&quot;automating-lamps&quot;&gt;Automating Lamps&lt;/h3&gt;
&lt;div class=&quot;responsive-video m-b&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/5YNmMdTzfaQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Sending a message in a chat application that gets picked up by Woodhouse and he/it then turns on his lamps at home.
So, as he walks down the street getting to his house, instead of coming home and stumbling over things searching for the light switch in the dark,
he can just send a message and the lights will be on when he gets there.&lt;/p&gt;

&lt;p&gt;
&lt;img src=&quot;/img/js-conf-budapest-2017/luke-lamp-plugs.jpg&quot; alt=&quot;Lamp plugs image&quot; class=&quot;image left fit&quot; /&gt;
&lt;b&gt;Lamp plugs&lt;/b&gt; (they are from China, so super safe, right?). Maybe not, but they cost about £15 and are great for poking around.
After doing so, he found out that there was a Google group that had been hacking around with them and found the SSH password for it.
It turned out it runs &lt;a href=&quot;https://openwrt.org/&quot; target=&quot;_blank&quot;&gt;OpenWrt&lt;/a&gt; which is a router firmware based on Linux.
So, after being able to SSH into it and work with the Linux installed on it, you can run basic scripts on it (it has limited memory so you can’t just install everything you like on it).
But most importantly, it’s got a web server built into it, so you can hit an endpoint and make the relay turn on. That’s how his relay works.
There’s an endpoint on the plug and when he goes to that endpoint, it switches it on or off depending on a parameter.
&lt;/p&gt;

&lt;h3 id=&quot;automating-the-curtains&quot;&gt;Automating the curtains&lt;/h3&gt;
&lt;p&gt;For giving talks about the application, he wanted to add something new to the application and so… he automated his curtains.&lt;/p&gt;

&lt;div class=&quot;responsive-video m-b&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/Crudcsaheoc&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;The setup and parts for it are very basic and simple. It’s basically some string, plastic wheels, a servo and an esp82266.&lt;/p&gt;

&lt;div style=&quot;display: block;&quot;&gt;
&lt;p&gt;
&lt;img src=&quot;/img/js-conf-budapest-2017/luke-esp8266.jpg&quot; alt=&quot;esp8266 board and components&quot; class=&quot;image left fit&quot; /&gt;
The esp8266 is a wireless Arduino type board, but the cheap Chinese version so you can buy loads of them and connect them
to your network. So for about £2 each you can control stuff over your network from anywhere. 
It runs &lt;a href=&quot;https://mongoose-os.com/&quot; target=&quot;_blank&quot;&gt;Mongoose OS&lt;/a&gt;
which lets you write JavaScript on your hardware, it takes away a lot of the complexities of the lower level code and lets you use a language you know.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;shouting-at-his-laptop&quot;&gt;Shouting at his laptop&lt;/h3&gt;

&lt;p&gt;Not out of frustration or anything like that. Besides the chatbot, he wanted to add voice control to the application so that he could tell his laptop to open/close the curtains or turn on/off the lights.&lt;/p&gt;

&lt;div class=&quot;responsive-video m-b&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/CQzn16TzZ0w&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;It uses a NodeJs library for offline ‘hot words’ detection. So instead of having it constantly listening to him,
he can just shout ‘Woodhouse’ which will make it reply to say that it’s listening. The rest of the complex speech to text is done by Google,
since they have a lot more data than him. There are open source systems for doing speech to text, but you would have to train it yourself and well, we’re doing all this because we want to be lazy…
So he created a few of these voice control units and spread them around the house and let them connect to one central instance. So he can activate it from wherever he is in the house.&lt;/p&gt;

&lt;h3 id=&quot;conclusion-1&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;So instead of being lazy, he admits to being the stupid kind of lazy. 
He has spent about hundreds of hours coding for it to do simple stuff.
So it’s not really about being lazy, but more being not driven to do those simple things.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;party-feat-livejs-by-sinnerschrader&quot;&gt;Party feat Live:JS by SINNERSCHRADER&lt;/h3&gt;

&lt;p&gt;After a long day of JavaScript fun we were invited to a rooftop party at &lt;a href=&quot;https://corvinteto.hu/&quot;&gt;Corvinteto&lt;/a&gt; located near the venue.
Imagine a party with awesome visuals, music &amp;amp; beats, and lights - all powered and created by JavaScript!
More info about the concept can be found here: &lt;a href=&quot;http://livejs.network&quot;&gt;LiveJS&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;responsive-video&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/G4nIMBWy1bQ&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;day-1-conclusion&quot;&gt;Day 1: Conclusion&lt;/h2&gt;

&lt;p&gt;At the first day of the conference we were already inspired by some good talks. Wondering what day 2 would bring.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/conference/2018/01/03/JS-Conf-Budapest-day-2.html&quot;&gt;Read our full report on day 2 of JS Conf Budapest 2017 here!&lt;/a&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Frédéric&quot;, &quot;last_name&quot;=&gt;&quot;Ghijselinck&quot;, &quot;github&quot;=&gt;&quot;fredericghijselinck&quot;, &quot;twitter&quot;=&gt;&quot;f_ghijselinck&quot;, &quot;linkedin&quot;=&gt;&quot;fredericghijselinck&quot;, &quot;permalink&quot;=&gt;&quot;/author/frederic-ghijselinck/&quot;, &quot;avatar&quot;=&gt;&quot;frederic-ghijselinck.jpg&quot;, &quot;title&quot;=&gt;&quot;Competence Lead JavaScript&quot;, &quot;email&quot;=&gt;&quot;frederic.ghijselinck@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Frédéric is a Senior developer at Ordina Belgium, focussing on Frontend Development with technologies as Angular and TypeScript. Next to frontend development, he continues to maintain his backend development skills using the Spring technology stack. Frédéric is also Competence Lead for the JavaScript Competence Center where he gives workshops, talks and courses about the newest technologies.&quot;}</name><email>frederic.ghijselinck@ordina.be</email></author><category term="Conference" /><category term="JS Conf Budapest" /><category term="JavaScript" /><category term="Conference" /><summary type="html">From JSConf Budapest with love</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/js-conf-budapest-2017/header.png" /></entry><entry><title type="html">Securing your cloud-native microservice architecture in Spring: part 2</title><link href="https://ordina-jworks.github.io/microservices/2017/12/30/Secure-your-architecture-part2.html" rel="alternate" type="text/html" title="Securing your cloud-native microservice architecture in Spring: part 2" /><published>2017-12-30T00:00:00+00:00</published><updated>2017-12-30T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/microservices/2017/12/30/Secure-your-architecture-part2</id><content type="html" xml:base="https://ordina-jworks.github.io/microservices/2017/12/30/Secure-your-architecture-part2.html">&lt;p&gt;Since the rise of the digital era, most enterprises keep their data in a digital format.
But if their sensitive data lacks security, it can cause the data to be unreliable, unstable and unavailable to their business.
We have to be prepared if an attacker breaches into our network and tries to hack our sensitive data.
Whether it is in motion or at rest, encrypting our data and using the proper protection mechanisms will make it worthless for the hacker to use.&lt;/p&gt;

&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ordina-jworks.github.io/microservices/2017/09/26/Secure-your-architecture-part1.html&quot;&gt;Securing your cloud-native microservice architechture in Spring: Part 1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cryptographic-algorithms&quot;&gt;Cryptographic Algorithms&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#key-mechanics&quot;&gt;Key Mechanics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cloud-hosted-key-management-service&quot;&gt;Cloud-hosted Key management service&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#spring-cloud-config-server&quot;&gt;Spring Cloud Config Server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cryptographic-algorithms&quot;&gt;Cryptographic Algorithms&lt;/h2&gt;
&lt;p&gt;When implementing our application, every programming language will provide us with a set of known libraries for cryptographic algorithms. 
A big flaw is implementing an algorithm by yourself, the known algorithms have been reviewed, patched and been known for their excellent security. 
These are the most used types that you can use for encryption at rest:&lt;/p&gt;

&lt;h3 id=&quot;symmetric-encryption&quot;&gt;Symmetric Encryption&lt;/h3&gt;
&lt;p&gt;The key used in encrypting data at rest is used for both encrypting and decrypting the data.
This key becomes very vulnerable if anyone gets a hold on it.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Well known: &lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot; target=&quot;_blank&quot;&gt;Advanced Encryption Standard encryption&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;asymmetric-encryption&quot;&gt;Asymmetric Encryption&lt;/h3&gt;
&lt;p&gt;In asymmetric encryption, a pair of keys are used. A public key that is exposed and encrypts your data and a private key that is only known by the owner that decrypts your data.
This key-pair can also be used to sign your data, so the application knows that it can trust the source of the data.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Well known:  &lt;a href=&quot;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&quot; target=&quot;_blank&quot;&gt;Rivest–Shamir–Adleman encryption&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;key-mechanics&quot;&gt;Key Mechanics&lt;/h2&gt;
&lt;p&gt;Encryption keys are another aspect of encryption, handling the keys becomes just as sensitive as the data itself. 
That’s why we need mechanisms on how keys are stored and shared so attackers can’t get a hold on them.&lt;/p&gt;

&lt;h3 id=&quot;key-rotation&quot;&gt;Key rotation&lt;/h3&gt;
&lt;p&gt;Encryption key rotation will provide protection especially when the certificate expires, is corrupted or the key management admin is no longer part of the company. 
Lets say, you got a good eye at detecting patterns and detect that the same key is being used for encrypting data.
To avoid this, you rotate your keys, and every time the same data field is encrypted it will result in a different encrypted message.&lt;/p&gt;

&lt;h3 id=&quot;json-web-key-set&quot;&gt;JSON Web Key (Set)&lt;/h3&gt;
&lt;p&gt;We discussed in the &lt;a href=&quot;https://ordina-jworks.github.io/microservices/2017/09/26/Secure-your-architecture-part1.html&quot;&gt;previous post&lt;/a&gt; about retrieving a JWK(S) to verify our JSON Web Token in our microservice. 
A JWK is a JSON object that represents a cryptographic key that consists of information to verify a JWT. 
If you like to dive into signing JSON documents you can check out this blog post on &lt;a href=&quot;https://ordina-jworks.github.io//security/2016/03/12/Digitally-signing-your-JSON-documents.html#jwk&quot; target=&quot;_blank&quot;&gt;Digitally signing your JSON documents&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;JWKS example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;keys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RSA&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;use&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sig&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x5c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MIIC+DCCAeCgAwIBAgIJBIGjYW6hFpn2MA0GCSqGSIb3DQEBBQUAMCMxITAfBgNVBAMTGGN1c3RvbWVyLWRlbW9zLmF1dGgwLmNvbTAeFw0xNjExMjIyMjIyMDVaFw0zMDA4MDEyMjIyMDVaMCMxITAfBgNVBAMTGGN1c3RvbWVyLWRlbW9zLmF1dGgwLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMnjZc5bm/eGIHq09N9HKHahM7Y31P0ul+A2wwP4lSpIwFrWHzxw88/7Dwk9QMc+orGXX95R6av4GF+Es/nG3uK45ooMVMa/hYCh0Mtx3gnSuoTavQEkLzCvSwTqVwzZ+5noukWVqJuMKNwjL77GNcPLY7Xy2/skMCT5bR8UoWaufooQvYq6SyPcRAU4BtdquZRiBT4U5f+4pwNTxSvey7ki50yc1tG49Per/0zA4O6Tlpv8x7Red6m1bCNHt7+Z5nSl3RX/QYyAEUX1a28VcYmR41Osy+o2OUCXYdUAphDaHo4/8rbKTJhlu8jEcc1KoMXAKjgaVZtG/v5ltx6AXY0CAwEAAaMvMC0wDAYDVR0TBAUwAwEB/zAdBgNVHQ4EFgQUQxFG602h1cG+pnyvJoy9pGJJoCswDQYJKoZIhvcNAQEFBQADggEBAGvtCbzGNBUJPLICth3mLsX0Z4z8T8iu4tyoiuAshP/Ry/ZBnFnXmhD8vwgMZ2lTgUWwlrvlgN+fAtYKnwFO2G3BOCFw96Nm8So9sjTda9CCZ3dhoH57F/hVMBB0K6xhklAc0b5ZxUpCIN92v/w+xZoz1XQBHe8ZbRHaP1HpRM4M7DJk2G5cgUCyu3UBvYS41sHvzrxQ3z7vIePRA4WF4bEkfX12gvny0RsPkrbVMXX1Rj9t6V7QXrbPYBAO+43JvDGYawxYVvLhz+BJ45x50GFQmHszfY3BR9TPK8xmMmQwtIvLu1PMttNCs7niCYkSiUv2sc2mlq1i3IashGkkgmo=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;yeNlzlub94YgerT030codqEztjfU_S6X4DbDA_iVKkjAWtYfPHDzz_sPCT1Axz6isZdf3lHpq_gYX4Sz-cbe4rjmigxUxr-FgKHQy3HeCdK6hNq9ASQvMK9LBOpXDNn7mei6RZWom4wo3CMvvsY1w8tjtfLb-yQwJPltHxShZq5-ihC9irpLI9xEBTgG12q5lGIFPhTl_7inA1PFK97LuSLnTJzW0bj096v_TMDg7pOWm_zHtF53qbVsI0e3v5nmdKXdFf9BjIARRfVrbxVxiZHjU6zL6jY5QJdh1QCmENoejj_ytspMmGW7yMRxzUqgxcAqOBpVm0b-_mW3HoBdjQ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AQAB&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NjVBRjY5MDlCMUIwNzU4RTA2QzZFMDQ4QzQ2MDAyQjVDNjk1RTM2Qg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;x5t&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NjVBRjY5MDlCMUIwNzU4RTA2QzZFMDQ4QzQ2MDAyQjVDNjk1RTM2Qg&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Explanation properties:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alg&lt;/code&gt;: is the algorithm for the key&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kty&lt;/code&gt;: is the key type&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt;: is how the key was meant to be used. For the example above sig represents signature.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x5c&lt;/code&gt;: is the x.509 certificate chain&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;: is the exponent for a standard pem&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;: is the modulus for a standard pem&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kid&lt;/code&gt;: is the unique identifier for the key&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x5t&lt;/code&gt;: is the thumbprint of the x.509 cert (SHA-1 thumbprint)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cloud-hosted-key-management-service&quot;&gt;Cloud-hosted Key management service&lt;/h2&gt;
&lt;p&gt;KMS is a fully managed service that allows you to manage your encryption keys in the cloud.
Most of these KMSs offer the best way for encryption and generate, rotate and destroy your keys. 
But the KMS is vendor lock-in so all your keys will stay on the platform.
To avoid vendor lock-in, we can implement our own open source version for managing our encryption keys.&lt;/p&gt;

&lt;p&gt;A few examples to get an idea of KMS:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/kms/&quot; target=&quot;_blank&quot;&gt;Google Cloud KMS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/kms/&quot; target=&quot;_blank&quot;&gt;AWS KMS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/services/key-vault/&quot; target=&quot;_blank&quot;&gt;Azure Vault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A few examples of open-source variants:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.spring.io/spring-cloud-config/&quot; target=&quot;_blank&quot;&gt;Spring Cloud Config Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vaultproject.io/&quot; target=&quot;_blank&quot;&gt;HashiCorp’s Vault&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://square.github.io/keywhiz/&quot; target=&quot;_blank&quot;&gt;Keywhiz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;spring-cloud-config-server&quot;&gt;Spring Cloud Config Server&lt;/h2&gt;
&lt;p&gt;The Spring Cloud Config Server provides a centralized external configuration management backed optionally by a Git repository or database.
Using a REST API for external configuration, Config Server supports encryption and decryption of properties and yml files. 
First step is downloading the Java Cryptography Extension on our local pc.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;JCE provides a framework and implementation for encryption, key generation, key agreement and message authentication code algorithms. 
You’re not installing JCE itself, because it’s packaged within the Java SE binary.
However, you do need to update its policy files from time to time.
Downloads are available for Java &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html&quot; target=&quot;_blank&quot;&gt;6&lt;/a&gt;, &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html&quot; target=&quot;_blank&quot;&gt;7&lt;/a&gt; and &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html&quot; target=&quot;_blank&quot;&gt;8&lt;/a&gt;.
This will allow the config server to use the encryption tool of the JCE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the download, the next step will be securing the config server by adding Spring Security to the classpath and configuring your Basic/OAuth2 authentication.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-maven&quot; data-lang=&quot;maven&quot;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-boot-starter-security&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;key-management&quot;&gt;Key Management&lt;/h3&gt;
&lt;p&gt;The config server supports encryption and decryption with a symmetric key or an asymmetric key-pair.
The choice of which key you will need is within your security terms. 
The symmetric key is the easiest way to set up but less secure than the asymmetric one. 
To set up a symmetric key, you just assign a string to the key holder: 
&lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.key=&amp;lt;key&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To configure these asymmetric keys, we will need a keystore created by the keytool utility from the JDK.
The public key will encrypt and the private key will decrypt your data.&lt;/p&gt;

&lt;p&gt;To create a keystore you can do something like this in your command line:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; keytool &lt;span class=&quot;nt&quot;&gt;-genkeypair&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-alias&lt;/span&gt; &amp;lt;keyname&amp;gt; &lt;span class=&quot;nt&quot;&gt;-keyalg&lt;/span&gt; RSA &lt;span class=&quot;nt&quot;&gt;-keysize&lt;/span&gt; 4096 &lt;span class=&quot;nt&quot;&gt;-sigalg&lt;/span&gt; SHA512withRSA &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-dname&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;CN=Config Server,OU=JWorks,O=Ordina,L=Mechelen,S=State,C=BE&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-keypass&lt;/span&gt; &amp;lt;secret&amp;gt; &lt;span class=&quot;nt&quot;&gt;-keystore&lt;/span&gt; config-server.jks &lt;span class=&quot;nt&quot;&gt;-storepass&lt;/span&gt; &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will generate a keystore for the config server to use. 
Place it in your repository project and configure it in your yml.&lt;/p&gt;

&lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-exclamation-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Warning:&lt;/b&gt; Be aware if you package your keystore within your application jar/war file, the same encryption keys will be used across all of your environments!&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
Example yml in the config server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;na&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;key-store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;classpath:config-server.jks // resource location&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;password&amp;gt; // to unlock the keystore&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;alias&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;config-server-key // to identify which key in the store is to be used&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;lt;secret&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;encryption&quot;&gt;Encryption&lt;/h3&gt;
&lt;p&gt;To encrypt the data, start up your config server locally and enter this in your command line.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;SECRET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; POST &lt;span class=&quot;nt&quot;&gt;--data-urlencode&lt;/span&gt; secret http://user:password@localhost:&amp;lt;port&amp;gt;/encrypt&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;datasource.password=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SECRET&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; application-dev.yml&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When the encryption is done, we get an encrypted piece of data in your configuration in the form of:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;span class=&quot;na&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;datasource&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;dbuser&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{cipher}FKSAJDFGYOS8F7GLHAKERGFHLSAJ'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;what-to-store-where&quot;&gt;What to store where?&lt;/h3&gt;
&lt;p&gt;When designing your config server, you have different options on where and to which our config server has access.&lt;/p&gt;

&lt;h4 id=&quot;using-a-git-repository&quot;&gt;Using a Git repository&lt;/h4&gt;
&lt;p&gt;The default and most common way most of us use is via private Git repositories where we store our sensitive data where the config server can fetch it.
Be aware, never put configuration inside your code repository, it violates &lt;a href=&quot;https://12factor.net/&quot; target=&quot;_blank&quot;&gt;the twelve-factor app&lt;/a&gt; which requires strict separation of config from code. 
Config varies substantially across deploys, code does not.&lt;/p&gt;

&lt;h5 id=&quot;health-checks&quot;&gt;Health checks&lt;/h5&gt;
&lt;p&gt;You can enable the health check to the config server within the application.
If you do this, always look at which version control would be the best fit, always check when they go into maintenance. 
It could be that they host it in another timezone, which could lead to a cascading failure.
In my opinion, you can just disable the health checks with &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.server.health.enabled=false&lt;/code&gt; and avoid further failures. 
If you expect that the config server might go down temporarily when your client app starts, please provide a retry mechanism after a failure. 
To enable a retry, first add &lt;code class=&quot;highlighter-rouge&quot;&gt;spring-retry&lt;/code&gt; to your classpath with &lt;code class=&quot;highlighter-rouge&quot;&gt;@EnableRetry&lt;/code&gt; annotation and &lt;code class=&quot;highlighter-rouge&quot;&gt;spring.cloud.config.failFast=true&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;using-jdbc&quot;&gt;Using JDBC&lt;/h4&gt;
&lt;p&gt;New to this list is the support for JDBC. This enables us to store configuration properties inside a relational database. 
By switching the active spring profile to &lt;code class=&quot;highlighter-rouge&quot;&gt;JDBC&lt;/code&gt; and adding the dependency of &lt;code class=&quot;highlighter-rouge&quot;&gt;spring-jdbc&lt;/code&gt; to your classpath, Spring Boot will configure the datasource you included on the classpath.
To store the data you will need to set up new tables in your database.
For more information: &lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.4.0.RELEASE/single/spring-cloud-config.html#_jdbc_backend&quot; target=&quot;_blank&quot;&gt;using JDBC&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;using-vault&quot;&gt;Using Vault&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vaultproject.io/&quot; target=&quot;_blank&quot;&gt;HashiCorp’s Vault&lt;/a&gt; provides a centralized external management server. 
Vault can manage static and dynamic secrets such as username/password for remote applications/resources and provide credentials for external services such as MySQL, PostgreSQL, Apache Cassandra, MongoDB, Consul, AWS and more.
Spring supports using the &lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.4.0.RELEASE/single/spring-cloud-config.html#_vault_backend&quot; target=&quot;_blank&quot;&gt;Vault as a backend&lt;/a&gt; for Spring Cloud Config.
If you are using Spring Boot, a quick way to enable Vault is to set your spring profile to &lt;code class=&quot;highlighter-rouge&quot;&gt;vault&lt;/code&gt;. 
Spring Boot’s conditionals will activate all the auto configuration for a connection with the Vault server.&lt;/p&gt;

&lt;h4 id=&quot;using-file-system&quot;&gt;Using File System&lt;/h4&gt;
&lt;p&gt;So when you’re working locally on your machine, you can always look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;native&lt;/code&gt; profile to activate the file system as your “backend”.
But I don’t recommend it for use in a deployment environment since it comes with various problems and extra setup.
One of those problems would be high availability, unlike Eureka, the config server doesn’t have the concept of peers.
The obvious option is to use a shared file system but it requires extra setup.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;With the latest technologies coming up, you can expect that our data will be stored in an immutable ledger that is secured by cryptography.
But we have to be aware of the arrival of quantum computers. 
This could make the best encryption algorithms useless. 
But as always, we will find a way to protect ourselves…&lt;/p&gt;

&lt;h1 id=&quot;sources&quot;&gt;Sources&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Advanced_Encryption_Standard&quot; target=&quot;_blank&quot;&gt;Advanced Encryption Standard encryption&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&quot; target=&quot;_blank&quot;&gt;Rivest–Shamir–Adleman encryption&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/kms/&quot; target=&quot;_blank&quot;&gt;Google Cloud KMS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://aws.amazon.com/kms/&quot; target=&quot;_blank&quot;&gt;AWS KMS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://azure.microsoft.com/en-us/services/key-vault/&quot; target=&quot;_blank&quot;&gt;Azure Vault&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://12factor.net/&quot; target=&quot;_blank&quot;&gt;The twelve-factor app&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.4.0.RELEASE/single/spring-cloud-config.html#_jdbc_backend&quot; target=&quot;_blank&quot;&gt;Using JDBC&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vaultproject.io/&quot; target=&quot;_blank&quot;&gt;HashiCorp’s Vault&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.4.0.RELEASE/single/spring-cloud-config.html#_vault_backend&quot; target=&quot;_blank&quot;&gt;Vault as a backend&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.spring.io/spring-cloud-config/&quot; target=&quot;_blank&quot;&gt;Spring Cloud Config Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://square.github.io/keywhiz/&quot; target=&quot;_blank&quot;&gt;Keywhiz&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html&quot; target=&quot;_blank&quot;&gt;JCE 6&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html&quot; target=&quot;_blank&quot;&gt;JCE 7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html&quot; target=&quot;_blank&quot;&gt;JCE 8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Kevin&quot;, &quot;last_name&quot;=&gt;&quot;Van Houtte&quot;, &quot;permalink&quot;=&gt;&quot;/author/kevin-van-houtte/&quot;, &quot;avatar&quot;=&gt;&quot;kevin-van-houtte.jpg&quot;, &quot;twitter&quot;=&gt;&quot;KevinVHoutte&quot;, &quot;linkedin&quot;=&gt;&quot;kevin-van-houtte-55ba936a&quot;, &quot;github&quot;=&gt;&quot;KevinVHoutte&quot;, &quot;title&quot;=&gt;&quot;Software Consultant Java&quot;, &quot;email&quot;=&gt;&quot;kevin.vanhoutte@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Kevin Van Houtte is a Software Engineer at Ordina Belgium. Passionate in the Spring ecosystem, Kevin is eager to discover new and efficient ways to solve problems. He enjoys a good challenge and is interested in cutting edge technologies. Kevin has a strong focus on building cloud native architectures with the right mindset on security and API design.&quot;}</name><email>kevin.vanhoutte@ordina.be</email></author><category term="Microservices" /><category term="Microservices" /><category term="Security" /><category term="Encryption" /><category term="Spring" /><category term="Cloud" /><category term="Config" /><summary type="html">Since the rise of the digital era, most enterprises keep their data in a digital format. But if their sensitive data lacks security, it can cause the data to be unreliable, unstable and unavailable to their business. We have to be prepared if an attacker breaches into our network and tries to hack our sensitive data. Whether it is in motion or at rest, encrypting our data and using the proper protection mechanisms will make it worthless for the hacker to use.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/microservices/part2/part2logo.jpg" /></entry><entry><title type="html">Deploying web applications with environment-specific configurations</title><link href="https://ordina-jworks.github.io/architecture/2017/12/27/Deploying-web-applications-with-environment-specific-configurations.html" rel="alternate" type="text/html" title="Deploying web applications with environment-specific configurations" /><published>2017-12-27T00:00:00+00:00</published><updated>2017-12-27T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2017/12/27/Deploying-web-applications-with-environment-specific-configurations</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2017/12/27/Deploying-web-applications-with-environment-specific-configurations.html">&lt;h1 id=&quot;the-problem&quot;&gt;The problem&lt;/h1&gt;

&lt;p&gt;Recently one of my colleagues came across a problem when he wanted to create an Angular application which needed to have different configuration values between environments.&lt;/p&gt;

&lt;p&gt;In 2016, Jurgen Van de Moere wrote a &lt;a href=&quot;https://www.jvandemo.com/how-to-configure-your-angularjs-application-using-environment-variables/&quot; target=&quot;_blank&quot;&gt;blogpost&lt;/a&gt; which explained how to create environment-agnostic applications with AngularJS.
A year later, Rich Franzmeier explained in his &lt;a href=&quot;https://www.intertech.com/Blog/deploying-angular-4-apps-with-environment-specific-info/&quot; target=&quot;_blank&quot;&gt;blogpost&lt;/a&gt; a solution for Angular applications which was based on Jurgen’s post.
Although both solutions work perfectly, they both have some downsides to it.&lt;/p&gt;

&lt;p&gt;Nowadays we want to push devops to all teams.
This implies that our applications should be immutable, and that everything should be automated (as much as possible).
If we want to deploy our application we have to overwrite our configuration file manually, so this was the main disadvantage of the solution they proposed.&lt;/p&gt;

&lt;h1 id=&quot;the-solution&quot;&gt;The solution&lt;/h1&gt;

&lt;p&gt;Our solution is build on top of theirs, and should be able to work for all kinds of frameworks (AngularJS, Angular, React, Vue,…).
&lt;br /&gt;Here is how we did it.&lt;/p&gt;

&lt;h2 id=&quot;code-setup&quot;&gt;Code setup&lt;/h2&gt;

&lt;p&gt;We started with an &lt;code class=&quot;highlighter-rouge&quot;&gt;env.js&lt;/code&gt; file which contains all environment-specific configuration.
This file will expose the data as global variables.
One could set the URL where our API is hosted like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// API url&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apiUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://dev.your-api.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next up is to expose this variable to our web application, which in our case is an Angular app.
We created an injectable &lt;code class=&quot;highlighter-rouge&quot;&gt;Configuration&lt;/code&gt; class, which will have a getter to retrieve our API URL.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@angular/core'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// return the native window obj&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Injectable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Configuration&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apiUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apiUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All we need to do now is to inject an instance of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Configuration&lt;/code&gt; class in the class where we need the info.&lt;/p&gt;

&lt;h2 id=&quot;deployment-setup&quot;&gt;Deployment setup&lt;/h2&gt;

&lt;p&gt;After building our Angular app, we need to package everything together.
Since we want to make everything immutable, the obvious choice here is to use Docker.
While starting a container, we can specify environment variables.
This is where the second part of our solution starts.&lt;/p&gt;

&lt;p&gt;Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;envsubst&lt;/code&gt; bash command we’re going to convert a template file into an &lt;code class=&quot;highlighter-rouge&quot;&gt;env.js&lt;/code&gt; file which contains all our data.
Our &lt;code class=&quot;highlighter-rouge&quot;&gt;env.js.tpl&lt;/code&gt; file looks like this:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// API url&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apiUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$API_URL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To perform this conversion we need to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;startup.sh&lt;/code&gt; script which will actually execute the &lt;code class=&quot;highlighter-rouge&quot;&gt;envsubst&lt;/code&gt; command.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;envsubst &amp;lt; /usr/share/nginx/env.js.tpl &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /usr/share/nginx/html/env.js

nginx &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'daemon off;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we need to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt; which in turn will be used to create our Docker image.&lt;/p&gt;

&lt;div class=&quot;language-docker highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; nginx:1.13-alpine&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; dist /usr/share/nginx/html&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; env.js.tpl /usr/share/nginx/env.js.tpl&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; startup.sh /usr/local/bin/startup.sh&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;ENTRYPOINT&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;/bin/tini&quot;, &quot;--&quot;, &quot;/usr/local/bin/startup.sh&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;This is how we managed to build our application only once, and deploy across numerous environments.
Although it is not as immutable as we want it to be, at least we have automated the process to get rid of most human errors.
And this way we can easily create a separate environment if there is a bug in production.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Tim&quot;, &quot;last_name&quot;=&gt;&quot;Ysewyn&quot;, &quot;avatar&quot;=&gt;&quot;tim-ysewyn.png&quot;, &quot;twitter&quot;=&gt;&quot;TYsewyn&quot;, &quot;linkedin&quot;=&gt;&quot;tysewyn&quot;, &quot;github&quot;=&gt;&quot;TYsewyn&quot;, &quot;permalink&quot;=&gt;&quot;/author/tim-ysewyn/&quot;, &quot;title&quot;=&gt;&quot;Principal Consultant&quot;, &quot;title2&quot;=&gt;&quot;Competence Leader API &amp; Microservices&quot;, &quot;email&quot;=&gt;&quot;Tim.Ysewyn@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Tim is a Principal Consultant at Ordina, where he helps fellow developers discovering top-notch technologies and methodologies as a Competence Leader for API &amp; Microservices. You can also find him working on various parts of the &lt;a href=\&quot;https://www.spring.io\&quot; target=\&quot;_blank\&quot;&gt;Spring&lt;/a&gt; framework or helping out at &lt;a href=\&quot;https://ng-be.org\&quot; target=\&quot;_blank\&quot;&gt;NG-BE&lt;/a&gt;. When you can\\'t get a hold of him, he will probably be under water since he is also an underwater photographer &amp; rescue diver.&quot;}</name><email>Tim.Ysewyn@ordina.be</email></author><category term="architecture" /><category term="Angular" /><category term="Automation" /><summary type="html">The problem</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/2017-12-27-Deploying-web-applications-with-environment-specific-configurations/post-image.jpg" /></entry><entry><title type="html">Twelve tips to become an awesome Technical Lead</title><link href="https://ordina-jworks.github.io/architecture/2017/12/22/Tech-Lead.html" rel="alternate" type="text/html" title="Twelve tips to become an awesome Technical Lead" /><published>2017-12-22T00:00:00+00:00</published><updated>2017-12-22T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2017/12/22/Tech-Lead</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2017/12/22/Tech-Lead.html">&lt;h1 id=&quot;what-is-technical-leadership&quot;&gt;What is Technical Leadership&lt;/h1&gt;
&lt;p&gt;A Technical Lead has the responsibility to help the team move forward. 
The person assigned to the role, is someone who has sound technical experience and strong communication skills. 
He or she will be accountable for the technical direction of the project or product and serve as the go-to person for cross-team interactions.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;What&quot; src=&quot;/img/tech-lead/what.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;When it comes to medium to large teams it is quite common to have a full-time Tech Lead present, responsible for important leadership activities such as&lt;/p&gt;

&lt;dl&gt;
	&lt;dt&gt;Guiding the project technical vision.&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Eg. what technology are we going to use, how are we going to deliver the project, what patterns will we use, etc.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Analyzing risks and cross-functional requirements.&lt;/dt&gt;
	&lt;dd&gt;
		&lt;ul&gt;
			&lt;li&gt;Analysing risk means mitigating risk: can we chose a certain approach or does it have too many unknowns.&lt;/li&gt;
			&lt;li&gt;What will the impact on the project be when taking a certain risk. 
			Eg. introducing new technology you saw at a conference.&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/dd&gt;
	&lt;dt&gt;Coaching less experienced people.&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;You most likely will have mixed experience in your team. 
	This makes a lot of sense when it comes to cost of a project, mixing and matching skills and experience; thus educating less experienced people.&lt;/p&gt;&lt;/dd&gt;
	&lt;dt&gt;Bridging communication between stakeholders and the team.&lt;/dt&gt;
	&lt;dd&gt;&lt;p&gt;Business stakeholders are often less technical in nature then developers. 
	They will use a different language and the Tech Lead will need to mitigate that.&lt;/p&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2 id=&quot;do-we-need-a-technical-lead&quot;&gt;Do we need a Technical Lead?&lt;/h2&gt;
&lt;p&gt;Some people argue against the role; claiming a team of well-functioning developers can make &lt;em&gt;decisions&lt;/em&gt; and &lt;em&gt;prioritise&lt;/em&gt; what is important to work on. 
Even when these perfect conditions would exist, during which team members talk to each other openly, discussing pros and cons before arriving at an agreed solution, it doesn’t take much to upset this delicate balance.&lt;/p&gt;

&lt;p&gt;The Tech Lead role is just that – a role. 
Instead of focusing on whether the role should exist, it is better to focus on ensuring all Tech Lead responsibilities are met. 
As with every leadership position, a bad leader can make things worse. 
With these tips I would like to help you to make sure that doesn’t happen.&lt;/p&gt;

&lt;h1 id=&quot;two-sides-to-a-story&quot;&gt;Two sides to a story&lt;/h1&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Two sides to a story&quot; src=&quot;/img/tech-lead/sides.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;As the job title implies, Technical  Lead  is a job with mixed responsibilities: there is a technical and a leadership side to the story.
I will share tips for both sides, although the distinction is not always clear.
It is very unlikely these sides will be equally divided. 
More on this in Tip 4.&lt;/p&gt;

&lt;h1 id=&quot;1-advocate-for-change&quot;&gt;1. Advocate for Change&lt;/h1&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Change&quot; src=&quot;/img/tech-lead/change.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Advocate for change, means installing a mindset of positive evolution.
When a proces is slow or cumbersome … try to turn that around and make it better.
One way of doing this, is by using OODA loops: Observe, Orient, Decide, Act.
More information on OODA, can be found in this &lt;a href=&quot;https://ordina-jworks.github.io/architecture/2017/06/21/pragmatic-architecture-today.html&quot;&gt;earlier blogpost&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In order to observe slow or cumbersome processes correctly, it is important to be part of the team and experience the same pain as everybody else on the team.
You should adopt a state of mind that continuously wants to improve a certain situation. 
The Japanese call this &lt;a href=&quot;https://en.wikipedia.org/wiki/Kaizen&quot;&gt;“Kaizen”&lt;/a&gt;. 
In our case, the situation you want to improve is the efficiency and happiness of the team and the delivery of a software project.&lt;/p&gt;

&lt;p&gt;Seek out the issues that prevent good teamwork.&lt;/p&gt;

&lt;h1 id=&quot;2-work-through-failure-and-success&quot;&gt;2. Work through Failure and Success&lt;/h1&gt;

&lt;h2 id=&quot;things-will-fail&quot;&gt;Things will fail&lt;/h2&gt;

&lt;p&gt;Things will fail. 
Don’t worry &lt;em&gt;too much&lt;/em&gt; about failure.
Builds will fail. 
Deploys will fail. 
Schedules will be missed. 
Crashes will happen. 
If you prepare for failure, it will be easier to cope with it.&lt;/p&gt;

&lt;p&gt;When things fail, don’t look for someone to blame. 
You are the Tech Lead. 
Take responsibility and use your energy to fix the problem at hand and learn from it. 
Of course, &lt;strong&gt;don’t fix the same bug twice&lt;/strong&gt;. 
If you need to fix the same bug twice, then you made a wrong decision.&lt;/p&gt;

&lt;p&gt;Learning from failure, will shape your orientation and make for better decision-making in the future.&lt;/p&gt;

&lt;h2 id=&quot;celebrate-success&quot;&gt;Celebrate success&lt;/h2&gt;

&lt;p&gt;When the team has a sense of achievement, they will be happy and motivated, to be the best they can. 
It’s important to celebrate smaller achievements, like a successful sprint or a completed feature. 
I did a project once, where we delivered a system and the customer was really happy with it … Unfortunately, the vision of the customer changed, and the project never made it to production. 
If that’s the moment you’ve been waiting for …&lt;/p&gt;

&lt;p&gt;When someone comes up with a new idea, maybe an approach or framework they saw at a conference, &lt;em&gt;and&lt;/em&gt; if the idea delivers, it is important that whoever came with the new idea, should be credited. 
This is very rewarding and will lead to more cooperation, creativity and out-of-the-box thinking.&lt;/p&gt;

&lt;p&gt;A drink on Friday evening, a small lunch, maybe a team building are all good ideas to get a happy and motivated team. Oh, and it’s fun.&lt;/p&gt;

&lt;h1 id=&quot;3-stay-technical&quot;&gt;3. Stay Technical&lt;/h1&gt;

&lt;p&gt;A Tech lead has a lot of non-coding responsibilities, but it is very important not to neglect the hands-on technical activities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Write code, do proof-of-concepts, define interfaces, … 
Depending on the maturity of the team your involvement will be different.&lt;/li&gt;
  &lt;li&gt;Do code reviews and have your code reviewed. 
When new people arrive at the project, I tend to do most of their code reviews and I will be pretty strict: 
I will write tests that cause NullPointerExceptions, I will ask them to adhere to conventions, to use the Single Responsibility Principle, to be careful about packaging and naming, etc etc.
I will also elaborate on the reasoning for these remarks and for the choices that were made.
This might challenge existing ways of working and increase the maturity of the codebase.
The number of changes they have to do (after a review) will quickly become less.&lt;/li&gt;
  &lt;li&gt;Insure a technical vision exists and is shared by the team. 
This vision needs to be in line with the customers needs. 
Customer needs will lead to important constraints, eg. regarding reuse (a throwaway project for marketing vs. a multiyear enterprise endeavour … but be aware that this type of constraint might also change).
Sharing how you got to this vision with your team, will have theyhuge impact its adoption. 
Try to involve the team to arrive at the technical vision. 
And make sure they know how they contribute in reaching that vision.&lt;/li&gt;
  &lt;li&gt;Keep an eye on the evolution of the code: after a while, the amount of actual coding you do &lt;em&gt;might&lt;/em&gt; be lower, but you need to stay up to date on the evolution of the code. 
You need te maintain awareness of the system and its technical constraints.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most (if not all) developers will be happy to define frameworks, to advocate certain methodologies, etc. 
But some non-functional requirements (also called quality attributes) such as networking, security, deployment and consistency are often overlooked.&lt;/p&gt;

&lt;h1 id=&quot;4-always-available&quot;&gt;4. Always Available&lt;/h1&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Time Management&quot; src=&quot;/img/tech-lead/time_management.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;As a Tech Lead, you should always be available for your team; for questions, for support, for guidance or to make decisions. 
I started this blogpost by saying the technical leadership role has two important aspects and combining these is never easy. 
Something that makes a lot of sense (for me) is writing down the amount of effort you expect to put into certain tasks, eg.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Technical design:&lt;/strong&gt; preparing work for the team (that includes you). 
Making sure it is clear what needs to be implemented and how. 
This will often take a lot of quality attributes like networking, security, … into consideration.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Business:&lt;/strong&gt; talking to the customer, looking at their needs and goals and matching these with the technical vision of the project.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Project Management:&lt;/strong&gt; defining user stories, estimating, follow-up.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Code:&lt;/strong&gt; writing code, doing code reviews, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The assigned percentages will obviously vary for everyone and for every project. 
It’s also important to look at the actuals, because these will help you understand on what you are spending time.&lt;/p&gt;

&lt;h1 id=&quot;5-be-a-mentor-for-your-team&quot;&gt;5. Be a mentor for your team&lt;/h1&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Mentor&quot; src=&quot;/img/tech-lead/mentor.png&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Mediator:&lt;/strong&gt; A Tech Lead should be a mediator, that facilitates discussion.
When people have different opinions, you should embrace this. 
Because it means they care enough about something to discuss about it. 
In the end we work towards the same goal. 
Everybody can learn from the opinion of others.
Get input from the team and try to reach a consensus.
If reaching a consensus is really impossible and a decision is necessary, decide. 
Not deciding will always lead to more discussion.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mentor:&lt;/strong&gt; A technical lead should be a mentor for developers. 
Be a teacher. 
When you review code or when you explain certain conventions, be sure to clearly explain the reasoning why you are doing something in a particular manner.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Effective Delegation:&lt;/strong&gt; After a while, your team will adopt certain best practices and less (strict) reviews will be necessary or more people will do reviews. 
That’s the point where you can also give ownership of user stories to more developers. 
By transferring ownership to developers, they will be highly motivated to do a great job. 
&lt;em&gt;A tech lead should not try to own all of the responsibilities. 
The tech leads needs to make sure responsibilities are taken by someone.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Match goals:&lt;/strong&gt; match the individual goals of the developers with the larger goals of the project and the organisation. 
This is &lt;em&gt;specifically targeted dynamic coaching&lt;/em&gt;. 
Dynamic, because goals can change. 
Communication is very important when it comes to matching goals: it will make people feel valued.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimise for the group:&lt;/strong&gt; Individuals in a team are extremely important, but when it is difficult to find consensus, it’s the team you should focus on. 
Teams that collaborate well, will perform better and members of a well-performing team are happy members.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A good Tech Lead&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;knows when to give input&lt;/li&gt;
  &lt;li&gt;knows when to make decisions&lt;/li&gt;
  &lt;li&gt;knows when to step back and allow the team to take more ownership.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Share responsibility, give ownership … but stay accountable.&lt;/p&gt;

&lt;h1 id=&quot;6-surround-yourself-with-other-tech-leads&quot;&gt;6. Surround yourself with other Tech Leads&lt;/h1&gt;
&lt;p&gt;There are many reasons to surround yourself with other Tech Leads. 
On a personal level, it presents an opportunity to learn from your peers: how do they provide input for their team and how do they divide their time between the different responsibilities of the role.
On an organisational level, you should verify if there is a clearly understood overarching goal.
If this is the case, you might want to investigate whether cross-organisational coordination is required to meet objectives.
It is important to keep track of architectural guidelines to make sure your product will play along nicely with other components and to make sure the larger system is consistent.
Chances are there will be dependencies on the product of other teams or on the members of other teams.
Make sure these are taken into account when composing a sprint.&lt;/p&gt;

&lt;p&gt;This kind of coordination is a genuine problem at many (larger) organisations or customers.
Investing time in networking, is necessary to avoid surprises beyond your control.&lt;/p&gt;

&lt;h1 id=&quot;7-think-big-bias-for-action&quot;&gt;7. Think Big, Bias for Action.&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Think Big&lt;/em&gt; and &lt;em&gt;Bias for Action&lt;/em&gt; are two of the &lt;a href=&quot;https://www.amazon.jobs/principles&quot;&gt;twelve leadership principles&lt;/a&gt; at &lt;a href=&quot;https://www.amazon.com/&quot;&gt;Amazon&lt;/a&gt;.
Thinking big, means creating and communicating a bold direction for the project or the product. 
This will inspire results, because people are working on something big. 
Something that makes a difference.
Focus on the opportunities that might arrive in the future. 
Make decisions that are not limiting. 
An excellent book on this, is &lt;a href=&quot;http://liminalthinking.com/&quot;&gt;Liminal Thinking&lt;/a&gt; by Dave Gray.&lt;/p&gt;

&lt;p&gt;A Bias for Action means acknowledging that many actions and decisions are reversible and don’t need extensive study.
Getting things done … matters.
When you put a flywheel in motion, it will keep rotating. 
Focus on simple things to get the flywheel to move. 
It will encourage people to deliver as initial hurdles have been taken.&lt;/p&gt;

&lt;h1 id=&quot;8-interviewing-potential-new-team-members&quot;&gt;8. Interviewing potential new team members&lt;/h1&gt;

&lt;p&gt;Know what you are interviewing for.
Are you looking for someone for the longer term or are you looking for someone for a short assignment?
When you look at a resume, look for patterns: eg. duration of an assignment. 
Does this match with your needs? 
If it doesn’t, make sure you ask the candidate if he or she has certain preferences. 
Some people like long-term projects, others don’t. 
This does not have to be a blocking issue. 
But it is something to talk about. 
Also look at used languages, libraries and frameworks. 
Do these match with your current choices? 
When you are looking for a long-term team member, experience with certain tools is less important than the will, ability and eagerness to learn.
I always try to focus on the mindset of a developer: thinking logically, identifying multiple approaches to tackle a certain problem.
Personally, I strongly discourage using &lt;a href=&quot;https://stackoverflow.com/&quot;&gt;Stack Overflow&lt;/a&gt; to find questions.
It is more important to ask questions that are relevant for your project.
My personal pattern for conducting an interview is as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Comfort&lt;/li&gt;
  &lt;li&gt;Offer options&lt;/li&gt;
  &lt;li&gt;Build on the responses&lt;/li&gt;
  &lt;li&gt;Show interest&lt;/li&gt;
  &lt;li&gt;Bonus question&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, always, stay polite. 
If the candidate doesn’t match with your specific goals, don’t send them home with a bad feeling.&lt;/p&gt;

&lt;p&gt;Beware: we still will need to get things done, even when we don’t have the time, resources or influence to fix the team composition.&lt;/p&gt;

&lt;h1 id=&quot;9-embrace-cultural-differences&quot;&gt;9. Embrace cultural differences&lt;/h1&gt;
&lt;p&gt;Diversity is invaluable.
All people are different and live different lives.
This is incredibly valuable, because your users will also be different.
Surround yourself with passionate people.&lt;/p&gt;

&lt;p&gt;Nowadays most (if not all) teams use some kind of instant messaging.
When working with teams in different time zones, this becomes even more valuable as it enables asynchronous communication and broadens the potential answers.
I mentioned this before: everybody is part of the team and everybody’s opinion should be valued.&lt;/p&gt;

&lt;h1 id=&quot;10-estimating-is-hard&quot;&gt;10. Estimating is hard&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Douglas_Hofstadter&quot;&gt;Douglas Hofstadter&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;Hofstadter’s Law: It always takes longer than you expect, even when you take into account Hofstadter’s Law.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Estimating is hard. 
When you do it more often, you will get better at it … but you still will get it wrong from time to time.&lt;/p&gt;

&lt;p&gt;In agile projects, the entire team can participate in a &lt;a href=&quot;https://en.wikipedia.org/wiki/Planning_poker&quot;&gt;planning poker&lt;/a&gt; meeting. 
Planning poker can expose unknowns when estimating a user story.
In general, there are two approaches to cope with these unknowns: doing a technical design before starting with the user story (eg. by defining a spike) or accepting the risks, together with your business stakeholders.&lt;/p&gt;

&lt;p&gt;As a technical lead, you will likely also need to do estimations before the team is actually building something or when responding to RFPs (request for proposals). 
This can be to give business stakeholders an idea of the potential cost, to decide on priorities or to evaluate staff.&lt;/p&gt;

&lt;p&gt;To achieve this, I suggest using three point estimates, where you do an optimistic, a best guess and a pessimistic estimate and use this formula: &lt;strong&gt;(O + 4BG + P) ÷ 6&lt;/strong&gt;  to get the weighted mean.
Depending on the nature of the estimation, the number of unknown unknowns might be large: the project can be very similar to other projects or completely different. 
Factor these in. 
Estimate for the team that will do the implementation: you are probably estimating a real project. 
This is not the fastest time &lt;em&gt;you&lt;/em&gt; can possibly do something, in the best possible conditions. 
The estimations represent the &lt;strong&gt;ability to execute&lt;/strong&gt; for a team; not your ability to do the implementation yourself. 
Also make sure, you know your deliverables. 
This can be more then code and deployment artefacts, eg. code quality assurance reports, manuals, …&lt;/p&gt;

&lt;p&gt;Document assumptions.&lt;/p&gt;

&lt;p&gt;Mastering estimation is a lifelong journey. 
It will set you apart. 
And your colleagues will associate you with professionalism, stability, and quality work.&lt;/p&gt;

&lt;h1 id=&quot;11-interfacing-with-the-outside-world&quot;&gt;11. Interfacing with the outside world&lt;/h1&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Cats&quot; src=&quot;/img/tech-lead/cats.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The language used by non-technical stakeholders might be very different then that of the development team.
A Tech Lead must find a way to communicate ideas in ways non-technical people can understand. 
Eg. by using analogies and using terms others can easily relate to.&lt;/p&gt;

&lt;p&gt;In a &lt;a href=&quot;https://ordina-jworks.github.io/domain-driven%20design/2016/01/28/Evolution-of-DDD.html&quot;&gt;DDD&lt;/a&gt; world, this means establishing a ubiquitous language.&lt;/p&gt;

&lt;p&gt;Work closely with customers, try to detect requirements from them and continuously map their requirements with the on-going implementation.&lt;/p&gt;

&lt;p&gt;As a technical lead, I don’t think you should be the Single Point of Contact. 
Because then you introduce a potential liability in the project: a strong dependency on you. 
Include your team in certain discussions, but make sure you prevent continuous interruptions of your team members … 
So don’t be the Single Point of Contact, but try to be the First Point of Contact.&lt;/p&gt;

&lt;h1 id=&quot;12-facilitate-agile-team-work&quot;&gt;12. Facilitate (agile) team work&lt;/h1&gt;

&lt;p&gt;I would urge all Tech Leads to facilitate agile team working. 
Of course this works better, when the business is involved as well. 
But even when they are not involved, assign a proxy product owner. 
Chances are, this will be you.&lt;/p&gt;

&lt;p&gt;It doesn’t really matter if you use scrum, kanban or something else, but aim for short development cycles, feedback loops, etc.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Your team’s strength is not a function of the talent of individual members. 
It’s a function of their collaboration, tenacity, and mutual respect.&lt;/p&gt;

&lt;p&gt;If you’d like more information on Technical Leadership, you can check my slides on &lt;a href=&quot;https://www.slideshare.net/BartBlommaerts/javaday-2017-10-tips-to-become-an-awesome-technical-lead-v4&quot;&gt;SlideDeck&lt;/a&gt; or this video on &lt;a href=&quot;https://www.youtube.com/watch?v=yhtK1jQC_4s&quot;&gt;YouTube&lt;/a&gt; of my talk at &lt;a href=&quot;https://devoxx.be/&quot;&gt;Devoxx&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Bart&quot;, &quot;last_name&quot;=&gt;&quot;Blommaerts&quot;, &quot;avatar&quot;=&gt;&quot;bart-blommaerts.png&quot;, &quot;twitter&quot;=&gt;&quot;DaggieBe&quot;, &quot;linkedin&quot;=&gt;&quot;bartblommaerts&quot;, &quot;github&quot;=&gt;&quot;bart-blommaerts&quot;, &quot;permalink&quot;=&gt;&quot;/author/bart-blommaerts/&quot;, &quot;title&quot;=&gt;&quot;Software Architect&quot;, &quot;title2&quot;=&gt;&quot;Competence Manager Architecture&quot;, &quot;email&quot;=&gt;&quot;bart.blommaerts@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Bart Blommaerts is a passionate Software Architect at Ordina, who believes closing the model-code gap is essential to make rapid, agile delivery sustainable. Bart has a strong focus on API design, reuse, automation and security. He is always looking for technical challenges.&quot;}</name><email>bart.blommaerts@ordina.be</email></author><category term="architecture" /><category term="Technical Leadership" /><category term="time management" /><category term="interviews" /><category term="leadership" /><category term="principles" /><summary type="html">What is Technical Leadership A Technical Lead has the responsibility to help the team move forward. The person assigned to the role, is someone who has sound technical experience and strong communication skills. He or she will be accountable for the technical direction of the project or product and serve as the go-to person for cross-team interactions.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/tech-lead/world.png" /></entry><entry><title type="html">An introduction to virtual and alternate reality</title><link href="https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality.html" rel="alternate" type="text/html" title="An introduction to virtual and alternate reality" /><published>2017-12-20T00:00:00+00:00</published><updated>2017-12-20T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality</id><content type="html" xml:base="https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality.html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.css&quot; /&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;A look into the wonderful and exciting world of virtual, alternate and mixed reality.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt=&quot;Virtual Relaity&quot; src=&quot;/img/virtualreality/matrix.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The concept of virtual reality is not a new one&lt;/strong&gt;, neither is the one of augmented reality.
It has been around for quite a long time already.
Perhaps mixed reality will be the next big thing? 
I’ll leave that up to you to decide.&lt;/p&gt;

&lt;p&gt;Ever since we have been able to create visual representations of our own or other worlds, mankind has been fascinated by transferring the sensory perception into this world.
It is in the recent years that technological advancements have made it possible to do this in ever increasing realistic and engaging ways.&lt;/p&gt;

&lt;h2 id=&quot;a-trip-down-memory-lane&quot;&gt;A trip down memory lane…&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&quot;Sensorama&quot; src=&quot;/img/virtualreality/sensorama.jpeg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;1962&lt;/strong&gt; some crazy person built what is generally believed to be &lt;strong&gt;the first virtual reality experience.&lt;/strong&gt;
This machine pictured above is called &lt;strong&gt;a Sensorama.&lt;/strong&gt; 
The user of the Sensorama sits on a tilted chair and watches a short film with stereoscopic 3D images in wide-angle view with stereo sound and even added effects such as wind and aroma. 
A predecessor of those 4D movies, available in cinemas and theme parks these days.&lt;/p&gt;

&lt;p&gt;This, of course, cannot be compared with the more advanced implementations we have today.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;70’s and 80’s&lt;/strong&gt; virtual reality really started blossoming in certain specialized areas.
In 1968 Dr Ivan Sutherland created the &lt;strong&gt;Sword of Damocles at MIT.&lt;/strong&gt;
This head mounted display (or HMD) was so heavy it needed to be suspended from the ceiling.
It was able to track head movements and show rudimentary 3D images.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Sword of Damocles&quot; src=&quot;/img/virtualreality/damocles.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the &lt;strong&gt;90’s and 00’s:&lt;/strong&gt; more sophisticated &lt;strong&gt;military, flight and combat simulators started showing up.&lt;/strong&gt;
In the privatized industry: &lt;strong&gt;simulators for airline pilots, doctors and surgeons.&lt;/strong&gt;
Different ways of interacting with this virtual world also started appearing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Head tracking&lt;/li&gt;
  &lt;li&gt;Touch screens&lt;/li&gt;
  &lt;li&gt;Gloves&lt;/li&gt;
  &lt;li&gt;Entire flight simulators&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is also when video game companies first tried to capitalize on this exciting new technology and bring it to a wider audience.
But the technology was still too rough and did not catch on.
Some of these early attempts include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nintendo Virtual Boy&lt;/li&gt;
  &lt;li&gt;Virtuality (arcade system)&lt;/li&gt;
  &lt;li&gt;iGlasses&lt;/li&gt;
  &lt;li&gt;VFX-1&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/virtualreality/virtualboy.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The Nintento VirtualBoy&quot;&gt;
        &lt;img alt=&quot;The Nintento VirtualBoy&quot; src=&quot;/img/virtualreality/virtualboy.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 56.40%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/virtuality.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The Virtuality arcade system&quot;&gt;
        &lt;img alt=&quot;The Virtuality arcade system&quot; src=&quot;/img/virtualreality/virtuality.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 39.65%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/iglasses.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The iGlasses VR glasses&quot;&gt;
        &lt;img alt=&quot;The iGlasses AR glasses&quot; src=&quot;/img/virtualreality/iglasses.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 44.55%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/vfx1.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The VFX-1 VR glasses&quot;&gt;
        &lt;img alt=&quot;The VFX-1 VR glasses&quot; src=&quot;/img/virtualreality/vfx1.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 51.50%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;But then came 2012.&lt;/strong&gt;
The year in which the &lt;strong&gt;Oculus Rift was kickstarted.&lt;/strong&gt; 
This sparked a renewed interest in virtual reality which, thanks to technological innovations, was looking much, much better it ever had!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Oculus Rift&quot; src=&quot;/img/virtualreality/oculus.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;all-kinds-of-realities&quot;&gt;All kinds of realities&lt;/h2&gt;
&lt;p&gt;Alright, so we have been talking about virtual reality for a while.
But what exactly are virtual reality (VR), augmented reality (AR) and mixed reality (MR) and how do they relate.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The reality - virtuality continuum&quot; src=&quot;/img/virtualreality/continuum.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;
Above you see the reality - virtuality continuum.&lt;/p&gt;

&lt;p&gt;Let’s start on the left side.
&lt;strong&gt;The left side depicts reality or the Real World.&lt;/strong&gt; 
With the Real World we mean the world where you, as the reader of this article, are sitting in a chair looking at your computer screen or holding your smartphone.
For the sake of this article we assume that the world is real and that there are no matrix-like shenanigans going on.
Simply put, the world as you know it and experience it every day, the world you and I live in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the other end of the spectrum we see the Virtual Environment.&lt;/strong&gt;
Everything in the virtual environment is virtual, so ‘not real’.
It is the imaginary world that you see on a screen.
The user is locked out of the real world.
An extreme example we all know of would be The Matrix, in which the person lives their life inside The Matrix not knowing the entire thing is not real.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Augmented Reality (AR) and Augmented Virtuality (AV) are situated in between these two ends of the spectrum.&lt;/strong&gt;
As their names suggest, AR is more closely aligned with the real world
while AV is closer to the virtual world.
In other words AR consists of a mostly real world with a few virtual elements augmenting the experience.
AV exists mostly in the virtual world with a few elements of our real world visible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mixed or Merged reality (MR) is a term used to describe anything between reality and virtuality.&lt;/strong&gt;
This means it contains both elements of the real world and a virtual world.
It can go all the way from a mostly real world with a bit of virtual world sprinkled on top to mostly virtual world with only trace elements of the real world remaining visible.
With MR as opposed to AR and AV, the virtual world is aware of the real world and can interact accordingly.&lt;/p&gt;

&lt;p&gt;We see the term X-realities being used to describe any of the VR, AR, MR and any other realities.&lt;/p&gt;

&lt;p&gt;These terms are pretty vague and some have even changed meaning over the years.
They outline the boundaries of the different areas in the spectrum, but they tend to bleed over into one another very easily, and get mixed up a lot!&lt;/p&gt;

&lt;h3 id=&quot;virtual-reality&quot;&gt;Virtual Reality&lt;/h3&gt;
&lt;p&gt;We call something virtual reality &lt;strong&gt;when the user is emerged in a virtual world and is completely blocked out from the real one.&lt;/strong&gt;
The simplest example of this is a 360° video experience.
More advanced implementations have the user take part in a fully virtual world where their movements and actions are tracked and translated into actions in the virtual world.&lt;/p&gt;

&lt;p&gt;Some examples of virtual reality implementations are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Games, both recreational and educational&lt;/li&gt;
  &lt;li&gt;Photo content: photo spheres&lt;/li&gt;
  &lt;li&gt;Video content: video spheres, 360 videos&lt;/li&gt;
  &lt;li&gt;Creative applications like 3D painting, sculpting, DJ applications and many others…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently the most popular application for VR is video games. There are a lot of games with VR support on the market already, and more are getting released almost every day!
Shooting games and simulators seem to be an exceptional match for the platform.
Although mostly used for gaming purposes, a VR headset can also be used for viewing 360 scenes and videos.
Thanks to head tracking, the viewers perspective is adjusted automatically when the head is moved.
The more advanced headsets like the Oculus Rift and the HTC Vive even have external sensor arrays to track user movement, and have hand based controllers for interaction.
Although you have to deal with additional setup compared to a phone where you can just drag the viewport or use your phone’s motion sensors.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Virtual reality setup&quot; src=&quot;/img/virtualreality/setup.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;augmented-reality&quot;&gt;Augmented Reality&lt;/h3&gt;
&lt;p&gt;Last year, the world exploded with people young and old crowding the streets in search for Pokémon.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Augmented Reality - Pokémon Go&quot; src=&quot;/img/virtualreality/ar-pokemon.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pokémon Go is a fine example of an AR application.
It is augmented reality because &lt;strong&gt;the application is still grounded mostly in the real world.&lt;/strong&gt;
The virtual elements are layered on top of the real world, but they do not interact with it.&lt;/p&gt;

&lt;p&gt;There are 4 types of augmented reality applications.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Marker&lt;/li&gt;
  &lt;li&gt;Inverse Marker&lt;/li&gt;
  &lt;li&gt;Markerless&lt;/li&gt;
  &lt;li&gt;Projection&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;marker-based&quot;&gt;Marker based&lt;/h4&gt;
&lt;p&gt;Marker based AR apps use image recognition to recognize a specific pattern or marker.
The marker is detected and replaced or covered with a virtual object.
These types of applications are very simple and used for showcasing or displaying additional information.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Marker based AR&quot; src=&quot;/img/virtualreality/ar-marker.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;inverse-marker-based&quot;&gt;Inverse marker based&lt;/h4&gt;
&lt;p&gt;Inverse marker based AR is very similar to regular marker based AR.
These applications are used in conjunction with large screens with cameras where the user only has to control the marker.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Inverse marker based AR&quot; src=&quot;/img/virtualreality/ar-inverse-marker.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;markerless&quot;&gt;Markerless&lt;/h4&gt;
&lt;p&gt;These markerless applications use positional tracking and GPS to determine where to show things by mapping the environment and creating a spatial awareness to track objects when moving.
The popular Pokémon Go and Ikea apps are perfect examples of this.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Markerless based AR&quot; src=&quot;/img/virtualreality/ar-markerless.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;projection-based&quot;&gt;Projection based&lt;/h4&gt;
&lt;p&gt;Projection based AR projects images rather than showing them on the screen.
This requires hardware capable of projecting so is not as widespread.
It is used more in manufacturing.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Projection based AR&quot; src=&quot;/img/virtualreality/ar-projection.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
The great thing about AR is that any recent smartphone is capable of running AR applications.
Many AR apps only need a camera to work.
While specialized depth sensing sensors exist, they are not as widespread and are used more in specialized industries.&lt;/p&gt;

&lt;h3 id=&quot;mixed-reality&quot;&gt;Mixed Reality&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Mixed reality takes the best parts of both virtual and augmented reality.&lt;/strong&gt;
What makes mixed reality special is that it understands the environment, it can interact with and respond to changes or events happening in the real world.
Hardware that supports MR takes the form of glasses and headsets with cameras and other sensors.
These sensors are used to map the physical 3D space so the virtual objects know where they are situated and know what is in the real world.
This is where you get the holographic experiences, even tough they aren’t real holograms, they look and feel exactly as you would expect them to.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Mixed reality&quot; src=&quot;/img/virtualreality/banner.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware-and-current-pain-points&quot;&gt;Hardware and current pain points&lt;/h2&gt;
&lt;p&gt;Current devices are a big step up from what we had even a few years ago, but there are still many improvements to be made.
&lt;strong&gt;The high-end VR devices require beefy computers equipped with high-end graphics cards.&lt;/strong&gt;
The headsets requiring a smartphone offer a more mobile experience but are still limited in the visual effects department.
For a virtual reality experience to feel smooth and natural &lt;strong&gt;it needs to be rendered at a minimum of 90 frames per second.&lt;/strong&gt;
If the device can not keep up, the user might experience VR sickness, similar to motion sickness.
Because our eyes are so close to the screen and the resolution our eyes can perceive is so high, pixels become visible, detracting from the experience.
When looking closely, the screen looks like a raster.
This can be solved with a higher resolution but that again requires more computational power.
This much content at such a high pace also requires a lot of bandwidth and low latency.&lt;/p&gt;

&lt;p&gt;Another deterrent for VR headsets is the extensive setup required to make them work.
High-end devices require base stations or tracking cameras to accurately measure movement.
There are devices with sensors built in so that they are not dependent on external base stations, this technique is called inside-out tracking.&lt;/p&gt;

&lt;h2 id=&quot;creating-realities&quot;&gt;Creating realities&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Making software that is AR/VR/MR enabled can be quite different from traditional business application development.&lt;/strong&gt;
These type of applications are often &lt;strong&gt;heavily dependent on visual elements&lt;/strong&gt; and can require extra artistic knowledge.
For virtual and mixed reality game engines can be used to create “games” to create these experiences.&lt;/p&gt;

&lt;p&gt;These are some of the most popular game engines that are free for personal user:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unity&lt;/li&gt;
  &lt;li&gt;Unreal Engine&lt;/li&gt;
  &lt;li&gt;CryEngine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Think of these as a sort of photoshop for software.
We can leverage the editors to see what we’re working on and make changes immediately.
These tools are ideal for virtual reality.
Both Unity and Unreal Engine have plugins available for augmented reality.&lt;/p&gt;

&lt;p&gt;The more business targeted applications are often augmented reality enabled applications.
&lt;strong&gt;Both Apple and Google have made big efforts to support this on their respective OSes&lt;/strong&gt; and basically every smartphone with a camera is now AR enabled.
Apple’s ARKit and Google’s ARCore are the respective augmented reality APIs for their IOS and Android platforms.
Since the inception of these two APIs the amount of AR apps has greatly increased, Google is even discontinuing its &lt;a href=&quot;https://developers.google.com/tango/&quot;&gt;Tango project&lt;/a&gt; in favor of ARCore.
There are many other SDKs available, many of which even have their own Unity plugin.
Vuforia and ARToolkit seem to be the most popular ones.&lt;/p&gt;

&lt;p&gt;Microsoft created the Windows Mixed Reality framework for mixed, virtual or augmented reality apps to run on windows 10 based computers.&lt;/p&gt;

&lt;h2 id=&quot;business-cases--examples&quot;&gt;Business cases &amp;amp; Examples&lt;/h2&gt;
&lt;p&gt;So, as software developers, what can we do with all this fancy tech?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Dutch colleagues&lt;/strong&gt; already made an awesomely detailed VR application to help &lt;strong&gt;train personnel of the Royal Dutch Navy.&lt;/strong&gt;
Make sure to have a look since it is a truly impressive feat of software engineering.&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/wnC-jvtwJtY?rel=0&quot; width=&quot;100%&quot; height=&quot;100%;&quot; style=&quot;position: absolute; left: 0; top: 0; bottom: 0; right: 0;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Virtual reality is widely used for training purposes.&lt;/strong&gt;
Whether it is for a boat, an aircraft, a machine or a human body, a virtual space can prepare someone for situations that are otherwise very costly or difficult to simulate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Augmented and mixed reality can show information when and where you need it.&lt;/strong&gt;
On a mobile phone screen, through glasses or projected on a surface, having the correct information at hand is always useful.&lt;/p&gt;

&lt;p&gt;Visualizing a product before it is manufactured can enhance the design process by discovering points of improvement much earlier on.
Visualization like Ikea’s app for trying furniture or a tour through historic Bruges or even business cards with an AR marker for increased memorability.&lt;/p&gt;

&lt;p&gt;For us at Ordina, we see most potential in AR and MR.
Mobile based AR applications that can be used for showcases, in the IoT world, or even just augmented digital signage with inverse marker based AR.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The years to come will bring even more advancements&lt;/strong&gt; to the wonderful world of virtual, augmented and mixed realities.
A lot of things are still shaping up and being developed, ever improving on earlier versions.
A lot of solutions and &lt;strong&gt;standards are still being figured out.&lt;/strong&gt;
Which means that now is a great time for us to try stuff out, and get a feel for the technology, whilst preparing and working on proof of concept applications.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Michael&quot;, &quot;last_name&quot;=&gt;&quot;Vandendriessche&quot;, &quot;permalink&quot;=&gt;&quot;/author/michael-vandendriessche&quot;, &quot;avatar&quot;=&gt;&quot;michael-vandendriessche.jpg&quot;, &quot;title&quot;=&gt;&quot;SoftWare Engineer&quot;, &quot;title2&quot;=&gt;&quot;Android developer&quot;, &quot;email&quot;=&gt;&quot;michael.vandendriessche@ordina.be&quot;, &quot;twitter&quot;=&gt;&quot;miva2&quot;, &quot;bio&quot;=&gt;&quot;Michael is a Software Engineer at Ordina Belgium with a passion for Android. Besides mobile apps he also enjoys working on backend as well as frontend applications. He is always keen on trying out new things! In his spare time he likes to develop (and play) games.&quot;}</name><email>michael.vandendriessche@ordina.be</email></author><category term="IoT" /><category term="Internet of Things" /><category term="IoT" /><category term="Virtual reality" /><category term="Alternate reality" /><category term="Mixed reality" /><category term="Merged Reality" /><category term="Oculus Rift" /><category term="Oculus" /><category term="HTC Vive" /><category term="Vive" /><category term="SteamVR" /><category term="Steam" /><category term="Unreal Engine" /><category term="Unity" /><category term="Hololens" /><category term="Holo Lens" /><category term="Microsoft" /><category term="Google Glass" /><category term="Google" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/virtualreality/banner.jpg" /></entry><entry><title type="html">XP Days Benelux 2017</title><link href="https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017.html" rel="alternate" type="text/html" title="XP Days Benelux 2017" /><published>2017-12-19T00:00:00+00:00</published><updated>2017-12-19T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.xpdaysbenelux.nl&quot; target=&quot;_blank&quot;&gt;XP Days Benelux&lt;/a&gt; is a two day conference on agile software development for and by agile practitioners.
In this post, I will take you along to the talks and sessions I attended and participated in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;the-toc&quot;&gt;

  &lt;h1 class=&quot;the-toc__heading&quot;&gt;Table Of Contents&lt;/h1&gt;

  &lt;ol class=&quot;the-toc__list&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#the-8-stances-of-a-scrum-master---barry-overeem&quot; title=&quot;The 8 Stances of a Scrum Master - Barry Overeem&quot;&gt;The 8 Stances of a Scrum Master - Barry Overeem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#do-not-deal-with-resistance---remi-armand-collaris--linda-dorlandt&quot; title=&quot;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&quot;&gt;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#motivate-your-team-with-gamification---jean-jacques-courtens&quot; title=&quot;Motivate Your Team with Gamification - Jean-Jacques Courtens&quot;&gt;Motivate Your Team with Gamification - Jean-Jacques Courtens&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#an-integral-view-on-agile---frederik-vannieuwenhuyse--johannes-schartau&quot; title=&quot;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&quot;&gt;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-art-of-hosting-conversations-that-matter---johan-decoster--jef-cumps&quot; title=&quot;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&quot;&gt;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-8-stances-of-a-scrum-master---barry-overeem&quot;&gt;The 8 Stances of a Scrum Master - Barry Overeem&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Barry Overeem&quot; src=&quot;/img/xpdays-benelux-2017/Barry-Overeem.jpg&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/barryovereem&quot; target=&quot;_blank&quot;&gt;Barry Overeem&lt;/a&gt; is a freelance Scrum Master and Professional Scrum Trainer at Scrum.org. He’s an active member of the Scrum community and shares his insights and knowledge by speaking at conferences, facilitating workshops and writing blog posts.&lt;/p&gt;

&lt;p&gt;It is very common for a Scrum Master to get tasks assigned, that aren’t actually tasks a Scrum Master should be performing in the first place.
The job description of a Scrum Master comes with a lot of other tasks than people, sometimes including the Scrum Master, assume.&lt;/p&gt;

&lt;p&gt;The session starts with an overview of the eight misunderstood stances of a Scrum Master:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The 8 Misunderstood Stances of a Scrum Master&quot; src=&quot;/img/xpdays-benelux-2017/8-Misunderstood-Stances.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Scrum Police:&lt;/strong&gt; Scrum isn’t a hard set of rules to be followed. There’s absolutely nothing wrong with a bit of flexibility and empathy based on the team’s situation.
Time boxing for example is very important but keep an open mind when the team is having a very valuable conversation after the time box has ended.
Flexibility regarding time boxing is of course not meant to happen too often. So keep an eye on recurring discussions to see if they need to be addressed individually.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hero:&lt;/strong&gt; Managing and solving all problems and impediments like nobody’s business! While an important task for the Scrum Master, make sure not to get too focused on being the team’s impediment super hero.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scribe:&lt;/strong&gt; “Hey John, you’re taking notes again for this meeting, right? Thanks!”. Do you recognize this exchange? Congratulations, you’re the team’s personal scribe.
This is especially to be avoided during retrospectives since this creates a false sense of ownership of the issues and actions towards the Scrum Master.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Admin:&lt;/strong&gt; The Scrum Master is the workflow master. Need to add a board in Jira? Ask the Scrum Master. Need to start a sprint in Jira? Ask the Scrum Master. Now, hold up right there! The Scrum Master &lt;em&gt;can&lt;/em&gt; of course perform these tasks but yup, so can the other team members.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Secretary:&lt;/strong&gt; The Scrum Master plans all the work in the team members’ agendas. Keep up-to-date with everybody’s holidays, sick days and toilet breaks. &lt;em&gt;(Can you sense the sarcasm?)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chairman:&lt;/strong&gt; While this is often the case, the Daily Scrum isn’t a meeting where the team members report back to the Scrum Master. It’s a meeting by and for the development team. In absence of the Scrum Master, the Daily Scrum must still happen.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Team Boss:&lt;/strong&gt; The Scrum Master is the boss of the team. He/she decides who is in and who is out. A sick day? You’re fired! Buy the Scrum Master a chocolate cake? Here, have a raise! Oh, what a world it would be!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coffee Clerk:&lt;/strong&gt; Please do get your team members some coffee once in a while. But no, to everyone’s surprise, fetching coffee day-in day-out is not part of the Scrum Master’s job description.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what are the eight preferred stances of a Scrum Master then?
Glad you asked!&lt;/p&gt;

&lt;p&gt;The eight preferred stances are:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The 8 Preferred Stances of a Scrum Master&quot; src=&quot;/img/xpdays-benelux-2017/8-Preferred-Stances.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Teacher:&lt;/strong&gt; There is much the Scrum Master can teach the Scrum Team. The Scrum Master must ensure that Scrum is understood and implemented properly by the entire team.
He or she makes sure the team stays on track of the Agile practices and principles.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The art of teaching is the art of assisting discovery.” - Mark Van Doren&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Impediment Remover:&lt;/strong&gt; An impediment is a problem that goes beyond the self-organization of the Development Team. Make sure the team understands and uses their own ability to solve problems and be self-organized. It might also create an opportunity for the team to come up with creative ideas to solve the impediments themselves.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Facilitator:&lt;/strong&gt; Being a Scrum Master also means facilitating the team in transparency, inspection and adaptation. It is also through great facilitation that the Scrum Master succeeds in getting more value out of every event.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coach:&lt;/strong&gt; It’s important to stay away from the solution and ask questions in order to facilitate discovery of solutions. Of course, the Scrum Master may offer new perspectives to help the team reach a solution.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Servant Leader:&lt;/strong&gt; Remember that the Scrum Master serves others. Being able to read the room, manage conflict and facilitate resolutions within the team is a very important responsibility of the Scrum Master. Make sure to lead by example and make others feel comfortable with failing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mentor:&lt;/strong&gt; The difference between coaching and mentoring is that for mentoring, having in-depth knowledge is crucial. A mentor helps the team understand the practices and principles of Agile and transfers his or her knowledge of the subject.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manager:&lt;/strong&gt; The Scrum Master manages a whole bunch of things: the culture, the Scrum process, team health, Scrum values, impediments and boundaries of self-organization. These boundaries need managing because boundaries that work for one team might not work for another.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Change Agent:&lt;/strong&gt; It’s essential to try to influence the company culture to open up to Scrum so the Scrum Team can flourish and thrive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More info on the 8 Stances of a Scrum Master can be found &lt;a href=&quot;http://www.barryovereem.com/the-8-stances-of-a-scrum-master-2nd-edition/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;do-not-deal-with-resistance---remi-armand-collaris--linda-dorlandt&quot;&gt;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Remi-Armand Collaris&quot; src=&quot;/img/xpdays-benelux-2017/Remi-Armand-Collaris.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Linda Dorlandt&quot; src=&quot;/img/xpdays-benelux-2017/Linda-Dorlandt.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/racollaris&quot; target=&quot;_blank&quot;&gt;Remi-Armand Collaris&lt;/a&gt; is a team and organisation coach who uses Agile, Scrum and LEAN ideas to find new ways to help people, both within teams as well as among teams, communicate and collaborate better.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/lindadanst&quot; target=&quot;_blank&quot;&gt;Linda Dorlandt&lt;/a&gt; is a mentor in change processes that help teams collaborate and reach a common goal. In order to do this, she uses and teaches methods for coaching and process management.&lt;/p&gt;

&lt;p&gt;The session by Remi-Armand and Linda started with two exercises. For the first exercise, we had to pair with one of our neighbours where one of us was the coach and the other the coachee.
The coachee had to open up about an issue they’re facing that they cannot solve by themselves and the coach had to try to resolve it by suggesting solutions. After a few minutes, we had to switch roles. Both people then had to show to the group whether they felt better about the problem or not.
The second exercise dealt with the same problem, but instead of immediately trying to suggest solutions, the coach asked questions to get to the bottom of the issue and figure out the goal of the coachee. Again, after this round, both people had to show to the rest of the group how they felt about their problem, if the feeling was better, worse, or stayed the same.
The goal of these exercises was to show that trying to push someone towards a solution for their problem isn’t the best way to handle the situation since there will always be a ‘but’ coming from the person with the issue. Asking questions and trying to get the person to thoroughly think about their situation and problem will help them reach a solution themselves that they understand and accept.&lt;/p&gt;

&lt;p&gt;As an example of someone trying to actively deal with resistance, they showed the YouTube video called &lt;a href=&quot;https://www.youtube.com/watch?v=-4EDhdAHrOg&quot; target=&quot;_blank&quot;&gt;‘It’s Not About the Nail’&lt;/a&gt;.
The conclusion is easy and was mentioned in the paragraph above. Pushing someone towards a solution they don’t see fit will not give you the outcome you hope for.&lt;/p&gt;

&lt;p&gt;Remi-Armand and Linda discussed a series of steps that will help facilitate the conversation with a person that has a problem and is unable to come to a solution by themselves.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First step: Make a &lt;strong&gt;connection&lt;/strong&gt;. Acknowledge the person’s issue and make them feel comfortable opening up to you.&lt;/li&gt;
  &lt;li&gt;Second step: “What is bothering you?” Try to figure out what the actual root cause is of their issue. Get to the bottom of it and &lt;strong&gt;focus&lt;/strong&gt; the complaints.&lt;/li&gt;
  &lt;li&gt;Third step: “What do you think will help you?” Guide the person towards a &lt;strong&gt;change in language&lt;/strong&gt;. It’s important they can see that a change in the situation is actually possible.&lt;/li&gt;
  &lt;li&gt;Fourth step: “When?” Create concrete &lt;strong&gt;plans&lt;/strong&gt; for change. Don’t postpone taking action. Plan it and make it happen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More information can be found on the Dutch website &lt;a href=&quot;http://www.praktischopweg.nl/&quot; target=&quot;_blank&quot;&gt;‘Praktisch op weg naar Teamresultaat’&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;motivate-your-team-with-gamification---jean-jacques-courtens&quot;&gt;Motivate Your Team with Gamification - Jean-Jacques Courtens&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Jean-Jacques Courtens&quot; src=&quot;/img/xpdays-benelux-2017/JJ-Courtens.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/jjcourtens&quot; target=&quot;_blank&quot;&gt;Jean-Jacques Courtens&lt;/a&gt; is the founder and managing partner at Adsdaq where he introduced gamification as a means of motivating the teams to deliver working products consistently.&lt;/p&gt;

&lt;p&gt;This was an Open Space session where Jean-Jacques discussed the way he implemented gamification in his company. At Adsdaq, they work with a reward system where points can be earned by completing certain tasks.
They assign points to three sections: Timesheets, demos and sprint objectives.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Timesheets: Filling in the timesheet in time is worth &lt;strong&gt;1 point&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Demos: Doing a demo is worth &lt;strong&gt;2 points&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Sprint objectives: Each completed story point is worth &lt;strong&gt;1 point&lt;/strong&gt;. For sprint objectives, they also use a point multiplier. X0 when the sprint has failed, X1 when 90% of their main goal of the sprint was achieved, X2 when 100% of the main goal was achieved and X3 when the entire sprint was a complete success.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all three sections, they also assign badges. For example, the team can earn the golden badge when 15 sprints in a row are a complete success.&lt;/p&gt;

&lt;p&gt;The earned points are actually converted to Euros that are spent on team celebrations where 1 point is worth 1 Euro:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;70% of the earned money goes towards team activities, such as team building, team lunch, etc.&lt;/li&gt;
  &lt;li&gt;30% is spent on personal rewards like cinema tickets, dinner for two, etc. This is only meant for team members that were part of the sprint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jean-Jacques noted that the company probably spends around 3.500-4.000 Euros every year for this reward system, for a team of 8 people.
It’s also important to note that the team is still being rewarded when the sprint fails and not being reprimanded for it. The reward is just a lot bigger when the sprints succeed.&lt;/p&gt;

&lt;h3 id=&quot;an-integral-view-on-agile---frederik-vannieuwenhuyse--johannes-schartau&quot;&gt;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Frederik Vannieuwenhuyse&quot; src=&quot;/img/xpdays-benelux-2017/Frederik-Vannieuwenhuyse.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Johannes Schartau&quot; src=&quot;/img/xpdays-benelux-2017/Johannes-Schartau.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/vfrederik&quot; target=&quot;_blank&quot;&gt;Frederik Vannieuwenhuyse&lt;/a&gt; is a multidisciplinary generalising specialist and is continuously on a journey of discovery and learning how to grow effective, resilient and agile organisations.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/integralagile&quot; target=&quot;_blank&quot;&gt;Johannes Schartau&lt;/a&gt; is an Agile Coach, consultant and professional Zombie Scrum fighter from Hamburg, Germany. He is passionate about creating environments for real collaboration and joyful creativity.&lt;/p&gt;

&lt;p&gt;The first part of this exercise consisted of reading six case studies and writing down on post-it notes how you would handle each situation, what questions you would ask.
These post-it notes were used in a later exercise, after an explanation of the so-called Integral Theory:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Integral Theory&quot; src=&quot;/img/xpdays-benelux-2017/Integral-Theory1.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Integral Theory was created and shaped by &lt;a href=&quot;https://twitter.com/thekenwilber&quot; target=&quot;_blank&quot;&gt;Ken Wilber&lt;/a&gt; and consists of the idea that anything can be viewed as a thing by itself or as part of a larger group (&lt;strong&gt;Individual VS Collective&lt;/strong&gt;).
Anything can also be seen from within and from the outside (&lt;strong&gt;Interior VS Exterior&lt;/strong&gt;). Based on this, Ken suggests that any kind of knowledge or experience can be assigned to any of the four quadrants shown above.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Leadership and Engagement:&lt;/strong&gt; Interprets people’s interior experiences and focuses on “I”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Culture and Shared Vision:&lt;/strong&gt; Interprets the collective consciousness of a group of people and focuses on “We”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Behavior and Metrics:&lt;/strong&gt; Observation of the behavior of people and focuses on “It”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Organizational Architecture and Systems:&lt;/strong&gt; Focuses on the behavior of a group of people as functional entities seen from outside: “They”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following image gives an overview of the questions that help organize knowledge into the quadrants:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Integral Theory&quot; src=&quot;/img/xpdays-benelux-2017/Integral-Theory2.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After explaining Integral Theory, we picked up our post-it notes and organized them into the quadrants that were put up across the room.
When the post-it notes were assigned to their respective quadrant, Frederik and Johannes asked us to move towards the quadrant in the room that we felt we had the most experience in or we felt we were good at.
Next, we had to discuss in our ‘quadrant groups’ whether the post-it notes that were put up in the quadrant were a good match for it or whether they belonged in another quadrant.
The final exercise consisted of moving with your group to the next quadrants and listening to one person, that stayed behind from the initial group, explain the conclusions they reached during the initial discussion.&lt;/p&gt;

&lt;p&gt;The presentation of Frederik and Johannes can be found &lt;a href=&quot;https://www.slideshare.net/frederikvannieuwenhuyse/an-integral-view-on-agile&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-art-of-hosting-conversations-that-matter---johan-decoster--jef-cumps&quot;&gt;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Johan Decoster&quot; src=&quot;/img/xpdays-benelux-2017/Johan-Decoster.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Jef Cumps&quot; src=&quot;/img/xpdays-benelux-2017/Jef-Cumps.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/johan_decoster&quot; target=&quot;_blank&quot;&gt;Johan Decoster&lt;/a&gt; is an Agile coach and trainer trying to make a difference in the lives of the people he works with by uncovering everyone’s unique potential and looking deeper into the essence behind any theory or concept.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/jcumps&quot; target=&quot;_blank&quot;&gt;Jef Cumps&lt;/a&gt; is an experienced coach and trainer supporting organisations in their transformation towards more agility and a more engaging, humane and effective way of looking at work.&lt;/p&gt;

&lt;p&gt;The session by Johan and Jef started with a small exercise. We paired up with our neighbour and asked each other the question, ‘Why are you really at this conference, and what has it meant to you so far?’
The point of the interview was asking questions to guide the interviewee in telling their story. After these interviews, the person interviewing had to share what they had learned with the rest of the table and the others had to take notes of the summary.
The steps for executing this exercise are covered in this picture:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting2.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After this exercise, it was clear that asking appropriate and considerate questions is a key element of hosting a good and constructive conversation.
This kind of conversation is built upon four key elements:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting3.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure the conversation stays polite and has a good flow of dialogue, but also take note of the two other sections.
It’s very important to respect the differences in ideas between you and your conversation partner. It’s okay to voice your opinion, but be considerate and respectful and make sure to not overpower the other person.
Listen often and do not judge too quickly. The other person might not be good in voicing their opinion clearly so suspending judgement is always a good idea. Things may become clearer later on in the conversation.&lt;/p&gt;

&lt;p&gt;Right before the break, people were invited to write down questions they had, where they could use the help of others to solve it.
Eventually, the top 8 questions were picked and each question owner was going to be the conversation host for one of the tables.
After the break, we joined a question owner at their table with a maximum of 4 persons per table. The other people helped the question owners answer their question by having three conversations based on the following questions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;What is the quest behind the question? Try to get into the question as deep as possible and figure out what the real reason is behind the question.&lt;/li&gt;
  &lt;li&gt;What is missing? Is anything from the previous conversation still missing? Are there any other additional reasons behind the question?&lt;/li&gt;
  &lt;li&gt;What actions can be taken? Decide on concrete actions that can be taken.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each question was assigned a time box of 15 minutes and you were only allowed to talk about that specific question during that time box.
After each question, the other people at the table moved around to another table to help with someone else’s issue.
So, after the exercise, every non-question owner was able to help three different persons by helping with a different question each time.
This exercise is called a Pro Action Cafe, which is based on &lt;a href=&quot;http://www.artofhosting.org/world-cafe/&quot; target=&quot;_blank&quot;&gt;World Cafe&lt;/a&gt; and Open Space.&lt;/p&gt;

&lt;p&gt;The outcome of the exercise was a group of people, happy to have some concrete actions to start working with to try and solve their issues.&lt;/p&gt;

&lt;p&gt;More info on the Art of Hosting can be found in the following image and on the &lt;a href=&quot;http://www.artofhosting.org/&quot; target=&quot;_blank&quot;&gt;mentioned website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting4.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Derya&quot;, &quot;last_name&quot;=&gt;&quot;Duru&quot;, &quot;permalink&quot;=&gt;&quot;/author/derya-duru/&quot;, &quot;title&quot;=&gt;&quot;Scrum Master&quot;, &quot;email&quot;=&gt;&quot;derya.duru@ordina.be&quot;, &quot;linkedin&quot;=&gt;&quot;derya-duru-52348a3a&quot;, &quot;avatar&quot;=&gt;&quot;derya-duru.jpg&quot;, &quot;twitter&quot;=&gt;&quot;deryaduru_&quot;, &quot;github&quot;=&gt;&quot;Deryaa&quot;, &quot;bio&quot;=&gt;&quot;Derya is a Scrum Master at Ordina Belgium always trying to better herself in Agile frameworks. She enjoys being challenged and as the Competence Leader Agile, she tries to improve her own skills continuously, while hoping to share her knowledge and help others with their understanding of Agile frameworks.&quot;}</name><email>derya.duru@ordina.be</email></author><category term="Conference" /><category term="XP Days Benelux" /><category term="Agile" /><category term="Scrum" /><category term="Scrum Master" /><category term="Gamification" /><category term="Integral Theory" /><category term="Art of Hosting" /><category term="Facilitation" /><category term="Coaching" /><summary type="html">XP Days Benelux is a two day conference on agile software development for and by agile practitioners. In this post, I will take you along to the talks and sessions I attended and participated in.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/xpdays-benelux-2017/XPDays-Benelux-2017.png" /></entry></feed>