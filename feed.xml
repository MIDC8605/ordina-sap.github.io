<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://ordina-jworks.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ordina-jworks.github.io/" rel="alternate" type="text/html" /><updated>2017-12-20T15:05:54+00:00</updated><id>https://ordina-jworks.github.io/</id><title type="html">Ordina JWorks Tech Blog</title><subtitle>We build innovative solutions with Java and JavaScript. To support this mission, we have several Competence Centers. From within those Competence Centers, we provide coaching to the employee and expert advice towards our customer. In order to keep in sync with the latest technologies and the latest trends, we frequently visit conferences around the globe.
</subtitle><entry><title type="html">An introduction to virtual and alternate reality</title><link href="https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality.html" rel="alternate" type="text/html" title="An introduction to virtual and alternate reality" /><published>2017-12-20T00:00:00+00:00</published><updated>2017-12-20T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality</id><content type="html" xml:base="https://ordina-jworks.github.io/iot/2017/12/20/Virtual-Reality.html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.css&quot; /&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;A look into the wonderful and exciting world of virtual, alternate and mixed reality.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt=&quot;Virtual Relaity&quot; src=&quot;/img/virtualreality/matrix.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;intro&quot;&gt;Intro&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The concept of virtual reality is not a new one&lt;/strong&gt;, neither is the one of augmented reality.
It has been around for quite a long time already.
Perhaps mixed reality will be the next big thing? 
I’ll leave that up to you to decide.&lt;/p&gt;

&lt;p&gt;Ever since we have been able to create visual representations of our own or other worlds, mankind has been fascinated by transferring the sensory perception into this world.
It is in the recent years that technological advancements have made it possible to do this in ever increasing realistic and engaging ways.&lt;/p&gt;

&lt;h2 id=&quot;a-trip-down-memory-lane&quot;&gt;A trip down memory lane…&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&quot;Sensorama&quot; src=&quot;/img/virtualreality/sensorama.jpeg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;1962&lt;/strong&gt; some crazy person built what is generally believed to be &lt;strong&gt;the first virtual reality experience.&lt;/strong&gt;
This machine pictured above is called &lt;strong&gt;a Sensorama.&lt;/strong&gt; 
The user of the Sensorama sits on a tilted chair and watches a short film with stereoscopic 3D images in wide-angle view with stereo sound and even added effects such as wind and aroma. 
A predecessor of those 4D movies, available in cinemas and theme parks these days.&lt;/p&gt;

&lt;p&gt;This, of course, cannot be compared with the more advanced implementations we have today.&lt;/p&gt;

&lt;p&gt;In the &lt;strong&gt;70’s and 80’s&lt;/strong&gt; virtual reality really started blossoming in certain specialized areas.
In 1968 Dr Ivan Sutherland created the &lt;strong&gt;Sword of Damocles at MIT.&lt;/strong&gt;
This head mounted display (or HMD) was so heavy it needed to be suspended from the ceiling.
It was able to track head movements and show rudimentary 3D images.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Sword of Damocles&quot; src=&quot;/img/virtualreality/damocles.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the &lt;strong&gt;90’s and 00’s:&lt;/strong&gt; more sophisticated &lt;strong&gt;military, flight and combat simulators started showing up.&lt;/strong&gt;
In the privatized industry: &lt;strong&gt;simulators for airline pilots, doctors and surgeons.&lt;/strong&gt;
Different ways of interacting with this virtual world also started appearing:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Head tracking&lt;/li&gt;
  &lt;li&gt;Touch screens&lt;/li&gt;
  &lt;li&gt;Gloves&lt;/li&gt;
  &lt;li&gt;Entire flight simulators&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is also when video game companies first tried to capitalize on this exciting new technology and bring it to a wider audience.
But the technology was still too rough and did not catch on.
Some of these early attempts include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nintendo Virtual Boy&lt;/li&gt;
  &lt;li&gt;Virtuality (arcade system)&lt;/li&gt;
  &lt;li&gt;iGlasses&lt;/li&gt;
  &lt;li&gt;VFX-1&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/virtualreality/virtualboy.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The Nintento VirtualBoy&quot;&gt;
        &lt;img alt=&quot;The Nintento VirtualBoy&quot; src=&quot;/img/virtualreality/virtualboy.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 56.40%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/virtuality.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The Virtuality arcade system&quot;&gt;
        &lt;img alt=&quot;The Virtuality arcade system&quot; src=&quot;/img/virtualreality/virtuality.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 39.65%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/iglasses.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The iGlasses VR glasses&quot;&gt;
        &lt;img alt=&quot;The iGlasses AR glasses&quot; src=&quot;/img/virtualreality/iglasses.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 44.55%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/virtualreality/vfx1.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The VFX-1 VR glasses&quot;&gt;
        &lt;img alt=&quot;The VFX-1 VR glasses&quot; src=&quot;/img/virtualreality/vfx1.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 51.50%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;But then came 2012.&lt;/strong&gt;
The year in which the &lt;strong&gt;Oculus Rift was kickstarted.&lt;/strong&gt; 
This sparked a renewed interest in virtual reality which, thanks to technological innovations, was looking much, much better it ever had!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Oculus Rift&quot; src=&quot;/img/virtualreality/oculus.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;all-kinds-of-realities&quot;&gt;All kinds of realities&lt;/h2&gt;
&lt;p&gt;Alright, so we have been talking about virtual reality for a while.
But what exactly are virtual reality (VR), augmented reality (AR) and mixed reality (MR) and how do they relate.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The reality - virtuality continuum&quot; src=&quot;/img/virtualreality/continuum.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;
Above you see the reality - virtuality continuum.&lt;/p&gt;

&lt;p&gt;Let’s start on the left side.
&lt;strong&gt;The left side depicts reality or the Real World.&lt;/strong&gt; 
With the Real World we mean the world where you, as the reader of this article, are sitting in a chair looking at your computer screen or holding your smartphone.
For the sake of this article we assume that the world is real and that there are no matrix-like shenanigans going on.
Simply put, the world as you know it and experience it every day, the world you and I live in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the other end of the spectrum we see the Virtual Environment.&lt;/strong&gt;
Everything in the virtual environment is virtual, so ‘not real’.
It is the imaginary world that you see on a screen.
The user is locked out of the real world.
An extreme example we all know of would be The Matrix, in which the person lives their life inside The Matrix not knowing the entire thing is not real.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Augmented Reality (AR) and Augmented Virtuality (AV) are situated in between these two ends of the spectrum.&lt;/strong&gt;
As their names suggest, AR is more closely aligned with the real world
while AV is closer to the virtual world.
In other words AR consists of a mostly real world with a few virtual elements augmenting the experience.
AV exists mostly in the virtual world with a few elements of our real world visible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mixed or Merged reality (MR) is a term used to describe anything between reality and virtuality.&lt;/strong&gt;
This means it contains both elements of the real world and a virtual world.
It can go all the way from a mostly real world with a bit of virtual world sprinkled on top to mostly virtual world with only trace elements of the real world remaining visible.
With MR as opposed to AR and AV, the virtual world is aware of the real world and can interact accordingly.&lt;/p&gt;

&lt;p&gt;We see the term X-realities being used to describe any of the VR, AR, MR and any other realities.&lt;/p&gt;

&lt;p&gt;These terms are pretty vague and some have even changed meaning over the years.
They outline the boundaries of the different areas in the spectrum, but they tend to bleed over into one another very easily, and get mixed up a lot!&lt;/p&gt;

&lt;h3 id=&quot;virtual-reality&quot;&gt;Virtual Reality&lt;/h3&gt;
&lt;p&gt;We call something virtual reality &lt;strong&gt;when the user is emerged in a virtual world and is completely blocked out from the real one.&lt;/strong&gt;
The simplest example of this is a 360° video experience.
More advanced implementations have the user take part in a fully virtual world where their movements and actions are tracked and translated into actions in the virtual world.&lt;/p&gt;

&lt;p&gt;Some examples of virtual reality implementations are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Games, both recreational and educational&lt;/li&gt;
  &lt;li&gt;Photo content: photo spheres&lt;/li&gt;
  &lt;li&gt;Video content: video spheres, 360 videos&lt;/li&gt;
  &lt;li&gt;Creative applications like 3D painting, sculpting, DJ applications and many others…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Currently the most popular application for VR is video games. There are a lot of games with VR support on the market already, and more are getting released almost every day!
Shooting games and simulators seem to be an exceptional match for the platform.
Although mostly used for gaming purposes, a VR headset can also be used for viewing 360 scenes and videos.
Thanks to head tracking, the viewers perspective is adjusted automatically when the head is moved.
The more advanced headsets like the Oculus Rift and the HTC Vive even have external sensor arrays to track user movement, and have hand based controllers for interaction.
Although you have to deal with additional setup compared to a phone where you can just drag the viewport or use your phone’s motion sensors.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Virtual reality setup&quot; src=&quot;/img/virtualreality/setup.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;augmented-reality&quot;&gt;Augmented Reality&lt;/h3&gt;
&lt;p&gt;Last year, the world exploded with people young and old crowding the streets in search for Pokémon.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Augmented Reality - Pokémon Go&quot; src=&quot;/img/virtualreality/ar-pokemon.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pokémon Go is a fine example of an AR application.
It is augmented reality because &lt;strong&gt;the application is still grounded mostly in the real world.&lt;/strong&gt;
The virtual elements are layered on top of the real world, but they do not interact with it.&lt;/p&gt;

&lt;p&gt;There are 4 types of augmented reality applications.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Marker&lt;/li&gt;
  &lt;li&gt;Inverse Marker&lt;/li&gt;
  &lt;li&gt;Markerless&lt;/li&gt;
  &lt;li&gt;Projection&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;marker-based&quot;&gt;Marker based&lt;/h4&gt;
&lt;p&gt;Marker based AR apps use image recognition to recognize a specific pattern or marker.
The marker is detected and replaced or covered with a virtual object.
These types of applications are very simple and used for showcasing or displaying additional information.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Marker based AR&quot; src=&quot;/img/virtualreality/ar-marker.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;inverse-marker-based&quot;&gt;Inverse marker based&lt;/h4&gt;
&lt;p&gt;Inverse marker based AR is very similar to regular marker based AR.
These applications are used in conjunction with large screens with cameras where the user only has to control the marker.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Inverse marker based AR&quot; src=&quot;/img/virtualreality/ar-inverse-marker.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;markerless&quot;&gt;Markerless&lt;/h4&gt;
&lt;p&gt;These markerless applications use positional tracking and GPS to determine where to show things by mapping the environment and creating a spatial awareness to track objects when moving.
The popular Pokémon Go and Ikea apps are perfect examples of this.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Markerless based AR&quot; src=&quot;/img/virtualreality/ar-markerless.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;projection-based&quot;&gt;Projection based&lt;/h4&gt;
&lt;p&gt;Projection based AR projects images rather than showing them on the screen.
This requires hardware capable of projecting so is not as widespread.
It is used more in manufacturing.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Projection based AR&quot; src=&quot;/img/virtualreality/ar-projection.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
The great thing about AR is that any recent smartphone is capable of running AR applications.
Many AR apps only need a camera to work.
While specialized depth sensing sensors exist, they are not as widespread and are used more in specialized industries.&lt;/p&gt;

&lt;h3 id=&quot;mixed-reality&quot;&gt;Mixed Reality&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Mixed reality takes the best parts of both virtual and augmented reality.&lt;/strong&gt;
What makes mixed reality special is that it understands the environment, it can interact with and respond to changes or events happening in the real world.
Hardware that supports MR takes the form of glasses and headsets with cameras and other sensors.
These sensors are used to map the physical 3D space so the virtual objects know where they are situated and know what is in the real world.
This is where you get the holographic experiences, even tough they aren’t real holograms, they look and feel exactly as you would expect them to.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Mixed reality&quot; src=&quot;/img/virtualreality/banner.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hardware-and-current-pain-points&quot;&gt;Hardware and current pain points&lt;/h2&gt;
&lt;p&gt;Current devices are a big step up from what we had even a few years ago, but there are still many improvements to be made.
&lt;strong&gt;The high-end VR devices require beefy computers equipped with high-end graphics cards.&lt;/strong&gt;
The headsets requiring a smartphone offer a more mobile experience but are still limited in the visual effects department.
For a virtual reality experience to feel smooth and natural &lt;strong&gt;it needs to be rendered at a minimum of 90 frames per second.&lt;/strong&gt;
If the device can not keep up, the user might experience VR sickness, similar to motion sickness.
Because our eyes are so close to the screen and the resolution our eyes can perceive is so high, pixels become visible, detracting from the experience.
When looking closely, the screen looks like a raster.
This can be solved with a higher resolution but that again requires more computational power.
This much content at such a high pace also requires a lot of bandwidth and low latency.&lt;/p&gt;

&lt;p&gt;Another deterrent for VR headsets is the extensive setup required to make them work.
High-end devices require base stations or tracking cameras to accurately measure movement.
There are devices with sensors built in so that they are not dependent on external base stations, this technique is called inside-out tracking.&lt;/p&gt;

&lt;h2 id=&quot;creating-realities&quot;&gt;Creating realities&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Making software that is AR/VR/MR enabled can be quite different from traditional business application development.&lt;/strong&gt;
These type of applications are often &lt;strong&gt;heavily dependent on visual elements&lt;/strong&gt; and can require extra artistic knowledge.
For virtual and mixed reality game engines can be used to create “games” to create these experiences.&lt;/p&gt;

&lt;p&gt;These are some of the most popular game engines that are free for personal user:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unity&lt;/li&gt;
  &lt;li&gt;Unreal Engine&lt;/li&gt;
  &lt;li&gt;CryEngine&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Think of these as a sort of photoshop for software.
We can leverage the editors to see what we’re working on and make changes immediately.
These tools are ideal for virtual reality.
Both Unity and Unreal Engine have plugins available for augmented reality.&lt;/p&gt;

&lt;p&gt;The more business targeted applications are often augmented reality enabled applications.
&lt;strong&gt;Both Apple and Google have made big efforts to support this on their respective OSes&lt;/strong&gt; and basically every smartphone with a camera is now AR enabled.
Apple’s ARKit and Google’s ARCore are the respective augmented reality APIs for their IOS and Android platforms.
Since the inception of these two APIs the amount of AR apps has greatly increased, Google is even discontinuing its &lt;a href=&quot;https://developers.google.com/tango/&quot;&gt;Tango project&lt;/a&gt; in favor of ARCore.
There are many other SDKs available, many of which even have their own Unity plugin.
Vuforia and ARToolkit seem to be the most popular ones.&lt;/p&gt;

&lt;p&gt;Microsoft created the Windows Mixed Reality framework for mixed, virtual or augmented reality apps to run on windows 10 based computers.&lt;/p&gt;

&lt;h2 id=&quot;business-cases--examples&quot;&gt;Business cases &amp;amp; Examples&lt;/h2&gt;
&lt;p&gt;So, as software developers, what can we do with all this fancy tech?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our Dutch colleagues&lt;/strong&gt; already made an awesomely detailed VR application to help &lt;strong&gt;train personnel of the Royal Dutch Navy.&lt;/strong&gt;
Make sure to have a look since it is a truly impressive feat of software engineering.&lt;/p&gt;
&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 55%;&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/wnC-jvtwJtY?rel=0&quot; width=&quot;100%&quot; height=&quot;100%;&quot; style=&quot;position: absolute; left: 0; top: 0; bottom: 0; right: 0;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Virtual reality is widely used for training purposes.&lt;/strong&gt;
Whether it is for a boat, an aircraft, a machine or a human body, a virtual space can prepare someone for situations that are otherwise very costly or difficult to simulate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Augmented and mixed reality can show information when and where you need it.&lt;/strong&gt;
On a mobile phone screen, through glasses or projected on a surface, having the correct information at hand is always useful.&lt;/p&gt;

&lt;p&gt;Visualizing a product before it is manufactured can enhance the design process by discovering points of improvement much earlier on.
Visualization like Ikea’s app for trying furniture or a tour through historic Bruges or even business cards with an AR marker for increased memorability.&lt;/p&gt;

&lt;p&gt;For us at Ordina, we see most potential in AR and MR.
Mobile based AR applications that can be used for showcases, in the IoT world, or even just augmented digital signage with inverse marker based AR.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The years to come will bring even more advancements&lt;/strong&gt; to the wonderful world of virtual, augmented and mixed realities.
A lot of things are still shaping up and being developed, ever improving on earlier versions.
A lot of solutions and &lt;strong&gt;standards are still being figured out.&lt;/strong&gt;
Which means that now is a great time for us to try stuff out, and get a feel for the technology, whilst preparing and working on proof of concept applications.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Michael&quot;, &quot;last_name&quot;=&gt;&quot;Vandendriessche&quot;, &quot;permalink&quot;=&gt;&quot;/author/michael-vandendriessche&quot;, &quot;avatar&quot;=&gt;&quot;michael-vandendriessche.jpg&quot;, &quot;title&quot;=&gt;&quot;SoftWare Engineer&quot;, &quot;title2&quot;=&gt;&quot;Android developer&quot;, &quot;email&quot;=&gt;&quot;michael.vandendriessche@ordina.be&quot;, &quot;twitter&quot;=&gt;&quot;miva2&quot;, &quot;bio&quot;=&gt;&quot;Michael is a Software Engineer at Ordina Belgium with a passion for Android. Besides mobile apps he also enjoys working on backend as well as frontend applications. He is always keen on trying out new things! In his spare time he likes to develop (and play) games.&quot;}</name><email>michael.vandendriessche@ordina.be</email></author><category term="IoT" /><category term="Internet of Things" /><category term="IoT" /><category term="Virtual reality" /><category term="Alternate reality" /><category term="Mixed reality" /><category term="Merged Reality" /><category term="Oculus Rift" /><category term="Oculus" /><category term="HTC Vive" /><category term="Vive" /><category term="SteamVR" /><category term="Steam" /><category term="Unreal Engine" /><category term="Unity" /><category term="Hololens" /><category term="Holo Lens" /><category term="Microsoft" /><category term="Google Glass" /><category term="Google" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/virtualreality/banner.jpg" /></entry><entry><title type="html">XP Days Benelux 2017</title><link href="https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017.html" rel="alternate" type="text/html" title="XP Days Benelux 2017" /><published>2017-12-19T00:00:00+00:00</published><updated>2017-12-19T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2017/12/19/XPDays-Benelux-2017.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://www.xpdaysbenelux.nl&quot; target=&quot;_blank&quot;&gt;XP Days Benelux&lt;/a&gt; is a two day conference on agile software development for and by agile practitioners.
In this post, I will take you along to the talks and sessions I attended and participated in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;the-toc&quot;&gt;

  &lt;h1 class=&quot;the-toc__heading&quot;&gt;Table Of Contents&lt;/h1&gt;

  &lt;ol class=&quot;the-toc__list&quot;&gt;
      &lt;li&gt;&lt;a href=&quot;#the-8-stances-of-a-scrum-master---barry-overeem&quot; title=&quot;The 8 Stances of a Scrum Master - Barry Overeem&quot;&gt;The 8 Stances of a Scrum Master - Barry Overeem&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#do-not-deal-with-resistance---remi-armand-collaris--linda-dorlandt&quot; title=&quot;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&quot;&gt;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#motivate-your-team-with-gamification---jean-jacques-courtens&quot; title=&quot;Motivate Your Team with Gamification - Jean-Jacques Courtens&quot;&gt;Motivate Your Team with Gamification - Jean-Jacques Courtens&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#an-integral-view-on-agile---frederik-vannieuwenhuyse--johannes-schartau&quot; title=&quot;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&quot;&gt;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-art-of-hosting-conversations-that-matter---johan-decoster--jef-cumps&quot; title=&quot;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&quot;&gt;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&lt;/a&gt;&lt;/li&gt;
    &lt;/ol&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-8-stances-of-a-scrum-master---barry-overeem&quot;&gt;The 8 Stances of a Scrum Master - Barry Overeem&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Barry Overeem&quot; src=&quot;/img/xpdays-benelux-2017/Barry-Overeem.jpg&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/barryovereem&quot; target=&quot;_blank&quot;&gt;Barry Overeem&lt;/a&gt; is a freelance Scrum Master and Professional Scrum Trainer at Scrum.org. He’s an active member of the Scrum community and shares his insights and knowledge by speaking at conferences, facilitating workshops and writing blog posts.&lt;/p&gt;

&lt;p&gt;It is very common for a Scrum Master to get tasks assigned, that aren’t actually tasks a Scrum Master should be performing in the first place.
The job description of a Scrum Master comes with a lot of other tasks than people, sometimes including the Scrum Master, assume.&lt;/p&gt;

&lt;p&gt;The session starts with an overview of the eight misunderstood stances of a Scrum Master:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The 8 Misunderstood Stances of a Scrum Master&quot; src=&quot;/img/xpdays-benelux-2017/8-Misunderstood-Stances.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Scrum Police:&lt;/strong&gt; Scrum isn’t a hard set of rules to be followed. There’s absolutely nothing wrong with a bit of flexibility and empathy based on the team’s situation.
Time boxing for example is very important but keep an open mind when the team is having a very valuable conversation after the time box has ended.
Flexibility regarding time boxing is of course not meant to happen too often. So keep an eye on recurring discussions to see if they need to be addressed individually.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hero:&lt;/strong&gt; Managing and solving all problems and impediments like nobody’s business! While an important task for the Scrum Master, make sure not to get too focused on being the team’s impediment super hero.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scribe:&lt;/strong&gt; “Hey John, you’re taking notes again for this meeting, right? Thanks!”. Do you recognize this exchange? Congratulations, you’re the team’s personal scribe.
This is especially to be avoided during retrospectives since this creates a false sense of ownership of the issues and actions towards the Scrum Master.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Admin:&lt;/strong&gt; The Scrum Master is the workflow master. Need to add a board in Jira? Ask the Scrum Master. Need to start a sprint in Jira? Ask the Scrum Master. Now, hold up right there! The Scrum Master &lt;em&gt;can&lt;/em&gt; of course perform these tasks but yup, so can the other team members.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Secretary:&lt;/strong&gt; The Scrum Master plans all the work in the team members’ agendas. Keep up-to-date with everybody’s holidays, sick days and toilet breaks. &lt;em&gt;(Can you sense the sarcasm?)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Chairman:&lt;/strong&gt; While this is often the case, the Daily Scrum isn’t a meeting where the team members report back to the Scrum Master. It’s a meeting by and for the development team. In absence of the Scrum Master, the Daily Scrum must still happen.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Team Boss:&lt;/strong&gt; The Scrum Master is the boss of the team. He/she decides who is in and who is out. A sick day? You’re fired! Buy the Scrum Master a chocolate cake? Here, have a raise! Oh, what a world it would be!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coffee Clerk:&lt;/strong&gt; Please do get your team members some coffee once in a while. But no, to everyone’s surprise, fetching coffee day-in day-out is not part of the Scrum Master’s job description.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what are the eight preferred stances of a Scrum Master then?
Glad you asked!&lt;/p&gt;

&lt;p&gt;The eight preferred stances are:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The 8 Preferred Stances of a Scrum Master&quot; src=&quot;/img/xpdays-benelux-2017/8-Preferred-Stances.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Teacher:&lt;/strong&gt; There is much the Scrum Master can teach the Scrum Team. The Scrum Master must ensure that Scrum is understood and implemented properly by the entire team.
He or she makes sure the team stays on track of the Agile practices and principles.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The art of teaching is the art of assisting discovery.” - Mark Van Doren&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Impediment Remover:&lt;/strong&gt; An impediment is a problem that goes beyond the self-organization of the Development Team. Make sure the team understands and uses their own ability to solve problems and be self-organized. It might also create an opportunity for the team to come up with creative ideas to solve the impediments themselves.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Facilitator:&lt;/strong&gt; Being a Scrum Master also means facilitating the team in transparency, inspection and adaptation. It is also through great facilitation that the Scrum Master succeeds in getting more value out of every event.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Coach:&lt;/strong&gt; It’s important to stay away from the solution and ask questions in order to facilitate discovery of solutions. Of course, the Scrum Master may offer new perspectives to help the team reach a solution.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Servant Leader:&lt;/strong&gt; Remember that the Scrum Master serves others. Being able to read the room, manage conflict and facilitate resolutions within the team is a very important responsibility of the Scrum Master. Make sure to lead by example and make others feel comfortable with failing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Mentor:&lt;/strong&gt; The difference between coaching and mentoring is that for mentoring, having in-depth knowledge is crucial. A mentor helps the team understand the practices and principles of Agile and transfers his or her knowledge of the subject.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Manager:&lt;/strong&gt; The Scrum Master manages a whole bunch of things: the culture, the Scrum process, team health, Scrum values, impediments and boundaries of self-organization. These boundaries need managing because boundaries that work for one team might not work for another.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Change Agent:&lt;/strong&gt; It’s essential to try to influence the company culture to open up to Scrum so the Scrum Team can flourish and thrive.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More info on the 8 Stances of a Scrum Master can be found &lt;a href=&quot;http://www.barryovereem.com/the-8-stances-of-a-scrum-master-2nd-edition/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;do-not-deal-with-resistance---remi-armand-collaris--linda-dorlandt&quot;&gt;Do Not Deal with Resistance! - Remi-Armand Collaris &amp;amp; Linda Dorlandt&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Remi-Armand Collaris&quot; src=&quot;/img/xpdays-benelux-2017/Remi-Armand-Collaris.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Linda Dorlandt&quot; src=&quot;/img/xpdays-benelux-2017/Linda-Dorlandt.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/racollaris&quot; target=&quot;_blank&quot;&gt;Remi-Armand Collaris&lt;/a&gt; is a team and organisation coach who uses Agile, Scrum and LEAN ideas to find new ways to help people, both within teams as well as among teams, communicate and collaborate better.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/lindadanst&quot; target=&quot;_blank&quot;&gt;Linda Dorlandt&lt;/a&gt; is a mentor in change processes that help teams collaborate and reach a common goal. In order to do this, she uses and teaches methods for coaching and process management.&lt;/p&gt;

&lt;p&gt;The session by Remi-Armand and Linda started with two exercises. For the first exercise, we had to pair with one of our neighbours where one of us was the coach and the other the coachee.
The coachee had to open up about an issue they’re facing that they cannot solve by themselves and the coach had to try to resolve it by suggesting solutions. After a few minutes, we had to switch roles. Both people then had to show to the group whether they felt better about the problem or not.
The second exercise dealt with the same problem, but instead of immediately trying to suggest solutions, the coach asked questions to get to the bottom of the issue and figure out the goal of the coachee. Again, after this round, both people had to show to the rest of the group how they felt about their problem, if the feeling was better, worse, or stayed the same.
The goal of these exercises was to show that trying to push someone towards a solution for their problem isn’t the best way to handle the situation since there will always be a ‘but’ coming from the person with the issue. Asking questions and trying to get the person to thoroughly think about their situation and problem will help them reach a solution themselves that they understand and accept.&lt;/p&gt;

&lt;p&gt;As an example of someone trying to actively deal with resistance, they showed the YouTube video called &lt;a href=&quot;https://www.youtube.com/watch?v=-4EDhdAHrOg&quot; target=&quot;_blank&quot;&gt;‘It’s Not About the Nail’&lt;/a&gt;.
The conclusion is easy and was mentioned in the paragraph above. Pushing someone towards a solution they don’t see fit will not give you the outcome you hope for.&lt;/p&gt;

&lt;p&gt;Remi-Armand and Linda discussed a series of steps that will help facilitate the conversation with a person that has a problem and is unable to come to a solution by themselves.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First step: Make a &lt;strong&gt;connection&lt;/strong&gt;. Acknowledge the person’s issue and make them feel comfortable opening up to you.&lt;/li&gt;
  &lt;li&gt;Second step: “What is bothering you?” Try to figure out what the actual root cause is of their issue. Get to the bottom of it and &lt;strong&gt;focus&lt;/strong&gt; the complaints.&lt;/li&gt;
  &lt;li&gt;Third step: “What do you think will help you?” Guide the person towards a &lt;strong&gt;change in language&lt;/strong&gt;. It’s important they can see that a change in the situation is actually possible.&lt;/li&gt;
  &lt;li&gt;Fourth step: “When?” Create concrete &lt;strong&gt;plans&lt;/strong&gt; for change. Don’t postpone taking action. Plan it and make it happen.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More information can be found on the Dutch website &lt;a href=&quot;http://www.praktischopweg.nl/&quot; target=&quot;_blank&quot;&gt;‘Praktisch op weg naar Teamresultaat’&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;motivate-your-team-with-gamification---jean-jacques-courtens&quot;&gt;Motivate Your Team with Gamification - Jean-Jacques Courtens&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Jean-Jacques Courtens&quot; src=&quot;/img/xpdays-benelux-2017/JJ-Courtens.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/jjcourtens&quot; target=&quot;_blank&quot;&gt;Jean-Jacques Courtens&lt;/a&gt; is the founder and managing partner at Adsdaq where he introduced gamification as a means of motivating the teams to deliver working products consistently.&lt;/p&gt;

&lt;p&gt;This was an Open Space session where Jean-Jacques discussed the way he implemented gamification in his company. At Adsdaq, they work with a reward system where points can be earned by completing certain tasks.
They assign points to three sections: Timesheets, demos and sprint objectives.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Timesheets: Filling in the timesheet in time is worth &lt;strong&gt;1 point&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Demos: Doing a demo is worth &lt;strong&gt;2 points&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Sprint objectives: Each completed story point is worth &lt;strong&gt;1 point&lt;/strong&gt;. For sprint objectives, they also use a point multiplier. X0 when the sprint has failed, X1 when 90% of their main goal of the sprint was achieved, X2 when 100% of the main goal was achieved and X3 when the entire sprint was a complete success.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all three sections, they also assign badges. For example, the team can earn the golden badge when 15 sprints in a row are a complete success.&lt;/p&gt;

&lt;p&gt;The earned points are actually converted to Euros that are spent on team celebrations where 1 point is worth 1 Euro:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;70% of the earned money goes towards team activities, such as team building, team lunch, etc.&lt;/li&gt;
  &lt;li&gt;30% is spent on personal rewards like cinema tickets, dinner for two, etc. This is only meant for team members that were part of the sprint.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jean-Jacques noted that the company probably spends around 3.500-4.000 Euros every year for this reward system, for a team of 8 people.
It’s also important to note that the team is still being rewarded when the sprint fails and not being reprimanded for it. The reward is just a lot bigger when the sprints succeed.&lt;/p&gt;

&lt;h3 id=&quot;an-integral-view-on-agile---frederik-vannieuwenhuyse--johannes-schartau&quot;&gt;An Integral View on Agile - Frederik Vannieuwenhuyse &amp;amp; Johannes Schartau&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Frederik Vannieuwenhuyse&quot; src=&quot;/img/xpdays-benelux-2017/Frederik-Vannieuwenhuyse.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Johannes Schartau&quot; src=&quot;/img/xpdays-benelux-2017/Johannes-Schartau.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/vfrederik&quot; target=&quot;_blank&quot;&gt;Frederik Vannieuwenhuyse&lt;/a&gt; is a multidisciplinary generalising specialist and is continuously on a journey of discovery and learning how to grow effective, resilient and agile organisations.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/integralagile&quot; target=&quot;_blank&quot;&gt;Johannes Schartau&lt;/a&gt; is an Agile Coach, consultant and professional Zombie Scrum fighter from Hamburg, Germany. He is passionate about creating environments for real collaboration and joyful creativity.&lt;/p&gt;

&lt;p&gt;The first part of this exercise consisted of reading six case studies and writing down on post-it notes how you would handle each situation, what questions you would ask.
These post-it notes were used in a later exercise, after an explanation of the so-called Integral Theory:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Integral Theory&quot; src=&quot;/img/xpdays-benelux-2017/Integral-Theory1.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Integral Theory was created and shaped by &lt;a href=&quot;https://twitter.com/thekenwilber&quot; target=&quot;_blank&quot;&gt;Ken Wilber&lt;/a&gt; and consists of the idea that anything can be viewed as a thing by itself or as part of a larger group (&lt;strong&gt;Individual VS Collective&lt;/strong&gt;).
Anything can also be seen from within and from the outside (&lt;strong&gt;Interior VS Exterior&lt;/strong&gt;). Based on this, Ken suggests that any kind of knowledge or experience can be assigned to any of the four quadrants shown above.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Leadership and Engagement:&lt;/strong&gt; Interprets people’s interior experiences and focuses on “I”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Culture and Shared Vision:&lt;/strong&gt; Interprets the collective consciousness of a group of people and focuses on “We”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Behavior and Metrics:&lt;/strong&gt; Observation of the behavior of people and focuses on “It”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Organizational Architecture and Systems:&lt;/strong&gt; Focuses on the behavior of a group of people as functional entities seen from outside: “They”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following image gives an overview of the questions that help organize knowledge into the quadrants:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Integral Theory&quot; src=&quot;/img/xpdays-benelux-2017/Integral-Theory2.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 750px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After explaining Integral Theory, we picked up our post-it notes and organized them into the quadrants that were put up across the room.
When the post-it notes were assigned to their respective quadrant, Frederik and Johannes asked us to move towards the quadrant in the room that we felt we had the most experience in or we felt we were good at.
Next, we had to discuss in our ‘quadrant groups’ whether the post-it notes that were put up in the quadrant were a good match for it or whether they belonged in another quadrant.
The final exercise consisted of moving with your group to the next quadrants and listening to one person, that stayed behind from the initial group, explain the conclusions they reached during the initial discussion.&lt;/p&gt;

&lt;p&gt;The presentation of Frederik and Johannes can be found &lt;a href=&quot;https://www.slideshare.net/frederikvannieuwenhuyse/an-integral-view-on-agile&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-art-of-hosting-conversations-that-matter---johan-decoster--jef-cumps&quot;&gt;The Art of Hosting Conversations that Matter - Johan Decoster &amp;amp; Jef Cumps&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Johan Decoster&quot; src=&quot;/img/xpdays-benelux-2017/Johan-Decoster.png&quot; /&gt;&lt;/span&gt;
&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Jef Cumps&quot; src=&quot;/img/xpdays-benelux-2017/Jef-Cumps.png&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/johan_decoster&quot; target=&quot;_blank&quot;&gt;Johan Decoster&lt;/a&gt; is an Agile coach and trainer trying to make a difference in the lives of the people he works with by uncovering everyone’s unique potential and looking deeper into the essence behind any theory or concept.&lt;br /&gt;&lt;br /&gt;
&lt;a href=&quot;https://twitter.com/jcumps&quot; target=&quot;_blank&quot;&gt;Jef Cumps&lt;/a&gt; is an experienced coach and trainer supporting organisations in their transformation towards more agility and a more engaging, humane and effective way of looking at work.&lt;/p&gt;

&lt;p&gt;The session by Johan and Jef started with a small exercise. We paired up with our neighbour and asked each other the question, ‘Why are you really at this conference, and what has it meant to you so far?’
The point of the interview was asking questions to guide the interviewee in telling their story. After these interviews, the person interviewing had to share what they had learned with the rest of the table and the others had to take notes of the summary.
The steps for executing this exercise are covered in this picture:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting2.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After this exercise, it was clear that asking appropriate and considerate questions is a key element of hosting a good and constructive conversation.
This kind of conversation is built upon four key elements:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting3.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make sure the conversation stays polite and has a good flow of dialogue, but also take note of the two other sections.
It’s very important to respect the differences in ideas between you and your conversation partner. It’s okay to voice your opinion, but be considerate and respectful and make sure to not overpower the other person.
Listen often and do not judge too quickly. The other person might not be good in voicing their opinion clearly so suspending judgement is always a good idea. Things may become clearer later on in the conversation.&lt;/p&gt;

&lt;p&gt;Right before the break, people were invited to write down questions they had, where they could use the help of others to solve it.
Eventually, the top 8 questions were picked and each question owner was going to be the conversation host for one of the tables.
After the break, we joined a question owner at their table with a maximum of 4 persons per table. The other people helped the question owners answer their question by having three conversations based on the following questions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;What is the quest behind the question? Try to get into the question as deep as possible and figure out what the real reason is behind the question.&lt;/li&gt;
  &lt;li&gt;What is missing? Is anything from the previous conversation still missing? Are there any other additional reasons behind the question?&lt;/li&gt;
  &lt;li&gt;What actions can be taken? Decide on concrete actions that can be taken.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each question was assigned a time box of 15 minutes and you were only allowed to talk about that specific question during that time box.
After each question, the other people at the table moved around to another table to help with someone else’s issue.
So, after the exercise, every non-question owner was able to help three different persons by helping with a different question each time.
This exercise is called a &lt;a href=&quot;http://www.artofhosting.org/world-cafe/&quot; target=&quot;_blank&quot;&gt;World Cafe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The outcome of the exercise was a group of people, happy to have some concrete actions to start working with to try and solve their issues.&lt;/p&gt;

&lt;p&gt;More info on the Art of Hosting can be found in the following image and on the &lt;a href=&quot;http://www.artofhosting.org/&quot; target=&quot;_blank&quot;&gt;mentioned website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Art of Hosting&quot; src=&quot;/img/xpdays-benelux-2017/Art-of-Hosting4.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 450px;&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Derya&quot;, &quot;last_name&quot;=&gt;&quot;Duru&quot;, &quot;permalink&quot;=&gt;&quot;/author/derya-duru/&quot;, &quot;title&quot;=&gt;&quot;Scrum Master&quot;, &quot;email&quot;=&gt;&quot;derya.duru@ordina.be&quot;, &quot;linkedin&quot;=&gt;&quot;derya-duru-52348a3a&quot;, &quot;avatar&quot;=&gt;&quot;derya-duru.jpg&quot;, &quot;twitter&quot;=&gt;&quot;deryaduru_&quot;, &quot;github&quot;=&gt;&quot;Deryaa&quot;, &quot;bio&quot;=&gt;&quot;Derya is a Scrum Master at Ordina Belgium always trying to better herself in Agile frameworks. She enjoys being challenged and as the Competence Leader Agile, she tries to improve her own skills continuously, while hoping to share her knowledge and help others with their understanding of Agile frameworks.&quot;}</name><email>derya.duru@ordina.be</email></author><category term="Conference" /><category term="XP Days Benelux" /><category term="Agile" /><category term="Scrum" /><category term="Scrum Master" /><category term="Gamification" /><category term="Integral Theory" /><category term="Art of Hosting" /><category term="Facilitation" /><category term="Coaching" /><summary type="html">XP Days Benelux is a two day conference on agile software development for and by agile practitioners. In this post, I will take you along to the talks and sessions I attended and participated in.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/xpdays-benelux-2017/XPDays-Benelux-2017.png" /></entry><entry><title type="html">Building a Meeseeks Box!</title><link href="https://ordina-jworks.github.io/iot/2017/12/16/Meeseeks-Box-DIY-Guide.html" rel="alternate" type="text/html" title="Building a Meeseeks Box!" /><published>2017-12-16T00:00:00+00:00</published><updated>2017-12-16T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/iot/2017/12/16/Meeseeks-Box-DIY-Guide</id><content type="html" xml:base="https://ordina-jworks.github.io/iot/2017/12/16/Meeseeks-Box-DIY-Guide.html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.css&quot; /&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ooh, I’m mister Meeseeks, look at me!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;a-meeseeks-box&quot;&gt;A Meeseeks Box?&lt;/h2&gt;
&lt;p&gt;For those of you who are already familiar with the show Rick and Morty, the Meeseeks Box should be a well-known object!
For those who do not know Rick and Morty, go watch it now, I’ll wait!&lt;/p&gt;

&lt;p&gt;In short: The Meeseeks Box is a technological/magic box crafted by Rick. 
When the button on top is pressed, a Meeseeks is spawned.
The Meeseeks can be given one assignment (like a wish) and he will try to fulfil said request.
The Meeseeks will only disappear when the task has been completed.
One caveat, existence is painful for the Meeseeks, the longer it lives, the more sanity it loses.&lt;/p&gt;

&lt;p&gt;Our colleague Dieter Hubau made a fully operational Rick and Morty themed example to demonstrate Spring Cloud Stream. 
You can read this excellent story about it &lt;a href=&quot;https://ordina-jworks.github.io/spring/2017/10/04/Spring-Cloud-Stream-Rick-And-Morty-Adventure.html&quot; target=&quot;_blank&quot;&gt;on our tech blog&lt;/a&gt;
Be sure to check it out, it’s a good read!
This blog post will go into detail on building your own Meeseeks Box, which I integrated to work with the above Spring Cloud Stream demo.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The Meeseeks Box&quot; src=&quot;/img/meeseeks/concept.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-should-it-do&quot;&gt;What should it do?&lt;/h2&gt;
&lt;p&gt;The Meeseeks Box is intended to complement the Spring Cloud Stream demo mentioned above.
If the button on top is pressed, like in the series, a Meeseeks is spawned in the demo application. (A new instance, see the Spring Cloud Stream blog post)
The Meeseeks will then search for the Szechuan sauce until it is found.
For the demo a maximum of three Meeseekses can be spawned, as to not overwhelm the people with Meeseekses, because they tend to get annoying if they live for too long.&lt;/p&gt;

&lt;h2 id=&quot;the-hardware-setup&quot;&gt;The hardware setup&lt;/h2&gt;
&lt;p&gt;The setup for the box is as follows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A box (container)&lt;/li&gt;
  &lt;li&gt;Raspberry Pi 3 with GPIO connected to a button with an LED&lt;/li&gt;
  &lt;li&gt;Internal battery pack to power the box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Since the Raspberry Pi 3 has built in WiFi and Bluetooth it is possible to make the box fully wireless.
The Pi has Node installed on it (the latest version) and is connected to the WiFi.
The WiFi can be easily configured by placing the SD card in your computer and placing a file name &lt;code class=&quot;highlighter-rouge&quot;&gt;wpa_supplicant.conf&lt;/code&gt; file in the root of the boot volume.
This file contains the configuration for the WiFi network the Pi should connect to.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;wpa_supplicant.conf&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;country=BE
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev 
update_config=1

network={ 
    ssid=&quot;SSID-goes-here&quot; 
    psk=&quot;key-goes-here&quot; 
    key_mgmt=WPA-PSK
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Make sure you do not omit any of the first lines or your Pi’s WiFi will cease to function until a corrected version of the file is used!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;The hardware setup&quot; src=&quot;/img/meeseeks/raspberry-pi-button.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 400px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-build&quot;&gt;The build!&lt;/h2&gt;
&lt;p&gt;The original idea was to make the box itself from wood or thick cardboard. 
But since I wanted to try something new that would entail less manual work with getting all the insets correct on the sides of the box, I decided to go for a 3D printed version.&lt;/p&gt;

&lt;p&gt;The box:&lt;/p&gt;
&lt;iframe id=&quot;vs_iframe&quot; src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/meeseeks/box.stl&quot; style=&quot;border:0;margin:0;width:100%;height:100%;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;You can download the file &lt;a href=&quot;/img/meeseeks/box.stl&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The lid:&lt;/p&gt;
&lt;iframe id=&quot;vs_iframe&quot; src=&quot;https://www.viewstl.com/?embedded&amp;amp;url=https://ordina-jworks.github.io/img/meeseeks/lid.stl&quot; style=&quot;border:0;margin:0;width:100%;height:100%;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;You can download the file &lt;a href=&quot;/img/meeseeks/lid.stl&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These two 3D models were originally obtained from the &lt;a href=&quot;https://www.thingiverse.com/thing:476252&quot; target=&quot;_blank&quot;&gt;Thingiverse&lt;/a&gt; but I’ve adapted and scaled them properly.&lt;/p&gt;

&lt;p&gt;I ordered the 3D prints via &lt;a href=&quot;https://www.3dhubs.com&quot; target=&quot;_blank&quot;&gt;3D Hubs&lt;/a&gt; and was surprised it was finished in one day.
When I went to get the printed versions I was a bit concerned that they might not have turned out as I had hoped.
And was I right:&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;A failure&quot; src=&quot;/img/meeseeks/small-box.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A rookie mistake, I didn’t check the model dimensions once I uploaded them into the online tool for processing. 
As that seemed to have converted up the measurements I used and set them to millimeters instead of centimeters.
An easy fix and the second printed version was in the correct size, but printed by a colleague to keep costs down.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;That's more like it!&quot; src=&quot;/img/meeseeks/printed-painted-orange.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next came the task of painting the thing. 
As time was short and I only had cheap non-spray water based paint available, I decided to proceed anyway.
I did apply a spray can based primer first, to make the box white again as the orange color was far from perfect to apply other colours.
Many layers and hours later the box was painted.
Nowhere near perfect but good enough for a first try at painting 3D printed models. 
The big issue with these paints and 3D printed models is that the paints tends to get in between the printed ‘lines’ and thus requiring a lot more paint without actually getting a nice result.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/meeseeks/partially-painted.jpg&quot; data-lightbox=&quot;painting&quot; data-title=&quot;Partially painted Meeseeks Box&quot;&gt;
        &lt;img alt=&quot;Partially painted Meeseeks Box&quot; src=&quot;/img/meeseeks/partially-painted.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 48%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/meeseeks/fully-painted.jpg&quot; data-lightbox=&quot;painting&quot; data-title=&quot;Fully painted Meeseeks Box&quot;&gt;
        &lt;img alt=&quot;Fully painted Meeseeks Box&quot; src=&quot;/img/meeseeks/fully-painted.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 48%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;The button on top was attached by very carefully drilling a hole in the top lid and pushing the base of the button through.
The gap was tight enough for the button to stay firmly in place by friction alone, allowing it to be removed later on.
The Raspberry Pi was attached to the underside of the lid with some standoffs and super glue.
The lid fits on the box and is held in place by magnets.
This prevents any moving parts that might fail due to material fatigue or attaching hinges, since attaching these to the box and lid would be cumbersome, as screws can’t easily take hold in the 3D printed material.
A future, more elaborate version of the box could include cutouts for the lid in the box.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Raspberry Pi attached to the lid&quot; src=&quot;/img/meeseeks/underside-lid.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width: 600px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-code-behind-it&quot;&gt;The code behind it&lt;/h2&gt;
&lt;p&gt;The code behind the Meeseeks Box is a simple NodeJS application.
As it is run on a Raspberry Pi we need to make use of &lt;code class=&quot;highlighter-rouge&quot;&gt;raspi-io&lt;/code&gt; to make use of the GPIO on the board.
I also use Johnny-Five as an abstraction layer. More information about Johnny-Five can be found &lt;a href=&quot;http://johnny-five.io&quot; target=&quot;_blank&quot;&gt;on their extensive website.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;main.js&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Raspi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'raspi-io'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;five&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'johnny-five'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Raspi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;repl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ready'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prevValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Pin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;INPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digitalRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//console.log(value);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//Enable this to disable the LED when the button is released!&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;//ctx.digitalWrite(0, 0);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prevValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;doCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'POST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;prevValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The above code is very simple, it makes a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Board&lt;/code&gt; instance which we pass a new &lt;code class=&quot;highlighter-rouge&quot;&gt;Raspi&lt;/code&gt; instance telling the Johnny-Five library that we are actually running on a Raspberry Pi and that it does not need to search for any other connected boards (like Arduinos).&lt;/p&gt;

&lt;p&gt;What you also might notice, for those who have used Johnny-Five in the past, is that we do not make use of the full power of Johnny-Five. 
We are not using the &lt;code class=&quot;highlighter-rouge&quot;&gt;LED&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;Button&lt;/code&gt; classes and instead are taking a more lower level approach by controlling the IO pins directly.
This has a very good reason.
The Node application is run at startup, when the Raspberry Pi boots, as a Linux service.
Starting it automatically breaks the REPL functionality of Johnny-Five which results in the application exiting after a good second, making it unusable.
This is why the &lt;code class=&quot;highlighter-rouge&quot;&gt;Board&lt;/code&gt; config has the &lt;code class=&quot;highlighter-rouge&quot;&gt;repl&lt;/code&gt; parameter set to &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;, this prevents the REPL from starting and makes it so the application does not exit unexpectedly.
This unfortunately also prevents us from using the full abstraction power of the Johnny-Five framework.&lt;/p&gt;

&lt;p&gt;The actual code is very simple. 
We wire up a pin as input for the button and another pin as output for the LED.
We put the input pin to high, this prevent the input from flickering between high and low (essentially a pull-up to vcc).
We then bind a function to the &lt;code class=&quot;highlighter-rouge&quot;&gt;digitalRead&lt;/code&gt; which gets executed every time the state of the input pin changes (high to low -or- low to high).
Since we do a pull-up to vcc our button will actually be connected to the GND which will result in the signal of the input pin going to low when the button is pressed and back to high when it is released.
Please also be sure to wire up the LED with a correct resistor to prevent it from drawing too much current, as that might damage the IO pin it is connected to!&lt;/p&gt;

&lt;p&gt;Calculating such a resistor is an easy feat. 
If the LED needs 3 volts to function and uses 20 milliamps doing so: &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;R = U / I = 5V (pin out) - 3V (LED) /  0,02A = 2V / 0,02A = 100Ω&lt;/code&gt;&lt;br /&gt;
This means that a 100Ω resistor needs to be put in series with the LED to prevent it from causing any damage to the IO pin/circuitry.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;main.js&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'rnm-meeseeks-box.cfapps.io'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Content-Type'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'application/json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'Content-Length'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The code above is a simple snippet used to make a call with no contents to the remote server.
When the URL is called via the POST method, a Meeseeks is created.
When the URL is called via the DELETE method the currently active Meeseekses are destroyed (for testing).
You can edit this to perform any action you like.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
A video showing a fully operational Meeseeks Box:&lt;/p&gt;
&lt;video class=&quot;image-fit&quot; width=&quot;100%&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;/img/meeseeks/video.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;running-node-as-a-systemd-service-on-linux&quot;&gt;Running Node as a systemd service on Linux&lt;/h3&gt;
&lt;p&gt;As the Meeseeks Box needs to be simple to use, the application should automatically start when the Pi does.
The best option was to make a systemd service and run it on system startup.&lt;/p&gt;

&lt;p&gt;First we need to create the systemd service file:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /lib/systemd/system/meeseeks.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This will create a new file (if one does not exist yet).
Place the contents below in this file and save it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Meeseeks Box service
After=network.target

[Service]
Type=simple
User=your-user-here
ExecStart=/usr/bin/node /home/meeseeks/main.js
Restart=on-failure

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This file tells systemd what the service is and does, with what executable and which user.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;After=network.target&lt;/code&gt; tells the service daemon that this service should only start if the network stack has already loaded!&lt;/p&gt;

&lt;p&gt;To test the service, first execute: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemctl daemon-reload&lt;/code&gt;
This reloads the daemon so it knows of the newly created service.
Now we can manually start/stop/reload the service by using: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemctl start meeseeks&lt;/code&gt; where you swap out &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; with the action you want to perform.&lt;/p&gt;

&lt;p&gt;To make the service run at startup use: &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemtl enable meeseeks&lt;/code&gt; and to disable it again, use the same command but swap out &lt;code class=&quot;highlighter-rouge&quot;&gt;enable&lt;/code&gt; for &lt;code class=&quot;highlighter-rouge&quot;&gt;disable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A far more detailed explanation about this matter can be found &lt;a href=&quot;http://nodesource.com/blog/running-your-node-js-app-with-systemd-part-1/&quot; target=&quot;_blank&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;meeseeks-at-devoxx&quot;&gt;Meeseeks at Devoxx&lt;/h2&gt;
&lt;p&gt;The entire purpose of the Meeseeks Box was to be part of our booth at the well-known Devoxx conference in Belgium.
Our booth drew quite the crowd this year, mostly because of the nachos and the totally real Szechaun sauce to go with them. 
Have a look at a couple pictures below:&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/meeseeks/booth-empty.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;Ordina booth at Devoxx 2017&quot;&gt;
        &lt;img alt=&quot;Ordina booth at Devoxx 2017&quot; src=&quot;/img/meeseeks/booth-empty.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 55.45%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/meeseeks/meeseeks-in-action.jpg&quot; data-lightbox=&quot;booth&quot; data-title=&quot;The Meeseeks Box in action at the Ordina booth&quot;&gt;
        &lt;img alt=&quot;The Meeseeks Box in action at the Ordina booth&quot; src=&quot;/img/meeseeks/meeseeks-in-action.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 41.55%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This was a fun side project to work on, even though the ‘deadline’ was a bit tight and I would have liked to have done some things differently, all in all everything turned out really well.&lt;/p&gt;

&lt;p&gt;A few lessons learned though:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Check measurements before ordering a 3D print&lt;/li&gt;
  &lt;li&gt;Non-spray water based paints are not the best match for painted 3D printed models&lt;/li&gt;
  &lt;li&gt;If you mess up the WiFi on the Pi it can be a real pain to debug it!&lt;/li&gt;
  &lt;li&gt;When starting Node as a service on Linux the Johnny-Five REPL does not work&lt;/li&gt;
  &lt;li&gt;Super glue is not always so super ;)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Kevin&quot;, &quot;last_name&quot;=&gt;&quot;Van den Abeele&quot;, &quot;github&quot;=&gt;&quot;beele&quot;, &quot;twitter&quot;=&gt;&quot;_nabeele&quot;, &quot;linkedin&quot;=&gt;&quot;Mr-IoT&quot;, &quot;permalink&quot;=&gt;&quot;/author/kevin-van-den-abeele/&quot;, &quot;avatar&quot;=&gt;&quot;kevin-van-den-abeele.jpg&quot;, &quot;title&quot;=&gt;&quot;Principal Consultant&quot;, &quot;title2&quot;=&gt;&quot;Competence Leader Internet of Things&quot;, &quot;email&quot;=&gt;&quot;kevin.vandenabeele@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Kevin is a Principal Java consultant at Ordina, passionate about all Java and JavaScript related technologies. In his roll as Competence Leader Internet of Things he uses his knowledge of building custom software to build innovative solutions using new technologies. Currently focussing on the internet of things and sensor networks using LoRa. Loves to tinker with gadgets.&quot;}</name><email>kevin.vandenabeele@ordina.be</email></author><category term="IoT" /><category term="NodeJS" /><category term="Node" /><category term="V8" /><category term="JavaScript" /><category term="Prototyping" /><category term="3D print" /><category term="3D printing" /><category term="Raspberry Pi" /><category term="Raspberry" /><category term="Pi" /><category term="Johnny-Five" /><category term="Smart" /><category term="Internet of Things" /><category term="Meeseeks" /><category term="Rick &amp; Morty" /><category term="Ricky and Morty" /><category term="Wubba lubba dub dub" /><category term="spring cloud" /><category term="spring cloud stream" /><category term="streams" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/meeseeks/wallpaper.jpg" /></entry><entry><title type="html">Docker basic networking</title><link href="https://ordina-jworks.github.io/docker/2017/12/15/Docker-basic-networking.html" rel="alternate" type="text/html" title="Docker basic networking" /><published>2017-12-15T00:00:00+00:00</published><updated>2017-12-15T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/docker/2017/12/15/Docker-basic-networking</id><content type="html" xml:base="https://ordina-jworks.github.io/docker/2017/12/15/Docker-basic-networking.html">&lt;blockquote&gt;
  &lt;p&gt;Containers are all the rage at the moment so I guess everybody knows how to build and run a container by now.
&lt;strong&gt;But what use is one container by itself?&lt;/strong&gt;
In this post, I will show how you can create networks within Docker and what they are used for.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Afterwards, I will guide you through a step-by-step example on how to create a Docker network and add containers to it.
This way, we will end up with a multi-tier application that is running on Docker containers in a basic network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#preface&quot;&gt;Preface&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#network-setup&quot;&gt;Network setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#database-container&quot;&gt;Database container&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#backend-container&quot;&gt;REST Backend container&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#frontend-container&quot;&gt;Frontend container&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;preface&quot;&gt;Preface&lt;/h1&gt;
&lt;p&gt;In the current application landscape, we see a strong rise of distributed applications.
This is done by implementing a &lt;strong&gt;microservice architecture&lt;/strong&gt; and deploying these applications in Docker containers.
It’s important that these containers are able to communicate with each other, after all, &lt;strong&gt;what good is a microservice that is isolated&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;In order to achieve this, a couple of patterns are used.
In this post I will demonstrate two of these patterns to you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Communication within a Docker network between containers&lt;/li&gt;
  &lt;li&gt;Communication outside the Docker network by exposing internal ports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our final application setup looks like this:&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:575px&quot; alt=&quot;Final docker setup&quot; src=&quot;/img/docker-basic-networking/docker-basic-network-setup.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;All of our Docker applications will be deployed on &lt;strong&gt;one host machine&lt;/strong&gt;.
We will have a custom Docker network running with &lt;strong&gt;three containers&lt;/strong&gt; attached to that network:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The database container is just a MySQL database running within Docker.&lt;/li&gt;
  &lt;li&gt;The backend container is a Spring Boot application that connects to the MySQL DB container and provides a REST service to the outside world.&lt;/li&gt;
  &lt;li&gt;The frontend container is an AngularJS application that consumes the REST service from the backend container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can find all the code examples on &lt;a href=&quot;https://github.com/basmoorkens/docker-networking-demo&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;.
The only thing needed to complete this guide is a working Docker installation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ready? Set. Go!&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;network-setup&quot;&gt;Network Setup&lt;/h1&gt;
&lt;p&gt;To start this guide, let’s have a look at the Docker networks that are available on our machine:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker network ls&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;When you run a Docker container and you do not provide any network settings, it is by default attached to the bridge network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Containers that are connected to this default bridge network can communicate with each other by using their internal Docker IP address.&lt;/p&gt;

&lt;p&gt;Docker does not support automatic service discovery on this network.&lt;/p&gt;

&lt;p&gt;We want to be able to access our containers by using their container name instead of the internal IP address so we are going to create our own network:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker network create --driver bridge basic-bridge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This creates a user defined network with the bridge driver that is called &lt;code class=&quot;highlighter-rouge&quot;&gt;basic-bridge&lt;/code&gt;.
If we look at the Docker network stack, we see that our user defined bridge network is added:&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:633px&quot; alt=&quot;Network stack after adding basic-bridge&quot; src=&quot;/img/docker-basic-networking/docker-network-ls-basic-bridge.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;You can look at more details of the network by using following command&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker network inspect basic-bridge&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:736px&quot; alt=&quot;Basic bridge details&quot; src=&quot;/img/docker-basic-networking/bridged-network-details.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The basic-bridge network can use IP addresses from the &lt;code class=&quot;highlighter-rouge&quot;&gt;172.18.0.0/16&lt;/code&gt; range and will use &lt;code class=&quot;highlighter-rouge&quot;&gt;172.18.0.1&lt;/code&gt; as its default gateway.&lt;/p&gt;

&lt;h1 id=&quot;database-container&quot;&gt;Database container&lt;/h1&gt;

&lt;p&gt;Now that we have created our own network, we can start attaching our containers to that network.
Let’s start off by creating the MySQL database container.
The following command pulls the MySQL image from the Docker repository and starts it as a container that is attached to our network:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --name=mydb --network=basic-bridge -p 3306:3306 -e MySQL_ROOT_PASSWORD=test -d MySQL:8.0.3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That’s easy right?
This container is attached to the &lt;code class=&quot;highlighter-rouge&quot;&gt;basic-bridge&lt;/code&gt; network that we created in the previous step.
Run the following command to look at the container in detail:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker inspect mydb&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:909px&quot; alt=&quot;docker inspect mydb&quot; src=&quot;/img/docker-basic-networking/mydb-inspect.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We can see in the output that it has gotten the &lt;code class=&quot;highlighter-rouge&quot;&gt;172.18.0.2&lt;/code&gt; IP address and that it’s using the default gateway of the network that we created.
Now we should set up the database in our container with the schema for our REST application.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -h 127.0.0.1 -P 3306  --user=root --password=test&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will connect a MySQL shell onto our &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:3306&lt;/code&gt;.
We can access this port because we exposed it when we started the container by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; flag.
Note that this is done for convenience only, so we can access the container from our host and set up a schema.
Now run following SQL commands in the MySQL shell.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSIGNED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;greetername&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greetername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bas'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello master'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greetername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Jack'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello slave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we have setup our MySQL container and initialized the schema we are ready to create our REST backend service.&lt;/p&gt;

&lt;h1 id=&quot;backend-container&quot;&gt;Backend container&lt;/h1&gt;

&lt;p&gt;You can find the code and Dockerfile for the backend container on the Github link earlier in the post under the &lt;code class=&quot;highlighter-rouge&quot;&gt;/backend&lt;/code&gt; folder.
The backend application itself is pretty simple.
It just listens on port 8080 for requests on the path &lt;code class=&quot;highlighter-rouge&quot;&gt;/greeting&lt;/code&gt;.
You can pass the &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; request parameter to this path to get a customized response.
The application fetches its greetings from the database container we set up earlier.
I added following properties under &lt;code class=&quot;highlighter-rouge&quot;&gt;src/main/resources&lt;/code&gt; to connect it to our database:&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:504px&quot; alt=&quot;Spring boot app db connection properties&quot; src=&quot;/img/docker-basic-networking/application-props.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The important part here is that I referred to our database by using &lt;code class=&quot;highlighter-rouge&quot;&gt;mydb:3306&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We are able to do this because we will launch this backend service on the same docker network as the &lt;code class=&quot;highlighter-rouge&quot;&gt;mydb&lt;/code&gt; container.
This way, they will be able to resolve each others name by using the basic-bridge network we created.&lt;/p&gt;

&lt;p&gt;Next up, we will build the container from the Dockerfile I created.
To do this run the following command in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/backend&lt;/code&gt; folder:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker build . -t rest-backend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once the Docker image is built, let’s run it in a container:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --name=rest-backend --network=basic-bridge -p 8090:8080 -d rest-backend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;By using the &lt;code class=&quot;highlighter-rouge&quot;&gt;--network=basic-bridge&lt;/code&gt;, we attach the container to the &lt;code class=&quot;highlighter-rouge&quot;&gt;basic-bridge&lt;/code&gt; network that we created earlier.&lt;/p&gt;

&lt;p&gt;You can look at the network details of this container by using:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker inspect rest-backend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:959px&quot; alt=&quot;Backend container docker inspect&quot; src=&quot;/img/docker-basic-networking/backend-inspect.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We can see in the output that it is attached to the &lt;code class=&quot;highlighter-rouge&quot;&gt;basic-bridge&lt;/code&gt; network just like our mydb container.
We also used the &lt;code class=&quot;highlighter-rouge&quot;&gt;-p 8090:8080&lt;/code&gt; flag to expose the inner 8080 port (the port our Spring Boot application uses) to the outside world via the 8090 port.&lt;/p&gt;

&lt;p&gt;We can now curl or browse to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:8090/greeting&lt;/code&gt; to verify that everything is working:&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:533px&quot; alt=&quot;Verify backend running&quot; src=&quot;/img/docker-basic-networking/verify-backend.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;We can see that our service successfully returned a response.&lt;/p&gt;

&lt;h1 id=&quot;frontend-container&quot;&gt;Frontend container&lt;/h1&gt;

&lt;p&gt;We can now create our frontend AngularJS application that consumes the REST service we just created.&lt;/p&gt;

&lt;p&gt;You can find the code for this application under the &lt;code class=&quot;highlighter-rouge&quot;&gt;/frontend&lt;/code&gt; folder in the Github repository.
Create the Docker image for the frontend container by running:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker build . -t angular-frontend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now let’s run the container by using:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --name=angular-frontend --network=basic-bridge -p 8080:80 -d angular-frontend&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;AngularJS renders in the browser so it’s not rendered inside a Docker container.&lt;br /&gt;
This means that our angular application would not be able to contact the REST backend container as that container is only known within the docker network.&lt;br /&gt;
To work around this inconvenience I will explain 2 alternatives:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;connect it to the internal Docker IP address of the rest-backend container&lt;/strong&gt;&lt;br /&gt;
In this case we connect the angular application to the ip address of our backend container. 
This only works because the ip address is known to our browser.&lt;br /&gt;
The ip address is known because the machine on which our browser runs is also running the Docker network.&lt;br /&gt;
Note that this is not very portable.&lt;br /&gt;
If you would deploy the container somewhere else or you would browse to the application from another host this would break.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:488px&quot; alt=&quot;Angular-backend call over internal docker network&quot; src=&quot;/img/docker-basic-networking/angular-by-internal-ip.png&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;connect it to the public exposed port of the REST backend container.&lt;/strong&gt;&lt;br /&gt;
When we set the application up like this the angular application can access the backend container through the publicly exposed port 8090.&lt;br /&gt;
Note that in this case the application would break as well if you deploy the frontend container somewhere else or if you would access it from another host.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:494px&quot; alt=&quot;Angular-backend call over external network&quot; src=&quot;/img/docker-basic-networking/angular-by-external.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The result in both cases is that our angular application can contact the REST backend and serves up a good response.&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:447px&quot; alt=&quot;Angular 200 response from backend&quot; src=&quot;/img/docker-basic-networking/angular-ok.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;As I mentioned before both these alternatives have pretty obvious flaws in them.&lt;br /&gt;
In a real world setup you would like to make your REST service publicly available on a webserver so that consuming applications would be able to connect to it by using that public URL.&lt;br /&gt;
If there is interest in this kind of setup I can cover it in a later blogpost.&lt;br /&gt;
Our application setup is now complete and our full setup looks like this:&lt;/p&gt;

&lt;p&gt;
    &lt;img class=&quot;image fit&quot; style=&quot;max-width:1359px&quot; alt=&quot;Final setup docker ps&quot; src=&quot;/img/docker-basic-networking/docker-ps-final.png&quot; /&gt;
&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;As we saw in this guide it is actually pretty simple to create a single host Docker network and enable containers to communicate with each other over this network.&lt;br /&gt;
When we created our Angular application, we saw that this approach has its limitations.&lt;/p&gt;

&lt;p&gt;Another limitation of this setup is that this kind of network is limited to a single host as it will not work over multiple hosts.
Of course nobody wants to run a distributed application in containers on one host.&lt;/p&gt;

&lt;p&gt;I will make a follow-up blogpost where we look into Docker multi-host networks by using &lt;strong&gt;weave.NET&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop bas&lt;/code&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Bas&quot;, &quot;last_name&quot;=&gt;&quot;Moorkens&quot;, &quot;permalink&quot;=&gt;&quot;/author/bas-moorkens/&quot;, &quot;title&quot;=&gt;&quot;Senior Java Developer&quot;, &quot;title2&quot;=&gt;&quot;DevOps Engineer&quot;, &quot;email&quot;=&gt;&quot;bas.moorkens@ordina.be&quot;, &quot;linkedin&quot;=&gt;&quot;basmoorkens&quot;, &quot;avatar&quot;=&gt;&quot;bas-moorkens.jpg&quot;, &quot;github&quot;=&gt;&quot;basmoorkens&quot;, &quot;bio&quot;=&gt;&quot;Bas is a Senior Java Developer at Ordina Belgium who discovered he is fascinated by cloud, containers and pipeline automation. He started off as a Java full stack developer but got more and more into the DevOps world where he currently spends most of his time.&quot;}</name><email>bas.moorkens@ordina.be</email></author><category term="Docker" /><category term="Docker" /><category term="Networking" /><category term="container" /><category term="DevOps" /><summary type="html">Containers are all the rage at the moment so I guess everybody knows how to build and run a container by now. But what use is one container by itself? In this post, I will show how you can create networks within Docker and what they are used for.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/docker-basic-networking/docker-basic-networking.png" /></entry><entry><title type="html">JavaDay Ukraine 2017</title><link href="https://ordina-jworks.github.io/conference/2017/11/15/JavaDay-Ukraine-2017.html" rel="alternate" type="text/html" title="JavaDay Ukraine 2017" /><published>2017-11-15T00:00:00+00:00</published><updated>2017-11-15T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2017/11/15/JavaDay-Ukraine-2017</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2017/11/15/JavaDay-Ukraine-2017.html">&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://javaday.org.ua&quot; target=&quot;_blank&quot;&gt;JavaDay Ukraine&lt;/a&gt; is an annual international two-day conference in Kyiv with more than 60 global speakers with various topics on Java, software architecture, machine learning, data science, and more.
In this blog post we will go over some of the talks that we have attended.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;the-toc&quot;&gt;

  &lt;h1 class=&quot;the-toc__heading&quot;&gt;Table Of Contents&lt;/h1&gt;

  &lt;ol class=&quot;the-toc__list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;#developing-microservices-with-kotlin---haim-yadid&quot; title=&quot;Developing Microservices With Kotlin&quot;&gt;Developing Microservices with Kotlin&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#going-reactive-with-spring-data---christoph-strobl&quot; title=&quot;Going Reactive with Spring Data - Christoph Strobl&quot;&gt;Going Reactive with Spring Data - Christoph Strobl&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#spring-boot-20-web---stéphane-nicoll&quot; title=&quot;Spring Boot 2.0 Web - Stéphane Nicoll&quot;&gt;Spring Boot 2.0 Web - Stéphane Nicoll&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#the-api-gateway-is-dead-long-live-the-api-gateway---spencer-gibb&quot; title=&quot;The API Gateway is dead! Long Live the API Gateway! - Spencer Gibb&quot;&gt;The API Gateway is dead! Long Live the API Gateway! - Spencer Gibb&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#continuous-deployment-to-the-cloud-using-spinnaker---andreas-evers&quot; title=&quot;Continuous Deployment to the Cloud using Spinnaker - Andreas Evers&quot;&gt;Continuous Deployment to the Cloud using Spinnaker - Andreas Evers&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#10-tips-to-become-an-awesome-technical-lead---bart-blommaerts&quot; title=&quot;10 tips to become an awesome Technical Lead - Bart Blommaerts&quot;&gt;10 tips to become an awesome Technical Lead - Bart Blommaerts&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#hands-on-introduction-to-cqrs-and-event-sourcing-with-axon-framework---steven-van-beelen&quot; title=&quot;Hands-on introduction to CQRS and Event Sourcing with Axon Framework - Steven Van Beelen&quot;&gt;Hands-on introduction to CQRS and Event Sourcing with Axon Framework - Steven Van Beelen&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#spring-cloud-stream--a-new-rick-and-morty-adventure---dieter-hubau&quot; title=&quot;Spring Cloud Stream — a new Rick and Morty adventure - Dieter Hubau&quot;&gt;Spring Cloud Stream — a new Rick and Morty adventure - Dieter Hubau&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;#8-steps-to-becoming-awesome-with-kubernetes---burr-sutter&quot; title=&quot;8 Steps To Becoming Awesome With Kubernetes - Burr Sutter&quot;&gt;8 Steps To Becoming Awesome With Kubernetes - Burr Sutter&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;developing-microservices-with-kotlin---haim-yadid&quot;&gt;Developing Microservices with Kotlin - Haim Yadid&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Haim Yadid&quot; src=&quot;/img/javaday-ukraine-2017/haim-yadid.jpg&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/lifeyx&quot; target=&quot;_blank&quot;&gt;Haim Yadid&lt;/a&gt; is a developer, architect and group manager currently working as head of backend engineering in Next Insurance.
In his search for a better programming language, he compared different strongly and loosely typed JVM languages such as &lt;strong&gt;Scala, Ceylon, Groovy, JRuby, Clojure and Kotlin&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The chosen language would have to be concise, safe, versatile, practical and interoperable.
Being a fan of strongly typed languages, Groovy and JRuby were no option.
Scala was a good option but due to the complexity of the language, the long compilation times and lack of backwards compatibility assurance, it was also dropped.&lt;/p&gt;

&lt;p&gt;Kotlin proved to be the winner as it contained all of the above listed characteristics.
It is also able to make use of the huge Java ecosystem and, being backed by Jetbrains, was very assuring.
It also helped that Google made Kotlin the official language for Android Development. Not to mention it was the subject of 9 different talks at JavaOne 2017.&lt;/p&gt;

&lt;p&gt;In his talk, he wanted to share his findings and experiences when developing in Kotlin which he labeled as a huge success.
The project he worked on contains a microservices backend over DropWizard deployed to AWS together with serverless endpoints in AWS Lambda.
Used technologies, frameworks and libraries are amongst others Maven, DropWizard, AWS Lambda, PDFBox, XMPBox, Flyway, Stripe and Mockito Kotlin.
Building the project was done via the Kotlin Maven plugin.&lt;/p&gt;

&lt;p&gt;He started with version 1.0.2 and immediately upgraded to every release which always went very smooth; even the migration to 1.1.0, which included Java 8 support, went without any issues.
Onboarding new Java developers is never a hassle as they are capable of developing in Kotlin by the time they get to know the architecture.&lt;/p&gt;

&lt;p&gt;Haim really liked extension methods, which allow you to add functionality to an existing class or interface.
The null safety, which is very similar to the null safety of Apple’s Swift - where nullability is part of the type of an defined object - was also well-appreciated.
He also pointed out to us that Java open source libraries work extremely well with Kotlin. All you need to do is add the dependency to your build file and you are good to go.&lt;/p&gt;

&lt;p&gt;Data classes, similar to case classes in Scala, offering a concise way to define simple classes for holding data, were used for all their DTOs.
Also worth mentioning is that IntelliJ has a converter functionality for converting a Java class to Kotlin.
Obviously it’s mostly used as a starting point when migrating existing Java classes.
We really liked Haim’s talk as we are very eager to try out Kotlin in a project.&lt;/p&gt;

&lt;p&gt;Haim’s presentation is available on SlideShare:&lt;/p&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/4D8BpGT2UiMu8A&quot; width=&quot;100%&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/haimyadid/building-microservices-with-kotlin&quot; title=&quot;Building microservices with Kotlin&quot; target=&quot;_blank&quot;&gt;Building microservices with Kotlin&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/haimyadid&quot; target=&quot;_blank&quot;&gt;Haim Yadid&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;going-reactive-with-spring-data---christoph-strobl&quot;&gt;Going Reactive with Spring Data - Christoph Strobl&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Christoph Strobl&quot; src=&quot;/img/javaday-ukraine-2017/christoph-strobl.jpg&quot; /&gt;&lt;/span&gt;
&lt;a href=&quot;https://twitter.com/stroblchristoph&quot; target=&quot;_blank&quot;&gt;Christoph Strobl&lt;/a&gt; is a developer at Pivotal and is part of the Spring Data team.
Starting from Spring Framework 5, reactive support was added to all the core Spring Framework projects.
In a reactive architecture, it is important that your system is reactive from top to bottom in order to take advantage of the full performance gain, the persistence layer is no exception to this.&lt;/p&gt;

&lt;p&gt;During the talk, Christoph went over the classic imperative approach of a Spring application where Spring MVC is used and the performance problems that can arise when all threads are in use.
A reactive architecture makes better use of server resources but in turn adds more complexity to your architecture.
The publish-subscribe mechanism is heavily used in this architecture where, how can you guess it, publishers publish messages to which subscribers can subscribe.
The mechanism also comes with back pressure for the subscribers, allowing them to define how many messages they want to handle next in order to avoid being overrun.
It is important to note here that the reactive publish-subscribe mechanism is based on the push model. The subscriber will not actively fetch the data but will instead receive the data from the publisher who pushes the new messages to the subscriber when they’re available.&lt;/p&gt;

&lt;p&gt;In the other part of the session, Christoph went over several features of Spring’s Project Reactor, Spring Data Kay and Spring WebFlux.
The publish-subscribe mechanism in Reactor is based on the &lt;a href=&quot;http://www.reactive-streams.org&quot; target=&quot;_blank&quot;&gt;Reactive Streams specification&lt;/a&gt; and there are two reactive types: &lt;code class=&quot;highlighter-rouge&quot;&gt;Flux&lt;/code&gt;, an Asynchronous Sequence of 0-N items, and &lt;code class=&quot;highlighter-rouge&quot;&gt;Mono&lt;/code&gt;, an Asynchronous 0-1 result.
Spring WebFlux is the reactive brother of Spring MVC and uses Project Reactor under the hood for building reactive endpoints.
Spring Data Kay is the newest version of Spring Data which now contains reactive repositories and reactive templates.
At the time of writing this is only usable for MongoDB, Redis, Couchbase and Cassandra as the other databases lack a reactive JDBC driver.&lt;/p&gt;

&lt;p&gt;In the final part of the talk, Christoph held a demo of a Spring Boot 2 reactive application showcasing all the reactive features.
All in all, a very interesting talk about building a reactive application using Spring.&lt;/p&gt;

&lt;p&gt;The demo code is available on &lt;a href=&quot;https://github.com/christophstrobl/going-reactive-with-spring-data&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.
The presentation is available on Speaker Deck:
&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;be5af757d97042b09c873aedbf8ac81a&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;spring-boot-20-web---stéphane-nicoll&quot;&gt;Spring Boot 2.0 Web - Stéphane Nicoll&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Stéphane Nicoll&quot; src=&quot;/img/javaday-ukraine-2017/stephane-nicoll.png&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/snicoll&quot; target=&quot;_blank&quot;&gt;Stéphane Nicoll&lt;/a&gt; joined the core Spring Framework development team early 2014, being one of the main contributors to both Spring Framework and Spring Boot since.
Stéphane’s session was all about Spring Framework 5 and Spring Boot 2.0.
Spring 5 comes with Spring WebFlux which is the reactive brother of Spring MVC allowing you to build non-blocking APIs.
He explained that there is always the issue of supporting all the different clients like desktops, laptops, smartphones and tablets, and their different internet speeds.
Smartphones often have access to the slowest internet speeds and thus require the most optimal solution regarding bandwidth and performance.&lt;/p&gt;

&lt;p&gt;All the different concepts of building a reactive application with Spring Framework 5 and Spring Boot 2.0 were explained with a demo application called &lt;a href=&quot;https://github.com/snicoll-demos/smart-meter&quot; target=&quot;_blank&quot;&gt;Smart Meter&lt;/a&gt;.
Basically, you have all these different data inputs via sensors being gathered by an aggregator and then streamed to a dashboard.
The frontend is written in Thymeleaf 3.0 which is the version in which reactive support was added.
Besides the frontend needing reactive support, the persistence layer of the backend also needs it.
In Spring Data Kay, reactive support exists for Redis, MongoDB, Couchbase and Cassandra.
The other main databases such as Oracle, PostgreSQL and MySQL aren’t there just yet as they lack a reactive JDBC driver.
In the demo, MongoDB is used.&lt;/p&gt;

&lt;p&gt;Stéphane also demonstrated some new additions to Spring Boot Actuator such as a unified way to implement custom endpoints, better output format,
separate status endpoints (you now have &lt;code class=&quot;highlighter-rouge&quot;&gt;/status&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;/health&lt;/code&gt;) and a simplified security model to specify who has access to (for example) status and info as users with a certain role may be allowed to see more.
Properties in Actuator now also display the properties file in which they have been declared and the exact position.&lt;/p&gt;

&lt;p&gt;Stéphane concluded the talk by announcing that the release candidate was foreseen somewhere at the end of November.
However, a recent tweet of his announced a small change to the release schedule:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Spring Boot is having an extra milestone and RC1 is scheduled early December now.&lt;br /&gt;&lt;br /&gt;See &lt;a href=&quot;https://t.co/6kOGdPMtfp&quot;&gt;https://t.co/6kOGdPMtfp&lt;/a&gt;&lt;/p&gt;&amp;mdash; Stéphane Nicoll (@snicoll) &lt;a href=&quot;https://twitter.com/snicoll/status/928546114512588800?ref_src=twsrc%5Etfw&quot;&gt;November 9, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;The demo code is available on &lt;a href=&quot;https://github.com/snicoll-demos/smart-meter&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.
The presentation is available on Speaker Deck:
&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;8be69db43f1741e6b796add45273ee65&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-api-gateway-is-dead-long-live-the-api-gateway---spencer-gibb&quot;&gt;The API Gateway is dead! Long Live the API Gateway! - Spencer Gibb&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Spencer Gibb&quot; src=&quot;/img/javaday-ukraine-2017/spencer-gibb.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/spencerbgibb&quot; target=&quot;_blank&quot;&gt;Spencer Gibb&lt;/a&gt;, Spring Cloud co-founder and co-lead, started by talking about the responsibilities of an API gateway.
He started by revisiting Netflix’s Zuul which is servlet based and thus has blocking APIs, and referred to Mikey Cohen’s presentation on &lt;a href=&quot;https://www.youtube.com/watch?v=mHHHpxJuTAo&quot; target=&quot;_blank&quot;&gt;Netflix’s Edge Gateway Using Zuul&lt;/a&gt; in which Zuul 2 is also mentioned.
Zuul 2 was supposed to be integrated in Spring Cloud but as it still hadn’t been released, Pivotal went with their own solution: Spring Cloud Gateway.
It is built upon Spring 5, Reactor and Spring Boot 2.
In order to have the gateway be non-blocking, there is a single event loop similar to how it is in Node.js.&lt;/p&gt;

&lt;p&gt;In another section, Spencer talked about the internals of Spring Cloud Gateway and the Spring Reactor features it uses.
This involves the usage of classes such as &lt;code class=&quot;highlighter-rouge&quot;&gt;HandlerMapping&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;WebFilter&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Predicate&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ServerWebExchange&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;PathPatternMatcher&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;RoutePredicateHandlerMapping&lt;/code&gt; and many more.
As a filter to rewrite paths was commonly requested before, this was the first filter that they have written when implementing the Spring Cloud Gateway.
Spencer also mentioned that they were also focusing on providing a simple API to write filters.
Also neat to mention is that route configuration is now possible in YAML.&lt;/p&gt;

&lt;p&gt;In the final part, Spencer demonstrated an implementation of a Gateway showcasing the different ways of how to use the API to define different &lt;code class=&quot;highlighter-rouge&quot;&gt;byhost&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;rewrite&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;hystrix&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;limited&lt;/code&gt; routes.
He started off by visiting the legendary &lt;a href=&quot;http://start.spring.io&quot; target=&quot;_blank&quot;&gt;Spring Initializr webpage&lt;/a&gt; and created a Spring Boot 2 application with the Gateway dependency.
&lt;a href=&quot;https://httpbin.org&quot; target=&quot;_blank&quot;&gt;httpbin&lt;/a&gt; is something that he is a big fan of, as it is really useful for testing whether for example the correct rerouting is happening and the right headers are being added to the requests.&lt;/p&gt;

&lt;p&gt;The presentation is available right &lt;a href=&quot;https://spencer.gibb.us/preso/pivotal-toronto-api-gateway-2017-02/#/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;continuous-deployment-to-the-cloud-using-spinnaker---andreas-evers&quot;&gt;Continuous Deployment to the Cloud using Spinnaker - Andreas Evers&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Andreas Evers&quot; src=&quot;/img/javaday-ukraine-2017/andreas-evers.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/andreasevers&quot; target=&quot;_blank&quot;&gt;Andreas Evers&lt;/a&gt;, principal Java consultant and Solution Expert at Ordina Belgium, held a session on &lt;a href=&quot;https://www.spinnaker.io&quot; target=&quot;_blank&quot;&gt;Spinnaker&lt;/a&gt; for doing Continuous Deployment to the Cloud.
Digital transformations usually require embracing a devops culture and adopting microservice architectures since without microservices, it is harder to go faster to the market.
Moving your infrastructure to the cloud is possible via either IaaS or PaaS.&lt;/p&gt;

&lt;p&gt;With microservices, your deployment frequency explodes as it is way more flexible.
Netflix for example deploys over 4.000 times per day and that number is still increasing.
Andreas explained that cloud deployments are complex and that it is important to be able to do easy rollbacks.
There is also the fact that we want to plan our deploy at the right time frame, preferably when traffic is lowest to have the least amount of users impacted.&lt;/p&gt;

&lt;p&gt;Andreas talked about a couple of other principles such as making sure that infrastructure is immutable, repeatable and predictable across the different environments through baking images or building containers by using for example Docker.
Equally important are the deployment strategies like (rolling) blue/green (or red/black if that’s how you roll (pun intented). Looking at you, Netflix!).
Using the blue/green deployment strategy you can deploy the new version right next to the old version. What happens next depends on how the strategy has been configured.
Either the load balancer will reroute all traffic from the old version to the new version, or (if the rolling strategy has been configured) the traffic will gradually get rerouted to the new version. The last option is great for canary testing or smoke tests.
A third principle is doing automatic deployments by defining a pipeline which is always possible by just scripting all of this yourself but this is usually rather brittle.&lt;/p&gt;

&lt;p&gt;This is where Spinnaker comes in to help you out with all of that.
The internal structure of Spinnaker consists of a couple of microservices written in Spring Boot.
Spinnaker fulfills all the principles we have just summed up and more:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It allows you to specify the pipelines together with all the different environments&lt;/li&gt;
  &lt;li&gt;It allows you to plan your deployments&lt;/li&gt;
  &lt;li&gt;You can configure and tune your deployment strategies&lt;/li&gt;
  &lt;li&gt;It has support for &lt;a href=&quot;https://github.com/Netflix/chaosmonkey&quot; target=&quot;_blank&quot;&gt;Chaos Monkey&lt;/a&gt; which allows you to test your system on how resilient and recoverable it is as VMs get taken out&lt;/li&gt;
  &lt;li&gt;It has canary analysis&lt;/li&gt;
  &lt;li&gt;Configuring, installing, and updating Spinnaker is done via &lt;a href=&quot;https://github.com/spinnaker/halyard&quot; target=&quot;_blank&quot;&gt;Halyard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Spinnaker is still heavily being worked on and there are a couple of nice features coming up:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Canary strategies&lt;/li&gt;
  &lt;li&gt;Rolling blue/green strategies&lt;/li&gt;
  &lt;li&gt;Declarative Continuous Deployment (config as code)&lt;/li&gt;
  &lt;li&gt;Operation monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally Andreas did a demo of Spinnaker using a simple application based on Rick &amp;amp; Morty which is also available on &lt;a href=&quot;https://github.com/andreasevers/spinnaker-demo&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.
During the demo he demonstrated how you can set up pipelines, the deployment strategy, the traffic guard and canary testing in Spinnaker.
People attending the talk were able to participate by going to the url to which the application was deployed in order to show how only a part of the traffic was routed to the new version.&lt;/p&gt;

&lt;p&gt;The slides of Andreas’ talk are available on Speaker Deck:
&lt;script async=&quot;&quot; class=&quot;speakerdeck-embed&quot; data-id=&quot;8b92a507c0af49399311db741a49166c&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;10-tips-to-become-an-awesome-technical-lead---bart-blommaerts&quot;&gt;10 tips to become an awesome Technical Lead - Bart Blommaerts&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Bart Blommaerts&quot; src=&quot;/img/javaday-ukraine-2017/bart-blommaerts.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/daggiebe&quot; target=&quot;_blank&quot;&gt;Bart Blommaerts&lt;/a&gt;, Application Architect at Ordina Belgium, presented a talk with tips on how to become a better and more awesome technical lead.
Spoiler alert, there were actually 12 tips instead of 10!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Advocate for change:&lt;/strong&gt;
You should experience the same pain as your team.
Try to work together more closely with the people in your team to see if there are any pain points or issues that your team members are experiencing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Work through failure and success:&lt;/strong&gt;
It is inevitable that some things will fail now and then.
It is important to prepare for failure and to take responsibility.
Don’t finger point!
Failing is an opportunity to learn and should be embraced.
Success on the other hand, should be celebrated as early and as often as possible, and not only after the end of a project.
You should celebrate for example the successful delivery of a sprint or when a feature has been completed.
Congratulate your team and individuals often as it is good for the moral.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Stay technical:&lt;/strong&gt;
Reserve the right amount of time to code and review code.
It is important to hold on to that technical vision and to see how your project’s code base evolves.
At the same time it is important that you still grasp the technical aspect of your project as it will help you to make the right decisions for your project and your team.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Always available:&lt;/strong&gt;
You should always be available and easily approachable for your team members.
According to Bart, your time should be spent about 35% on technical design, 25% with the business, 15% on project management and 25% on code.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Be a mentor of your team:&lt;/strong&gt;
As you have a key position in your team you should avoid being a strict ruler and decision maker, and try to make the best decisions for your team.
Instead, try to be a mediator and a mentor for your team members.
Effective delegation is important and try to hand out responsibilities to your team.
Know when to give input, when to make decisions and when to step back.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Surround yourself with other technical leads:&lt;/strong&gt;
Each person is different and everybody has a different way to approach things.
There is a lot to be gained by making use of cross-pollination and learning from other technical leads about how they approach and deal with things.
It is important to be open for other approaches and to widen your vision.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Think big, bias for action:&lt;/strong&gt;
You should think big and differently.
Try to focus on opportunities and to create a bold direction.
Don’t be afraid to undertake action as actions are reversible.
You don’t always need to do that time-consuming, extensive study before undertaking action as speed matters.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interviewing potential new team members:&lt;/strong&gt;
Be prepared for interviewing potential new team members and be sure to go through the resumes.
The mindset of a potential team member is more important than their knowledge of the tooling.
You want the person to be eager to learn and to fit in your team.
As for actually taking the interview, don’t blatantly copy questions from StackOverflow and expect the interviewee to come up with the exact same solution.
Instead, first comfort the interviewee, offer them different options during the interview and try to build upon the responses they are giving.
Show interest in the person and be sure to offer them a bonus question.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Embrace cultural differences:&lt;/strong&gt;
Everybody is different and diversity is invaluable.
Have respect for everybody’s opinion and try to surround yourself with them as they offer you different points of view.
Don’t forget that everybody in your team has the same shared end goal.
If you are working with an offshore team, take the time difference into account.
You can try to change your work hours to be more available to them.
Focus on good communication and be sure to document the work and tasks well.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Estimating is hard:&lt;/strong&gt;
Bart quoted Hofstadter’s Law: “It always takes longer than you expect, even when you take into account Hofstadter’s Law”.
In order to make more educated guesses, doing a planning poker can be useful.
Define a sequence, set a baseline and allow reasoning.
Don’t be afraid of uncertainty as it is inevitable.
Bart suggests using the following formula: &lt;code class=&quot;highlighter-rouge&quot;&gt;(O + 4*BG + P) / 6&lt;/code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;O&lt;/code&gt; is the optimistic estimate, &lt;code class=&quot;highlighter-rouge&quot;&gt;BG&lt;/code&gt; the best guess estimate and &lt;code class=&quot;highlighter-rouge&quot;&gt;P&lt;/code&gt; the pessimistic estimate.
You should add 20% to the guess for properly testing, debugging, polishing, documenting and random wtf moments.
Don’t forget, any estimate is better than no estimate, and make sure to share and review estimates.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Interfacing with the outside world:&lt;/strong&gt;
Adapt the way and the language when you communicate with non-technical people.
Try to be the go-to-guy/girl for the management, the customer and other stakeholders.
And very important: don’t be afraid to say “no”!&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Facilitate (agile) team work:&lt;/strong&gt;
Be agile, use a prioritised backlog.
Plan your sprints, use burn down charts and do sprint retrospectives.
Your team’s strength is not a function of the talent of individual members but rather of their collaboration, tenacity and mutual respect.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In short, facilitate an awesome team.&lt;/p&gt;

&lt;p&gt;The slides of Bart’s talk are available on SlideShare:&lt;/p&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/3YL49tucTjYZo6&quot; width=&quot;100%&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/BartBlommaerts/javaday-2017-10-tips-to-become-an-awesome-technical-lead-v4&quot; title=&quot;JavaDay 2017: 10 tips to become an awesome technical lead (v4)&quot; target=&quot;_blank&quot;&gt;JavaDay 2017: 10 tips to become an awesome technical lead (v4)&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/BartBlommaerts&quot; target=&quot;_blank&quot;&gt;Bart Blommaerts&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;hands-on-introduction-to-cqrs-and-event-sourcing-with-axon-framework---steven-van-beelen&quot;&gt;Hands-on introduction to CQRS and Event Sourcing with Axon Framework - Steven Van Beelen&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Steven Van Beelen&quot; src=&quot;/img/javaday-ukraine-2017/steven-van-beelen.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/smcvbeelen&quot; target=&quot;_blank&quot;&gt;Steven Van Beelen&lt;/a&gt;, Software Engineer at AxonIQ, held a hands-on session on CQRS and Event Sourcing using the &lt;a href=&quot;http://www.axonframework.org&quot; target=&quot;_blank&quot;&gt;Axon Framework&lt;/a&gt; which helps developers to focus on application functionality rather than the non-functional requirements of an application.&lt;/p&gt;

&lt;p&gt;The main advantage of event sourcing is that there is less info loss as you are storing all the different events, leading to the final state of records whereas in a classical example you only hold on to the final state of a record.
By using event sourcing you also get a reliable audit log right out of the box.
At the same time there is also a performance increase as events are processed in the background asynchronously, leading to faster response times.
With event sourcing you mostly make use of a cache, as replaying events when looking up records can be time consuming.
This is further compensated by making use of snapshots every 100 events for example.&lt;/p&gt;

&lt;p&gt;Some of the cons are that events are readable forever and that it is a lot of work if you decide to rewrite the event model and that you also have to think of versioning your model.
Sourcing the model from lots and lots of events takes time but this is also resolved by making use of snapshots.&lt;/p&gt;

&lt;p&gt;The Axon Framework is open source (Apache 2 license) and supports concepts like DDD (Domain-Driven Design), CQRS (Command and Query Responsibility Segregation) and EDA (Event Driven Architecture).
The framework helps you to focus on the business functionality as it takes care of the plumbing for you.&lt;/p&gt;

&lt;p&gt;The majority of the time was spent with live coding.
Steven created a Spring Boot app with Kotlin.
Useful to mention is that Axon has support for Spring Boot AutoConfiguration by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;axon-spring-boot-starter&lt;/code&gt; dependency to your project.
Axon will automatically configure the basic infrastructure components (Command and Event Bus) as well as any component required to run and store Aggregates and Sagas.
Kotlin was chosen as it provides a concise way to write code, the data classes especially are very useful for writing commands and events as these are immutable POJOs.
The application was about creating conferences and talks in order to demonstrate the framework.&lt;/p&gt;

&lt;p&gt;For the command model, it came down to marking aggregate classes using the &lt;code class=&quot;highlighter-rouge&quot;&gt;@Aggregate&lt;/code&gt; annotation.
In the aggregate classes, the identifier gets annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;AggregateIdentifier&lt;/code&gt;.
Your command handler gets annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;@CommandHandler&lt;/code&gt;.
This is the class where all the logic resides on how to handle all the different commands for the specified aggregate, usually resolving into events.
Similar to the command handler, there is also an event sourcing handler annotated with &lt;code class=&quot;highlighter-rouge&quot;&gt;@EventSourcingHandler&lt;/code&gt; containing the logic for processing the created events of the specified aggregate.
Furthermore you have a controller and a command gateway.
As for the query model, there is an &lt;code class=&quot;highlighter-rouge&quot;&gt;@EventHandler&lt;/code&gt; that processes any events, updating your query models.&lt;/p&gt;

&lt;p&gt;The demo application is available on &lt;a href=&quot;https://github.com/smcvb/javaday17&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;.
For more information on the framework, be sure to consult the well-written &lt;a href=&quot;https://docs.axonframework.org&quot; target=&quot;_blank&quot;&gt;reference guide&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;spring-cloud-stream--a-new-rick-and-morty-adventure---dieter-hubau&quot;&gt;Spring Cloud Stream — a new Rick and Morty adventure - Dieter Hubau&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Dieter Hubau&quot; src=&quot;/img/javaday-ukraine-2017/dieter-hubau.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/dhubau&quot; target=&quot;_blank&quot;&gt;Dieter Hubau&lt;/a&gt;, principal Java consultant and competence lead Cloud &amp;amp; PaaS at Ordina Belgium, presented his cool Spring Cloud Stream application featuring Rick and Morty.
Spring Cloud Stream allows you to create message driven microservices and is based upon Spring Integration and builds upon Spring Boot.&lt;/p&gt;

&lt;p&gt;Briefly summarising the talk wouldn’t do it justice so instead we will link you to the blog post he has written on the topic available right &lt;a href=&quot;/spring/2017/10/04/Spring-Cloud-Stream-Rick-And-Morty-Adventure.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.
The presentation is available right here:&lt;/p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;420&quot; src=&quot;//slides.com/turbots/spring-cloud-stream-rick-morty/embed&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;There is also a recorded video available on our &lt;a href=&quot;https://www.youtube.com/channel/UCsebfWdqV7LqNNDMDvCESIA&quot; target=&quot;_blank&quot;&gt;JWorks YouTube channel&lt;/a&gt;, be sure to check it out!&lt;/p&gt;

&lt;div class=&quot;responsive-embed-youtube&quot;&gt;
	&lt;iframe src=&quot;https://www.youtube.com/embed/Nl9OIuNRYwI?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;8-steps-to-becoming-awesome-with-kubernetes---burr-sutter&quot;&gt;8 Steps To Becoming Awesome With Kubernetes - Burr Sutter&lt;/h3&gt;

&lt;p&gt;&lt;span class=&quot;image left&quot;&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Burr Sutter&quot; src=&quot;/img/javaday-ukraine-2017/burr-sutter.jpg&quot; /&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/burrsutter&quot; target=&quot;_blank&quot;&gt;Butter Sutter&lt;/a&gt;, Director for Developer Experience at Red Hat, gave a cool presentation about Kubernetes.&lt;/p&gt;

&lt;p&gt;After a lengthy introduction to DevOps, the challenges of creating and running microservice architectures and Kubernetes, we could dive into some of the more technical features Kubernetes has to offer.&lt;/p&gt;

&lt;p&gt;Burr introduced us to &lt;strong&gt;his eight step program to become awesome at Kubernetes&lt;/strong&gt;:&lt;/p&gt;

&lt;h2 id=&quot;step-1-installation&quot;&gt;Step 1: Installation&lt;/h2&gt;

&lt;p&gt;Burr showed us the many ways you could setup a Kubernetes cluster, including &lt;a href=&quot;https://github.com/kubernetes/minikube/releases&quot; target=&quot;_blank&quot;&gt;Minikube&lt;/a&gt; or &lt;a href=&quot;https://github.com/minishift/minishift/releases&quot; target=&quot;_blank&quot;&gt;Minishift&lt;/a&gt;.
There are plenty of guides on the web for deploying Kubernetes on any of the major infrastructure providers (AWS, Azure or Google Cloud), but there’s also the Kubernetes-as-a-service offerings from Google and Microsoft which can get you going very quickly.
Running Openshift can be as easy as running &lt;code class=&quot;highlighter-rouge&quot;&gt;oc cluster up&lt;/code&gt; on your local workstation, which sets up &lt;a href=&quot;https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md&quot; target=&quot;_blank&quot;&gt;a local Openshift cluster for you using Docker&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-2-building-images&quot;&gt;Step 2: Building images&lt;/h2&gt;

&lt;p&gt;There are several ways to build Docker images for Kubernetes or Openshift. We like the following ones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The classical way would be to &lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt; a Docker image, push it to your local Docker registry and run it on a Kubernetes cluster using &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl run ...&lt;/code&gt; or by creating a Kubernetes deployment using &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl create -f deployment.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;For Java applications, the Fabric8 Maven plugin can be used to build, run and debug Docker images on a Kubernetes cluster&lt;/li&gt;
  &lt;li&gt;You can use &lt;a href=&quot;https://docs.helm.sh/using_helm/#quickstart-guide&quot; target=&quot;_blank&quot;&gt;Helm Charts&lt;/a&gt; - think of Helm as yum/apt/brew for Kubernetes&lt;/li&gt;
  &lt;li&gt;If you’re used to Docker Compose and you have a lot of those config files lying around, you can use &lt;a href=&quot;https://github.com/kubernetes/kompose&quot; target=&quot;_blank&quot;&gt;Kompose&lt;/a&gt; to convert them to Kubernetes config files&lt;/li&gt;
  &lt;li&gt;Openshift provides a way to create an image straight from your source code called &lt;a href=&quot;https://github.com/openshift/source-to-image&quot; target=&quot;_blank&quot;&gt;Source to Image&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;step-3-kubectl-exec-or-oc-exec&quot;&gt;Step 3: &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl exec&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;oc exec&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;If you want to find out what is going on inside of these black-box containers, you really should use the &lt;code class=&quot;highlighter-rouge&quot;&gt;exec&lt;/code&gt; command which allows you to SSH into them so you can snoop around and learn about the internals of your applications.
It’s very handy to debug applications, to figure out issues you might be having and to identify bugs or problems in advance.&lt;/p&gt;

&lt;h2 id=&quot;step-4-logs&quot;&gt;Step 4: Logs&lt;/h2&gt;

&lt;p&gt;Looking at logs can make troubleshooting so much easier.
Kubernetes allows the user to look at console logs for any pod in the cluster using &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl log &amp;lt;name-of-the-pod&amp;gt;&lt;/code&gt; but it gets quite tiresome rather quickly.
Luckily for us, the community has come up with another handy tool called &lt;a href=&quot;https://github.com/johanhaleby/kubetail/&quot; target=&quot;_blank&quot;&gt;KubeTail&lt;/a&gt; which allows us to tail multiple pods at the same time, with colorized output.&lt;/p&gt;

&lt;h2 id=&quot;step-5-service-discovery-and-load-balancing&quot;&gt;Step 5: Service Discovery and Load Balancing&lt;/h2&gt;

&lt;p&gt;In Kubernetes, pods can be exposed as services, which are internal to the cluster but are really handy in inter-service communication.
Inside of the cluster, services can address each other through DNS via their service names. A service called &lt;code class=&quot;highlighter-rouge&quot;&gt;producer&lt;/code&gt; running on port 8080 can be called with the following URL: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://producer:8080&lt;/code&gt;.
When creating a deployment containing a service inside of Kubernetes with two replicas, a ReplicaSet will be created for you, and all traffic to that deployed service will be load balanced automatically over those two replicas.
For more specialized load balancing (for example when doing &lt;a href=&quot;https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/#canary-deployments&quot; target=&quot;_blank&quot;&gt;Canary Deployments&lt;/a&gt;) you can make use of multiple deployments.&lt;/p&gt;

&lt;h2 id=&quot;step-6-live-and-ready&quot;&gt;Step 6: Live and Ready&lt;/h2&gt;

&lt;p&gt;This step is really helpful when just starting with Kubernetes, especially when you can’t figure out why your app keeps restarting over and over.
Burr taught us about the existence of and differences between &lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/&quot; target=&quot;_blank&quot;&gt;the &lt;strong&gt;liveness&lt;/strong&gt; and &lt;strong&gt;readiness&lt;/strong&gt; probes in Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Many applications running for long periods of time eventually transition to broken states, and cannot recover except by being restarted. Kubernetes provides &lt;strong&gt;liveness probes&lt;/strong&gt; to detect and remedy such situations.&lt;/p&gt;

&lt;p&gt;Sometimes, applications are temporarily unable to serve traffic.
For example, an application might need to load large data or configuration files during startup.
In such cases, you don’t want to kill the application, but you don’t want to send it requests either.
Kubernetes provides &lt;strong&gt;readiness probes&lt;/strong&gt; to detect and mitigate these situations.
&lt;em&gt;A pod with containers reporting that they are not ready does not receive traffic through Kubernetes Services.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;step-7-rolling-updates-and-bluegreen-deployments&quot;&gt;Step 7: Rolling updates and Blue/Green deployments&lt;/h2&gt;

&lt;p&gt;As mentioned above for Canary Deployments, Kubernetes offers the possibility to balance load over different versions of your application.
This makes it a great tool to manage rolling updates of new versions of your application, as well as Blue/Green deployments.
Although I like the possibilities of the framework, I prefer to use other tools for this like Spinnaker or a service mesh like &lt;a href=&quot;https://istio.io&quot; target=&quot;_blank&quot;&gt;Istio&lt;/a&gt;.
These tools will use Kubernetes for us, so that we don’t have to worry about changing and updating configuration files all the time.&lt;/p&gt;

&lt;h2 id=&quot;step-8-debugging&quot;&gt;Step 8: Debugging&lt;/h2&gt;

&lt;p&gt;As we’ve said before, debugging in Kubernetes is completely viable and there are several possibilities here.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;kubectl exec&lt;/code&gt; to get inside of the container and live debug the application&lt;/li&gt;
  &lt;li&gt;Using the &lt;a href=&quot;https://github.com/fabric8io/fabric8-maven-plugin&quot; target=&quot;_blank&quot;&gt;Fabric8 Maven plugin&lt;/a&gt; to debug the application&lt;/li&gt;
  &lt;li&gt;Even Visual Studio Code now has the possibility to &lt;a href=&quot;https://code.visualstudio.com/blogs/2017/09/28/java-debug&quot; target=&quot;_blank&quot;&gt;live debug a running Java application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/VeerMuchandi/openshift-local/blob/master/DebuggingUsingIDE.md&quot; target=&quot;_blank&quot;&gt;Red Hat JBoss Developer Studio&lt;/a&gt; can be used to debug Kubernetes or Openshift applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a bonus for his talk, Burr also explained one of the new service meshes out there called &lt;a href=&quot;https://istio.io/&quot; target=&quot;_blank&quot;&gt;Istio&lt;/a&gt;.
It promises to deliver &lt;strong&gt;an open platform to connect, manage, and secure microservices&lt;/strong&gt;.
Using a sidecar proxy inside each pod called &lt;strong&gt;Envoy&lt;/strong&gt; and some governing tools such as Istio Pilot and Mixer, it solves many of the problems that microservice architectures pose, such as secure inter-service communication, service discovery, circuit breaking, intelligent routing and load balancing, etc…
This seems like a very promising technology inside of the Kubernetes and Openshift world and we will keep a close eye on it.&lt;/p&gt;

&lt;p&gt;There was &lt;a href=&quot;https://www.youtube.com/watch?v=AGztKw580yQ&quot; target=&quot;_blank&quot;&gt;a talk from &lt;strong&gt;Ray Tsang&lt;/strong&gt; at Devoxx about Istio&lt;/a&gt; which was very interesting and entertaining, as always.&lt;/p&gt;

&lt;p&gt;You can find Burr’s presentation right here on &lt;a href=&quot;https://docs.google.com/presentation/d/1ij64THksTygvifW5BD-n0ipc6MDF4cGBRQcV3BRYaoM/edit#slide=id.g12c8aac1e6_0_0&quot; target=&quot;_blank&quot;&gt;Google Docs&lt;/a&gt;.&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Yannick&quot;, &quot;last_name&quot;=&gt;&quot;De Turck&quot;, &quot;twitter&quot;=&gt;&quot;YannickDeTurck&quot;, &quot;linkedin&quot;=&gt;&quot;yannickdeturck&quot;, &quot;github&quot;=&gt;&quot;yannickdeturck&quot;, &quot;permalink&quot;=&gt;&quot;/author/yannick-de-turck/&quot;, &quot;avatar&quot;=&gt;&quot;yannick-de-turck.jpg&quot;, &quot;title&quot;=&gt;&quot;Senior Consultant&quot;, &quot;title2&quot;=&gt;&quot;Coach&quot;, &quot;email&quot;=&gt;&quot;Yannick.DeTurck@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Yannick is a senior Java consultant and competence lead of the JVM languages competence center at Ordina Belgium. He's very much interested in everything Java and Spring related as well as reactive programming, Kotlin, Lightbend technologies, software architectures, and coaching and enabling other colleagues.&quot;}</name><email>Yannick.DeTurck@ordina.be</email></author><category term="Conference" /><category term="JavaDay" /><category term="Java" /><category term="Kotlin" /><category term="Spring" /><category term="CQRS" /><category term="Event Sourcing" /><category term="Microservices" /><category term="Reactive" /><category term="Spinnaker" /><category term="Reactor" /><category term="WebFlux" /><category term="Kubernetes" /><summary type="html">JavaDay Ukraine is an annual international two-day conference in Kyiv with more than 60 global speakers with various topics on Java, software architecture, machine learning, data science, and more. In this blog post we will go over some of the talks that we have attended.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/javaday-ukraine-2017/javaday-ukraine-2017.png" /></entry><entry><title type="html">First edition of the Ordina Architecture Kata</title><link href="https://ordina-jworks.github.io/architecture/2017/10/20/Ordina-Architecture-Kata.html" rel="alternate" type="text/html" title="First edition of the Ordina Architecture Kata" /><published>2017-10-20T00:00:00+00:00</published><updated>2017-10-20T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/architecture/2017/10/20/Ordina-Architecture-Kata</id><content type="html" xml:base="https://ordina-jworks.github.io/architecture/2017/10/20/Ordina-Architecture-Kata.html">&lt;blockquote&gt;
  &lt;p&gt;On the 18th of October 2017, Ordina Belgium organized the first &lt;strong&gt;Ordina Architecture Kata&lt;/strong&gt;.
The session was presided by Bart Blommaerts, cross-unit Competence Manager Architecture.
A group of sixteen senior consultants, with different areas of expertise, were gathered in Mechelen to practice software architecture.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-is-a-kata&quot;&gt;What is a Kata?&lt;/h2&gt;

&lt;p&gt;Kata is a Japanese word most commonly known for the presence in martial arts.
The English term for Kata is &lt;strong&gt;form&lt;/strong&gt; and it refers to the detailed choreographed patterns of movements practiced either solo or in pairs.&lt;/p&gt;

&lt;p&gt;You might know the saying &lt;strong&gt;practice makes perfect&lt;/strong&gt;, and Architectural Katas are exactly that: practicing.
These Katas were born out of a simple desire — Software architects need a chance to practice being software architects.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“So how are we supposed to get great architects, if they only get the chance to architect fewer than a half-dozen times in their career?” - Ted Neward&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;pragmatic-architecture-today---recap&quot;&gt;Pragmatic Architecture Today - Recap&lt;/h2&gt;

&lt;p&gt;In his conference talk and blog post &lt;a href=&quot;https://ordina-jworks.github.io/architecture/2017/06/21/pragmatic-architecture-today.html&quot; target=&quot;_blank&quot;&gt;Pragmatic Architecture, Today&lt;/a&gt;, Bart Blommaerts discusses the need to think about Software Architecture.&lt;/p&gt;

&lt;p&gt;Since this is very relevant to this Architecture Kata, we recap quickly what we learned back then.&lt;/p&gt;

&lt;h3 id=&quot;why-do-we-need-an-architecture&quot;&gt;Why do we need an architecture?&lt;/h3&gt;

&lt;p&gt;We need to build a system.
A system is build for stakeholders.
Customers, users, developers, … are all stakeholders of a particular system.
Those stakeholders need to have a clear view on what needs to be built.&lt;/p&gt;

&lt;p&gt;Every system has an architecture, even those where architectural decisions weren’t formally made.&lt;/p&gt;

&lt;p&gt;An architecture is described in an Architectural Description.
This description is also particularly useful for the stakeholders.&lt;/p&gt;

&lt;p&gt;An Architectural Description uses views, which are shaped by perspectives.&lt;/p&gt;

&lt;h3 id=&quot;ooda&quot;&gt;OODA&lt;/h3&gt;

&lt;p&gt;OODA is a re-entrant feedback loop, that consists of four stages:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Observe: Listen to customers, gather requirements, available resources, …&lt;/li&gt;
  &lt;li&gt;Orient: Assess comparable systems, use your experience to make sense of your earlier observations.&lt;/li&gt;
  &lt;li&gt;Decide: From the orientation stage, multiple alternatives might need to be considered. 
In the decision stage, we take a decision.&lt;/li&gt;
  &lt;li&gt;Act: Act on your decision, implement.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;An exercise that can help you in the different stages, is to start with some bullet points and then writing them out explicitly.
Comparing the full text with the bullet points, will often be very insightful.&lt;/p&gt;

&lt;p&gt;To reach consensus when taking decisions, share these with customers, peers, … and verify if they share your ideas.&lt;/p&gt;

&lt;h2 id=&quot;visualization-of-the-architecture&quot;&gt;Visualization of the architecture&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;“One cannot see the ocean’s currents by studying drops of water” — Grady Booch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To a certain amount, you can derive business logic from the code.
One might say that the code is the truth, but not the whole truth.&lt;/p&gt;

&lt;p&gt;Goals of visualizing your architecture:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Consistency&lt;/li&gt;
  &lt;li&gt;Reporting — Architecture needs to be in the heads of the stakeholders&lt;/li&gt;
  &lt;li&gt;Checking and validating — Share the architecture with your different stakeholders&lt;/li&gt;
  &lt;li&gt;Share information — Other people might have experience with certain challenges&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;unified-modeling-language-uml&quot;&gt;Unified Modeling Language (UML)&lt;/h3&gt;

&lt;p&gt;Using a language like &lt;strong&gt;UML&lt;/strong&gt; can be useful, especially when doing model-driven development. 
Also, be very aware that this way of working can become very inefficient.
When you are not doing MDD, UML can still be used, if there is shared understanding of the created diagrams.&lt;/p&gt;

&lt;h3 id=&quot;boxes-and-lines&quot;&gt;Boxes and lines&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Boxes and lines&lt;/strong&gt; are a possibility too, and Bart recommends this more pragmatic approach.
Don’t make things more complex than they need to be, boxes and lines are fine.
Just make sure to be &lt;strong&gt;consistent&lt;/strong&gt; and always provide a &lt;strong&gt;legend&lt;/strong&gt;.
Also make sure your stakeholders understand what you’re drawing.
A legend will really help with getting the message across.
It’s important that you can discuss a matter while speaking a common language.&lt;/p&gt;

&lt;p&gt;Avoid fluffy diagrams and mixed abstractions.
Don’t mix eg. user interaction information with data flow information.&lt;/p&gt;

&lt;h3 id=&quot;decision-log&quot;&gt;Decision log&lt;/h3&gt;

&lt;p&gt;Document your decisions and alternatives in a &lt;strong&gt;Decision log&lt;/strong&gt;, also known as Architecture Decision Record (ADR).
It will prove itself useful in the future and requires you to think about a decision.&lt;/p&gt;

&lt;p&gt;There’s no need to invent the wheel here.
There are several templates for different use cases available on the internet, for example in &lt;a href=&quot;https://github.com/joelparkerhenderson/architecture_decision_record&quot; target=&quot;_blank&quot;&gt;this ADR repo&lt;/a&gt; on Github.&lt;/p&gt;

&lt;p&gt;Only document what’s useful.&lt;/p&gt;

&lt;h2 id=&quot;viewpoints&quot;&gt;Viewpoints&lt;/h2&gt;

&lt;p&gt;Views help you to make architectural decisions.
Bart explained the different views with sharp-cut examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Context View&lt;/strong&gt; — Describes the relationships, dependencies and interactions between the system and its environment.
Added in the second print of the book.
Bart thinks this might be the most important view of them all.
Every component is a part of the greater system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional View&lt;/strong&gt; — Defines the architectural elements that deliver the systems functionality.
It documents the systems functional structure.
You can make decisions on a functional level eg. two components are doing similar things.
Should they be separate components?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Information View&lt;/strong&gt; — Models the system data and its state.
The purpose of many applications today is capturing data.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sidenote: Data modeling can be a long and complex process.
As an architect, you need to do data modeling at an architecturally significant level of detail.
Go to the level of detail that is needed for your team of developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Concurrency View&lt;/strong&gt; — Describes the concurrency structure of the system, mapping functional elements to concurrency units to clearly identify the parts of the system that can execute concurrently eg. process a file in blocks.
You can solve a lot with specific language constructs and asynchronous messaging.
If you want to dig deeper and want to know the nitty gritty details of messaging, a must-read is the book &lt;a href=&quot;https://www.goodreads.com/book/show/85012.Enterprise_Integration_Patterns&quot; target=&quot;_blank&quot;&gt;Enterprise Integration Patterns&lt;/a&gt; by Gregor Hohpe and Bobby Woolf.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Development view&lt;/strong&gt; — Describes the architecture that supports the software development process.
When you have an experienced development team, this can be very high-level.
Make sure you include the senior developers in the team, when constructing the development view.
They have the experience and on top of that… they will be more motivated to be part of the decision making process and technical vision.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment view&lt;/strong&gt; — Describes the physical environment into which the system will be deployed, including the system dependencies on its runtime environment.
Make sure you include all information relevant for deploying the application, eg. OS, Apache HTTPD, Tomcat, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Operational view&lt;/strong&gt; — Describe how the system will be operated, administered, and supported when it is running in its production environment.
You can use a state chart to describe the operations process.&lt;/p&gt;

&lt;h2 id=&quot;perspectives&quot;&gt;Perspectives&lt;/h2&gt;

&lt;p&gt;Perspectives shape the views for non-functional requirements.&lt;/p&gt;

&lt;p&gt;When you introduce perspectives, you’ll have to make trade-offs.
An architectural decision will favour certain perspectives and at the same time, hinder other perspectives.
For example, strong encryption favours security but hinders performance.&lt;/p&gt;

&lt;p&gt;Here’s a list of very plausible non-functional requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Accessibility&lt;/strong&gt; — Ability of the system to be used by people with disabilities.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Evolution&lt;/strong&gt; — Ability of the system to be flexible in the face of the inevitable change that all systems experience after deployment, balanced against the cost of providing such flexibility.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Location&lt;/strong&gt; — Ability of your system to overcome problems brought about by the absolute location of your system’s components.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Performance and scalability&lt;/strong&gt; — Ability of the system to predictably execute within its mandatory performance profile and to handle increased processing volumes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Regulation&lt;/strong&gt; — Ability of the system to conform to local and international laws, quasi-legal regulations, company policies, and other rules and standards.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt; — Ability of the system to reliably control, monitor and audit who can perform what actions on what resources and to detect and recover from failures in security mechanisms.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Usability&lt;/strong&gt; — The ease with which people who interact with the system can work effectively.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-kata&quot;&gt;The Kata&lt;/h2&gt;

&lt;p&gt;Our kata for today — AM.I.SCK&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nurses that answer questions from patients via a chat platform.&lt;/li&gt;
  &lt;li&gt;250+ nurses&lt;/li&gt;
  &lt;li&gt;Access to medical histories&lt;/li&gt;
  &lt;li&gt;Assist nurses in providing medical diagnosis&lt;/li&gt;
  &lt;li&gt;Reach local medical staff, even ahead of time&lt;/li&gt;
  &lt;li&gt;Enable parts of the system for direct patient usage&lt;/li&gt;
  &lt;li&gt;Conversations are not considered medical records&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The sixteen attendees were divided in groups of four.&lt;/p&gt;

&lt;p&gt;Each team had fifteen to twenty minutes to brainstorm about the case and create the first four views on a whiteboard together.
Afterwards, each team had to present their views to the entire group.
Bart challenged our opinions and gave practical tips on how to improve our thinking.&lt;/p&gt;

&lt;p&gt;After a second theoretical deep dive about how perspectives can have an effect on your views, we did the same excercise for the last three views.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Ordina Architectural Kata&quot; src=&quot;/img/kata/banner-small.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h2&gt;

&lt;p&gt;The different viewpoints really complement each other.
When drawing a view, you’ll notice that you might be able to add more information to another view and vice versa.&lt;/p&gt;

&lt;p&gt;When drawing a context view, focus on the interactions with other systems.
Don’t be tempted in drawing eg. a frontend and a backend component for your system, unless these are separated by external systems.
That granularity is not important for the context view.&lt;/p&gt;

&lt;p&gt;One view can contain several diagrams (eg. you can have multiple state diagrams in the Information View), additional text, tables containing data, etc.&lt;/p&gt;

&lt;p&gt;Use the experience of every team member to draw the diagrams.
Think of similar projects and previous professional experiences.&lt;/p&gt;

&lt;h2 id=&quot;ordina-accelerator-2018&quot;&gt;Ordina Accelerator 2018&lt;/h2&gt;

&lt;p&gt;This course was part of the &lt;a href=&quot;https://ordina-accelerator.be/&quot; target=&quot;_blank&quot;&gt;Ordina Accelerator program&lt;/a&gt;.
With Accelerator, Ordina offers its employees the necessary tools to develop themselves further.
Not only technical-, but also social- and organizational skills are included in the program.&lt;/p&gt;

&lt;p&gt;Medior and Senior experts get the chance to literally &lt;strong&gt;accelerate their career&lt;/strong&gt; by extensively following courses and workshops over a period of two years.&lt;/p&gt;

&lt;h2 id=&quot;assignment&quot;&gt;Assignment&lt;/h2&gt;

&lt;p&gt;At the end of the kata, the participants received their assignment.
Upon succesful completion of this assignment, they received an internal &lt;strong&gt;Architect Associate&lt;/strong&gt; certificate.
This badge is a pre-requisite to participate in the professional and master programs.&lt;/p&gt;

&lt;p&gt;The following people have earned the Architect Associate badge:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Andreas Evers&lt;/li&gt;
  &lt;li&gt;Benjamin Haentjes&lt;/li&gt;
  &lt;li&gt;Frederick Bousson&lt;/li&gt;
  &lt;li&gt;Geert Clissen&lt;/li&gt;
  &lt;li&gt;Jochen Van de Voorde&lt;/li&gt;
  &lt;li&gt;Johan Buntinx&lt;/li&gt;
  &lt;li&gt;Jos Clijmans&lt;/li&gt;
  &lt;li&gt;Ken Coenen&lt;/li&gt;
  &lt;li&gt;Kevin Bosteels&lt;/li&gt;
  &lt;li&gt;Koen Vanden Bossche&lt;/li&gt;
  &lt;li&gt;Mario Van Hissenhoven&lt;/li&gt;
  &lt;li&gt;Martin Kwee&lt;/li&gt;
  &lt;li&gt;Sebastiaan Tempels&lt;/li&gt;
  &lt;li&gt;Stijn Dierckens&lt;/li&gt;
  &lt;li&gt;Sven Bovens&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The list will be updated, when more people receive the badge.&lt;/p&gt;

&lt;p&gt;Their results, will help shape to future of the Ordina Architecture Katas.&lt;/p&gt;

&lt;h2 id=&quot;links-and-resources&quot;&gt;Links and resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Recommended reading: 
&lt;a href=&quot;https://www.goodreads.com/book/show/11686849-software-systems-architecture&quot; target=&quot;_blank&quot;&gt;Software Systems Architecture&lt;/a&gt; by Eoin Woods and Nick Rozanski.
In this book, they discuss Viewpoints and Perspectives&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nealford.com/katas/about.html&quot; target=&quot;_blank&quot;&gt;Architectural Katas&lt;/a&gt; on neilford.com&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://archkatas.herokuapp.com/&quot; target=&quot;_blank&quot;&gt;https://archkatas.herokuapp.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://groups.google.com/forum/#!forum/architecturalkatas&quot; target=&quot;_blank&quot;&gt;ArchitecturalKatas&lt;/a&gt; Google User Group&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://liminalthinking.com/&quot; target=&quot;_blank&quot;&gt;Liminal Thinking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.enterpriseintegrationpatterns.com/&quot; target=&quot;_blank&quot;&gt;Enterprise Integration Patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Ken&quot;, &quot;last_name&quot;=&gt;&quot;Coenen&quot;, &quot;twitter&quot;=&gt;&quot;CoenenKen&quot;, &quot;linkedin&quot;=&gt;&quot;coenenken&quot;, &quot;github&quot;=&gt;&quot;kencoenen&quot;, &quot;permalink&quot;=&gt;&quot;/author/ken-coenen/&quot;, &quot;avatar&quot;=&gt;&quot;ken-coenen.png&quot;, &quot;title&quot;=&gt;&quot;Principal Consultant&quot;, &quot;title2&quot;=&gt;&quot;Backend Practice Manager&quot;, &quot;email&quot;=&gt;&quot;ken.coenen@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Ken is a Principal Java Consultant at Ordina, passionate about all Java- and JavaScript related technologies. Aside from his day-to-day occupation as a consultant, he is also Backend Practice Manager of the Ordina JWorks unit. In this capacity, he narrows the gap between consultants and potential innovative customer projects. He does this by organizing workshops, talks and courses about the newest technologies, whereby people can grow in their role as a software consultant.&quot;}</name><email>ken.coenen@ordina.be</email></author><category term="Architecture" /><category term="Architecture" /><category term="Agile" /><category term="OODA" /><summary type="html">On the 18th of October 2017, Ordina Belgium organized the first Ordina Architecture Kata. The session was presided by Bart Blommaerts, cross-unit Competence Manager Architecture. A group of sixteen senior consultants, with different areas of expertise, were gathered in Mechelen to practice software architecture.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/kata/kata-6-thumb.jpg" /></entry><entry><title type="html">JavaOne 2017</title><link href="https://ordina-jworks.github.io/tech/2017/10/18/javaone.html" rel="alternate" type="text/html" title="JavaOne 2017" /><published>2017-10-18T00:00:00+00:00</published><updated>2017-10-18T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/tech/2017/10/18/javaone</id><content type="html" xml:base="https://ordina-jworks.github.io/tech/2017/10/18/javaone.html">&lt;p&gt;The last time I visited &lt;a href=&quot;https://www.oracle.com/javaone/index.html&quot; target=&quot;_blank&quot;&gt;JavaOne&lt;/a&gt; was back in 2014.
So, I was very excited to go back to San Francisco this year.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;image fit&quot; alt=&quot;Keynote&quot; src=&quot;/img/javaone/keynote.png&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h1&gt;

&lt;h2 id=&quot;jdk9&quot;&gt;JDK9&lt;/h2&gt;

&lt;p&gt;JDK9 was the “big topic” of JavaOne, with &lt;a href=&quot;https://www.youtube.com/watch?v=C5yX-elG4w0&quot; target=&quot;_blank&quot;&gt;Jigsaw&lt;/a&gt; getting a lot of attention.
Jigsaw might break some code (eg. code that uses internal Sun APIs), but Java modularity will surely help further adoption of Java.
Many libraries and frameworks already work together nicely with JDK9.
We saw this in a nice demo of &lt;a href=&quot;https://www.jetbrains.com/idea/&quot; target=&quot;_blank&quot;&gt;IntelliJ&lt;/a&gt; where the IDE does a lot of the Jigsaw heavy lifting.
Another interesting change, is that Java will have a new release every six months from now on.
These releases will also introduce a new &lt;a href=&quot;https://jaxenter.com/java-9-version-numbering-scheme-137544.html&quot; target=&quot;_blank&quot;&gt;numbering scheme&lt;/a&gt;, comparable to what Ubuntu has been using.
While I applaud the idea to deliver faster, it will definitely come with a learning effort, for developers.&lt;/p&gt;

&lt;h3 id=&quot;the-good-copbad-cop-guide-to-java-9&quot;&gt;The Good Cop/Bad Cop Guide to Java 9&lt;/h3&gt;

&lt;p&gt;A very entertaining talk on JDK9 was the one from &lt;a href=&quot;https://twitter.com/sjmaple&quot; target=&quot;_blank&quot;&gt;Simon Maple&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/shelajev&quot; target=&quot;_blank&quot;&gt;Oleg Šelajev&lt;/a&gt; from &lt;a href=&quot;https://zeroturnaround.com/&quot; target=&quot;_blank&quot;&gt;Zeroturnaround&lt;/a&gt; where they discussed pros and cons of &lt;a href=&quot;http://openjdk.java.net/projects/jigsaw/&quot; target=&quot;_blank&quot;&gt;JDK9 modules&lt;/a&gt;, &lt;a href=&quot;http://www.oracle.com/technetwork/articles/java/g1gc-1984535.html&quot; target=&quot;_blank&quot;&gt;G1GC&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/JShell&quot; target=&quot;_blank&quot;&gt;JShell&lt;/a&gt; and other API updates.&lt;/p&gt;

&lt;p&gt;It was probably one of my favorite talks, because it was both funny and educational.&lt;/p&gt;

&lt;h2 id=&quot;fn-project&quot;&gt;FN Project&lt;/h2&gt;

&lt;p&gt;During the first Java keynote, the &lt;a href=&quot;http://fnproject.io/&quot; target=&quot;_blank&quot;&gt;FN Project&lt;/a&gt; was announced and open-sourced.
The FN project is a container native serverless platform that you can use on any platform supporting Docker.
This also means that local development becomes very easy, which isn’t always the case with other serverless solutions.
It has out of the box support Java, Go, Ruby, Python, PHP, and Node.js
I definitely look forward to playing with it.&lt;/p&gt;

&lt;h2 id=&quot;microservices-bof&quot;&gt;Microservices BOF&lt;/h2&gt;

&lt;p&gt;In the microservices BOF on Monday evening, &lt;a href=&quot;https://twitter.com/crichardson&quot; target=&quot;_blank&quot;&gt;Chris Richardson&lt;/a&gt; presented what must be the perfect summary of the current state of everything going on in the microservices landscape.
He created a &lt;a href=&quot;http://microservices.io/patterns/index.html&quot; target=&quot;_blank&quot;&gt;pattern language&lt;/a&gt; for microservice architectures at &lt;a href=&quot;http://microservices.io/&quot; target=&quot;_blank&quot;&gt;microservices.io&lt;/a&gt; that I find particularly interesting.
After Chris, &lt;a href=&quot;https://twitter.com/starbuxman&quot; target=&quot;_blank&quot;&gt;Josh Long&lt;/a&gt; proved that he can bring a 45 mins talk in 15 mins with only live coding which was very amusing to watch.
JavaOne surely showed us that microservices are still hot!&lt;/p&gt;

&lt;h2 id=&quot;acid-is-so-yesterday-maintaining-data-consistency-with-sagas&quot;&gt;ACID Is So Yesterday: Maintaining Data Consistency with Sagas&lt;/h2&gt;

&lt;p&gt;When creating a distributed system with microservices, using a database per microservice is generally seen as a best-practice.
A drawback of this approach is that transaction management becomes a big hurdle and ACID (Atomicity, Consistency, Isolation, Durability) is no longer a desirable option.
An alternative for ACID, is &lt;a href=&quot;http://www.dataversity.net/acid-vs-base-the-shifting-ph-of-database-transaction-processing/&quot; target=&quot;_blank&quot;&gt;BASE&lt;/a&gt;: Basically Available, Soft state, Eventual consistency.
BASE can be realized with &lt;a href=&quot;http://microservices.io/patterns/data/saga.html&quot; target=&quot;_blank&quot;&gt;sagas&lt;/a&gt;.
A saga is a sequence of local transactions.
Each local transaction updates the database and publishes a message or event to trigger the next local transaction in the saga.
If a local transaction fails because it violates a business rule then the saga executes a series of compensating transactions that undo the changes that were made by the preceding local transactions.&lt;/p&gt;

&lt;h2 id=&quot;clouds-and-containers&quot;&gt;Clouds and containers&lt;/h2&gt;

&lt;p&gt;As expected, a lot of talks focused on cloud deployment and operation.
One of the more interesting ones, compared the different container orchestration options and runtimes like Docker Swarm Mode, Kubernetes, Amazon ECS, Mesos/Marathon, Rancher and Triton.
The talk demoed some differences between (for example) &lt;a href=&quot;https://docs.docker.com/engine/swarm/stack-deploy/#set-up-a-docker-registry&quot; target=&quot;_blank&quot;&gt;Docker Stack&lt;/a&gt; and &lt;a href=&quot;https://kubernetes.io/&quot; target=&quot;_blank&quot;&gt;Kubernetes&lt;/a&gt;, like the scaling of pods vs. the scaling of services.
To make a correct choice between all options, it is imperative to take consistency, portability, build integration with CI / CD, community and transferability of skills into consideration.
Source code of the comparison is available &lt;a href=&quot;https://github.com/JMHReif/CloudsAndContainersDemoScripts&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;my-talk&quot;&gt;My Talk&lt;/h1&gt;

&lt;p&gt;My talk: &lt;a href=&quot;https://www.slideshare.net/secret/u70m0cjrWflo9n&quot; target=&quot;_blank&quot;&gt;10 Tips To Become An Awesome Technical Lead&lt;/a&gt; was scheduled on Thursday in the exquisite Marriott Marquis.
From the start, I had a lot of interaction with the attendees and that obviously is very motivating.
Thanks a lot for that!
I uploaded my slides on &lt;a href=&quot;https://www.slideshare.net/BartBlommaerts/javaone-2017-10-tips-to-become-an-awesome-technical-lead-v3&quot; target=&quot;_blank&quot;&gt;Slideshare&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;networking-events&quot;&gt;Networking Events&lt;/h1&gt;

&lt;h2 id=&quot;silicon-valley&quot;&gt;Silicon Valley&lt;/h2&gt;

&lt;p&gt;After landing in San Francisco, my colleague &lt;a href=&quot;https://twitter.com/andreasevers&quot; target=&quot;_blank&quot;&gt;Andreas&lt;/a&gt;, picked me up at the airport and we went to visit some of the most famous tech companies in Silicon Valley.
Silicon Valley, in the southern San Francisco Bay Area of California, is home to many start-up and global technology companies.
Apple, Facebook and Google are among the most prominent.
The size of some of these companies really was remarkable.
Visiting the HP garage, the Android statues etc. was a really great way to cope with jetlag :)&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit shadowed&quot; alt=&quot;Silicon Valley&quot; src=&quot;/img/javaone/google.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;Silicon Valley&quot; src=&quot;/img/javaone/hp.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;Silicon Valley&quot; src=&quot;/img/javaone/netflix.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;oracle-openworld-benelux-bike-tour-2017&quot;&gt;Oracle OpenWorld Benelux Bike Tour 2017&lt;/h2&gt;

&lt;p&gt;Sunday morning, Oracle Benelux organised a Bike Tour for the Benelux attendees, which I liked a lot.
We biked the typical San Francisco route: Fisherman’s Wharf, Fort Mason, the Marina, Golden Gate Bridge, Sausalito and then back by ferry.
Three years ago, I did a similar tour, but did not take the ferry back.
The ferry was actually very nice: passing Alcatraz and watching the San Francisco skyline pop up.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;Bike The Bridge&quot; src=&quot;/img/javaone/bikethebridge.jpg&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;social-events-and-parties&quot;&gt;Social events and parties&lt;/h2&gt;

&lt;p&gt;There are &lt;em&gt;a lot&lt;/em&gt; of parties happening during JavaOne.
One of the highlights, for me, was &lt;a href=&quot;https://twitter.com/hashtag/PartyOne?src=hash&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;PartyOne 2017&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&quot;https://zeroturnaround.com/&quot; target=&quot;_blank&quot;&gt;ZeroTurnaround&lt;/a&gt;, &lt;a href=&quot;https://hazelcast.com/&quot; target=&quot;_blank&quot;&gt;Hazelcast&lt;/a&gt;, &lt;a href=&quot;http://www.tomitribe.com/&quot; target=&quot;_blank&quot;&gt;Tomitribe&lt;/a&gt; and &lt;a href=&quot;https://www.baincapital.com/&quot; target=&quot;_blank&quot;&gt;BainCapital&lt;/a&gt;.
This was an incredible opportunity to talk to some of the really big names of the Java industry in a very relaxed atmosphere as you can see in the following picture :)&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;PartyOne&quot; src=&quot;/img/javaone/partyone.jpg&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Another fun event, was &lt;a href=&quot;https://www.oracle.com/openworld/cloudfest.html&quot; target=&quot;_blank&quot;&gt;Oracle Cloud Fest&lt;/a&gt;: a concert of Ellie Goulding and The Chainsmokers in the AT&amp;amp;T Park.
We teamed up with our &lt;a href=&quot;https://www.ordina.nl&quot; target=&quot;_blank&quot;&gt;Ordina&lt;/a&gt; colleagues from the Netherlands to enjoy our last night in San Francisco.&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;Oracle Cloud Fest&quot; src=&quot;/img/javaone/att.jpg&quot; /&gt;
&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Bart&quot;, &quot;last_name&quot;=&gt;&quot;Blommaerts&quot;, &quot;avatar&quot;=&gt;&quot;bart-blommaerts.png&quot;, &quot;twitter&quot;=&gt;&quot;DaggieBe&quot;, &quot;linkedin&quot;=&gt;&quot;bartblommaerts&quot;, &quot;github&quot;=&gt;&quot;bart-blommaerts&quot;, &quot;permalink&quot;=&gt;&quot;/author/bart-blommaerts/&quot;, &quot;title&quot;=&gt;&quot;Software Architect&quot;, &quot;title2&quot;=&gt;&quot;Competence Manager Architecture&quot;, &quot;email&quot;=&gt;&quot;bart.blommaerts@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Bart Blommaerts is a passionate Software Architect at Ordina, who believes closing the model-code gap is essential to make rapid, agile delivery sustainable. Bart has a strong focus on API design, reuse, automation and security. He is always looking for technical challenges.&quot;}</name><email>bart.blommaerts@ordina.be</email></author><category term="Tech" /><category term="javaone" /><category term="conference" /><summary type="html">The last time I visited JavaOne was back in 2014. So, I was very excited to go back to San Francisco this year.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/j1.jpg" /></entry><entry><title type="html">Stairway to Health with IoT and the MEAN stack</title><link href="https://ordina-jworks.github.io/iot/2017/10/12/Stairway-To-Health.html" rel="alternate" type="text/html" title="Stairway to Health with IoT and the MEAN stack" /><published>2017-10-12T00:00:00+00:00</published><updated>2017-10-12T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/iot/2017/10/12/Stairway-To-Health</id><content type="html" xml:base="https://ordina-jworks.github.io/iot/2017/10/12/Stairway-To-Health.html">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/css/lightbox.css&quot; /&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.9.0/js/lightbox.min.js&quot;&gt;&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;Healthier at the office with the ‘Internet of Things’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-is-stairway-to-health&quot;&gt;What is Stairway to Health&lt;/h2&gt;
&lt;p&gt;In an effort to improve worker health in a fun and engaging way, Proximus wanted to encourage their employees to take the stairs instead of the elevator.
This is when the idea of a little game between the three towers came along. 
On different dashboards across Proximus and on the Stairway to Health website, the employees could see which tower had the most employees taking the stairs.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;buildings&quot; src=&quot;/img/stairwaytohealth/buildings.jpg&quot; class=&quot;image fit&quot; /&gt;
&lt;img alt=&quot;overview&quot; src=&quot;/img/stairwaytohealth/overview.jpg&quot; class=&quot;image fit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;They can also get a more detailed look of how many people taking the stairs where and when, with drilldown views for monthly, weekly, daily, and even hourly statistics.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;details&quot; src=&quot;/img/stairwaytohealth/details.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;weekly&quot; src=&quot;/img/stairwaytohealth/weekly.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;daily&quot; src=&quot;/img/stairwaytohealth/daily.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-does-it-do&quot;&gt;What does it do?&lt;/h2&gt;
&lt;p&gt;The Stairway to Health project is a simple yet great example to show what the Internet of Things can do:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;LoRa sensors detect door openings, these are installed on the doors of the staircases&lt;/li&gt;
  &lt;li&gt;These sensors communicate via the Proximus LoRa network to report their status&lt;/li&gt;
  &lt;li&gt;Sensor data is sent to the Proximus MyThings platform which processes the data&lt;/li&gt;
  &lt;li&gt;The data gets sent to the Stairway to Health application&lt;/li&gt;
  &lt;li&gt;The Stairway to Health application interprets and visualizes the data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In summary: 
We install sensors on the doors (things) to measure usage and we analyse the data to persuade people to move more. 
The result is a good example of how IoT can influence our daily lives. 
Proximus was able to provide us with all the necessary building blocks to offer a complete end-to-end solution!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;dataflow&quot; src=&quot;/img/stairwaytohealth/dataflow.jpg&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mythings-and-stairway-to-health&quot;&gt;MyThings and Stairway to Health&lt;/h2&gt;
&lt;p&gt;MyThings is the Proximus IoT platform for onboarding, managing, configuring and monitoring IoT sensors. By registering (onboarding) our sensors to the platform, we can let MyThings take care of decoding the messages and set up a stream to our application.
This way every time a log comes in from the sensor, we get the decoded data posted to our designated endpoint.&lt;/p&gt;

&lt;h2 id=&quot;the-requirements&quot;&gt;The Requirements&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;The usage of the stairways is measured and the results should be visualized on large screens in the towers.&lt;/li&gt;
  &lt;li&gt;These screens should have a QR code so that employees can easily visit the application on their mobile devices.&lt;/li&gt;
  &lt;li&gt;When visiting the website, they should be able to click on the results to get a more detailed view of the data.&lt;/li&gt;
  &lt;li&gt;The frontend application should be available in Dutch and French and the dashboard should switch between these languages every minute when viewing it on the large screens.&lt;/li&gt;
  &lt;li&gt;Admins should be able to manage locations (towers) and chart timespans.&lt;/li&gt;
  &lt;li&gt;It should have an info page with some information about the project and its purpose.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So technically this translates to build an application that:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Has an endpoint to receive logs from the MyThings Application,&lt;/li&gt;
  &lt;li&gt;Stores the data to its own database,&lt;/li&gt;
  &lt;li&gt;Show the data in charts that have multiple layers to see more/less details,&lt;/li&gt;
  &lt;li&gt;Shows the ratio of the results per tower,&lt;/li&gt;
  &lt;li&gt;The frontend dashboard data has to reload automatically (since it is shown on some big screens @ Proximus),&lt;/li&gt;
  &lt;li&gt;Add multi-language (automatically switch languages when viewing on tower’s large screens),&lt;/li&gt;
  &lt;li&gt;Is performant (able to handle many logs coming in and calculate the data to be displayed in the graphs),&lt;/li&gt;
  &lt;li&gt;CRUDs for managing timespans and locations,&lt;/li&gt;
  &lt;li&gt;Use the timespans / locations when displaying data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Oh, and did we mention we were only given four weeks to complete this mission…&lt;/p&gt;

&lt;h2 id=&quot;the-ingredients&quot;&gt;The Ingredients&lt;/h2&gt;
&lt;p&gt;So given all the requirements listed above and the fact we didn’t have a lot of time to waste, 
we chose to use a &lt;strong&gt;MEAN (TypeScript)&lt;/strong&gt; stack. 
MEAN stands for MongoDB Express Angular and NodeJS. 
It’s possible to use the mean stack with plain JavaScript, 
we chose to implement it with TypeScript since we wanted some strong typings on the backend application and we were going to use Angular 4 on the frontend which comes with TypeScript as well.&lt;/p&gt;

&lt;h3 id=&quot;nodejs&quot;&gt;NodeJs:&lt;/h3&gt;
&lt;p&gt;Write event driven applications with asynchronous I/O powered by the ultra fast Google V8 Engine. 
Mostly known for running your local dev environment and automating build tasks for frontend developers. 
NodeJS is probably one of the best and easiest options out there for real-time applications (with socket.io), 
which is exactly what we needed for our application.&lt;/p&gt;

&lt;h3 id=&quot;mongodb&quot;&gt;MongoDB:&lt;/h3&gt;
&lt;p&gt;Great to work with when dealing with JavaScript Objects. Good driver support with Mongoose for NodeJs. 
Document based structure, which makes it really flexible when it comes to modelling and it’s extremely scalable. 
We also took advantage of the very performant aggregation functionality for dealing with large amounts of data.&lt;/p&gt;

&lt;h3 id=&quot;expressjs&quot;&gt;ExpressJS:&lt;/h3&gt;
&lt;p&gt;A node framework that comes with some great functionality for setting up your node server and makes it easy to create routes, 
middleware, handling requests/responses, serving files from the filesystem, configuring static files, easy connections to the database, 
and much more.&lt;/p&gt;

&lt;h3 id=&quot;angular4&quot;&gt;Angular(4):&lt;/h3&gt;
&lt;p&gt;A TypeScript-based open-source frontend web application platform led by the Angular Team at Google and by a community of individuals and corporations to address all of the parts of the developer’s workflow while building complex web applications.&lt;/p&gt;

&lt;h3 id=&quot;socketio&quot;&gt;Socket.IO:&lt;/h3&gt;
&lt;p&gt;Socket.IO enables real-time bidirectional event-based communication. It works on every platform, browser or device, focusing equally on reliability and speed. To trigger events on our frontend application we used this great library to be able to detect when new data has been received and refresh the dashboard.&lt;/p&gt;

&lt;h3 id=&quot;highcharts&quot;&gt;Highcharts:&lt;/h3&gt;
&lt;p&gt;Interactive JavaScript library for creating dynamic charts. Highcharts is based on native browser technologies and not reinvent the wheel. Thousands of developers have contributed their work for us to use in our own projects. Also backwards compatible for IE.&lt;/p&gt;

&lt;h2 id=&quot;javascript-across-the-stack&quot;&gt;JavaScript across the stack&lt;/h2&gt;
&lt;p&gt;Not only does it make development quite a bit faster and easier by having a large community with lots of reusable code for your application (npm), it also lowers the barriers between frontend and backend developers by using the same programming language over the entire stack, so more efficiency and faster, leaner development which in turn means lower development costs. 
Also worth noting is that JavaScript currently is THE most popular programming language, so more developers will be able to easily understand and contribute to the application if needed. 
And probably the most important criteria: when it comes to cloud hosting, RAM is probably the main influencing factor when it comes to pricing. NodeJs uses less RAM than comparable Java applications.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;performance&quot; src=&quot;/img/stairwaytohealth/performance.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:800px;&quot; /&gt;
&lt;small style=&quot;font-size: 70%;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.ibm.com/developerworks/library/mo-nodejs-1/index.html&quot;&gt;Source and more about these tests&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Now that I’ve listed some of the pros of full-stack JS, I should also mention that it might not be the best solution for computation-heavy backend applications.
For projects like machine learning or heavy mathematical calculations the single CPU core and having only one thread that processes one request at a time might be easily blocked by a single compute-intensive task. 
Yet, there are numerous ways to overcome this limitation. 
By simply creating child processes or breaking complex tasks into smaller independent microservices.&lt;/p&gt;

&lt;p&gt;Let me just note that the comparison with Java above here is not because we are claiming that one is better than the other, it’s just to demonstrate that they both have their use cases and can be equally worth considering when choosing a technology for your application.&lt;/p&gt;

&lt;p&gt;Some great use cases for JavaScript across the stack are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;real-time chat,&lt;/li&gt;
  &lt;li&gt;Internet of Things,&lt;/li&gt;
  &lt;li&gt;real-time finance (stocks),&lt;/li&gt;
  &lt;li&gt;monitoring applications,&lt;/li&gt;
  &lt;li&gt;event-driven applications,&lt;/li&gt;
  &lt;li&gt;server-side proxies,&lt;/li&gt;
  &lt;li&gt;many more…&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;blocking-vs-non-blocking&quot;&gt;Blocking vs. Non-Blocking&lt;/h3&gt;
&lt;p&gt;In NodeJs you can take advantage of JavaScript promises. 
One of the benefits of this is that we can write non-blocking code.
To demonstrate how this works, I’ll give you an example in pseudo code for reading a file from the filesystem.&lt;/p&gt;

&lt;h3 id=&quot;blocking&quot;&gt;Blocking:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;read file from filesystem, set equal to &quot;contents&quot;&lt;/code&gt;&lt;br /&gt; 
&lt;code&gt;print content&lt;/code&gt;&lt;br /&gt; 
&lt;code&gt;do something else&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;non-blocking&quot;&gt;Non-Blocking:&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;read file from filesystem&lt;/code&gt;&lt;br /&gt; 
&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Whenever we're complete print contents &lt;span style=&quot;color:#e7904b;&quot;&gt;(callback)&lt;/span&gt; 
&lt;/code&gt; 
&lt;br /&gt; 
&lt;code&gt;do something else&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;blocking-vs-non-blocking&quot; src=&quot;/img/stairwaytohealth/blocking-vs-non-blocking.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:800px;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;setting-up-our-dev-environment--build&quot;&gt;Setting up our dev environment / build&lt;/h2&gt;
&lt;p&gt;The frontend part of this was really easy. 
We used angular-cli to generate a new project. 
In the future this also gave us the advantage of generating new components, services, pipes, testing and much more. 
Also for the charts and translations we choose for easy to use libraries like Highcharts and ngx-translate (previous ng2-translate).&lt;/p&gt;

&lt;p&gt;For the backend we decided to go with gulp. 
We added some tasks to transpile our server site TypeScript files to JavaScript so that node can execute it. 
For local serving we created a sequence task that combines running &lt;code class=&quot;highlighter-rouge&quot;&gt;ng build&lt;/code&gt; from the angular-cli and a gulp task to use &lt;code class=&quot;highlighter-rouge&quot;&gt;nodemon&lt;/code&gt; for running our server and restarting on changes. 
When working on the frontend, doing an ‘ng build’ was a bit too slow, therefore we added a &lt;code class=&quot;highlighter-rouge&quot;&gt;--standalone&lt;/code&gt; flag, to the serve task so that we could just build the backend application and do the frontend serve with &lt;code class=&quot;highlighter-rouge&quot;&gt;ng serve&lt;/code&gt; which is a lot more performant than having to do a ‘ng build’ on every change.
Since we are using TypeScript throughout the application, it only felt right to use the TypeScript version of gulp as well. 
It takes a little effort to get used to, but once you get the hang of it, it makes writing gulp tasks a lot more fun and less error prone.
Using the provided decorators, our gulp tasks look something like the following:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./dist/app/server/config/mongo.connection.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'prod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mongodb://localhost:27017/stairway'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./secrets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mongoUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./dist/app/server/config'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and create sequence tasks with:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;SequenceTask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mocha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'buildApp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'runMochaTests'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now that we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;gulpfile.ts&lt;/code&gt; file, we need to ensure that the gulpfile gets transpiled as well, we did this by adding an npm script, so that we can use TypeScript compiler with the &lt;code class=&quot;highlighter-rouge&quot;&gt;tsc&lt;/code&gt; command to transpile the file and make sure we are using the latest changes every time we use gulp.
(to get the tsc command, install typescript globally with npm)&lt;/p&gt;

&lt;h2 id=&quot;building-stairway-to-health&quot;&gt;Building Stairway to Health&lt;/h2&gt;
&lt;p&gt;After setting up our dev environment, database and getting a simple application up and running it’s time to start implementing our first features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Receiving data from MyThings&lt;/strong&gt;&lt;br /&gt;
So first things first, on MyThings we took a look at how we were going to structure the data that was going to be streamed to the Stairway to Health application.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;stream.png&quot; src=&quot;/img/stairwaytohealth/stream.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:800px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the MyThings application every sensor can have a &lt;code class=&quot;highlighter-rouge&quot;&gt;friendlyName1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;friendlyName2&lt;/code&gt;, we used these to specify which tower and which floor they represent. 
The sensors send a lot more data than just the magnetic pulse counts, therefore we needed the &lt;code class=&quot;highlighter-rouge&quot;&gt;container&lt;/code&gt; field, to be able to filter on &lt;code class=&quot;highlighter-rouge&quot;&gt;counter&lt;/code&gt; logs only (however, we store the other messages as well, maybe for future use). 
The &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; field is the amount of times the sensor was triggered, in other words, the actual counts. And of course a &lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt; since we will show the data in time based graphs.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt; represents the time that the sensor has sent its message to the MyThings application, we also wanted to keep track of when our application has received the log, so before saving we added one extra field to store this in our database.&lt;/p&gt;

&lt;p&gt;After we defined our model/schema of our logs, it was simply adding an endpoint to our express router and our first feature was ready. 
Well not exactly, we needed to trigger an event to refresh the data on our dashboard, but we’ll get back to this later.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Dashboard&lt;/strong&gt;&lt;br /&gt;
Since we created an Angular(4) application, we took advantage of the great features of angular-cli which makes it really easy to get a new project up and running and generate new components, services, tests and much more. 
We started by adding all the components needed for the application and adding the Proximus styling to the project. 
After that we imported the Highcharts library from npm to first make the charts on the homepage and later making the charts for the detailed views. 
All the charts were first made with mock data so that we could perfectly say from the backend what data we needed and in which format. 
From now on we knew how our JSON for the charts had to be made and we could implement the api endpoints for the dashboard and the details page. 
Finally after adding all the charts we started on adding the different languages to the application. Here we got our biggest ‘lesson learned’, it is much faster to start with I18N then to end with it, this is because you have to find all the normal text in the HTML files and copy them to the JSON-files. 
ALso we had to quickly create a translation list that the business could translate for us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mongo Aggregates&lt;/strong&gt;&lt;br /&gt;
As for displaying the daily, weekly and total counts below the buildings, we had to get this data from the database, keeping in mind that we would have to iterate over millions of sensor logs (at the time of writing this blog post, 1.4 million over 4 months). We had to make sure it was performant. This is where the Mongo aggregates come in handy. Instead of looping over the results and adding them up, we let Mongo take care of this with the &lt;code class=&quot;highlighter-rouge&quot;&gt;$sum&lt;/code&gt; operator which in code looks like the following:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sensorLogModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aggregate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'counter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$ne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}},&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// group them by fn1 (tower) and add up all 'value' fields&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$friendlyName1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;$sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'$value'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Remember, we store all the logs, but we only need counter logs. So for a little more performance, we leave out the ones with value 0 (a lot of them in the weekends), that’s what the &lt;code class=&quot;highlighter-rouge&quot;&gt;$match&lt;/code&gt; is for&lt;/em&gt;
The result: an array with objects that have an &lt;code class=&quot;highlighter-rouge&quot;&gt;_id&lt;/code&gt; field with &lt;code class=&quot;highlighter-rouge&quot;&gt;friendlyName1&lt;/code&gt; as value and a &lt;code class=&quot;highlighter-rouge&quot;&gt;total&lt;/code&gt; field with the sum of all (counter) values per tower. We repeat this for daily and weekly, but add a start and end date (which we simply create with TypeScript). &lt;code class=&quot;highlighter-rouge&quot;&gt;$match&lt;/code&gt; then looks something like this:&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;$match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'counter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;$ne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;$gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Later on we added some more calls to get the data by time span and location for the more detailed chart data, but you get the idea, we simply edit the timestamps or &lt;code class=&quot;highlighter-rouge&quot;&gt;friendlyName1&lt;/code&gt; (also by &lt;code class=&quot;highlighter-rouge&quot;&gt;friendlyName2&lt;/code&gt; on the hourly chart, which displays the hourly data per floor).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Socket.IO&lt;/strong&gt;&lt;br /&gt;
Now that we have data that can be retrieved and displayed on the frontend, time to implement some way to let our frontend application know when we receive some new data, so that it in turn can do a request for that new data.&lt;/p&gt;

&lt;p&gt;For this one to be clear we’re going to skip ahead in time and show a high level scheme of how the application is made up.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/img/stairwaytohealth/folder-structure.png&quot; data-lightbox=&quot;structure&quot; data-title=&quot;Structure&quot;&gt;
    &lt;img alt=&quot;folder-structure&quot; src=&quot;/img/stairwaytohealth/folder-structure.png&quot; class=&quot;image fit&quot; style=&quot;margin:0px auto; max-width:800px;&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bin (js) file is where we create our http, https and socket servers. To communicate between them, we use the node event emitter. 
The &lt;code class=&quot;highlighter-rouge&quot;&gt;server.ts&lt;/code&gt; file (let’s call it the app) gets bootstrapped onto these servers and when creating the app, we pass the created event emitter to it. 
This enables us to listen and broadcast events back and forward. 
The event emitter emits events between the backend services and the socket.io server emits events to our frontend application.&lt;/p&gt;

&lt;p&gt;So in our case, to let the frontend know when the sensor-log endpoint has received a message, we emit a &lt;code class=&quot;highlighter-rouge&quot;&gt;log-received&lt;/code&gt; event on the node event emitter. 
In the socket IO server we are listening on this event and we broadcast a &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; event to every connected frontend application. 
The frontend applications are listening for this &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; event and refresh their data by calling the dashboard endpoints.
However, since we have about 60 sensors sending data, this event was triggering quite a lot and with the chart rendering animations on our frontend application we had to wrap the &lt;code class=&quot;highlighter-rouge&quot;&gt;log-received&lt;/code&gt; in a timeout so that we would only refresh it once every 30 seconds (if a log was received).&lt;/p&gt;

&lt;p&gt;I’ve picked a few lines of code from our bin file to demonstrate how we pass the &lt;code class=&quot;highlighter-rouge&quot;&gt;eventEmitter&lt;/code&gt; when bootstrapping our application on to the http and https services from node.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../dist/app/server'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'events'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httpServer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httpsServer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that, we bootstrap the created https server on to the socket.io application. It too gets the same &lt;code class=&quot;highlighter-rouge&quot;&gt;EventEmitter&lt;/code&gt; instance passed into its constructor.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'socket.io'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;httpsServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'../dist/app/sockets'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ioApp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our sockets file, the method that gets executed will listen on the &lt;code class=&quot;highlighter-rouge&quot;&gt;logsReceived&lt;/code&gt; from our passed EventEmitter, and emits a &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; event on our &lt;code class=&quot;highlighter-rouge&quot;&gt;io&lt;/code&gt; instance.&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;eventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logsReceived'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/socket/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;configuration-crud&quot;&gt;Configuration CRUD&lt;/h2&gt;
&lt;p&gt;Since we did not want our configuration to be hard coded, we added some configuration screens to be able to change the time spans and entities (towers).&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin:0px auto;&quot;&gt;
    &lt;a href=&quot;/img/stairwaytohealth/crud1.png&quot; data-lightbox=&quot;crud&quot; data-title=&quot;Entities CRUD&quot;&gt;
        &lt;img alt=&quot;crud1&quot; src=&quot;/img/stairwaytohealth/crud1.png&quot; class=&quot;image fit&quot; style=&quot;width: 48%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/stairwaytohealth/crud2.png&quot; data-lightbox=&quot;crud&quot; data-title=&quot;Timespans CRUD&quot;&gt;
        &lt;img alt=&quot;crud2&quot; src=&quot;/img/stairwaytohealth/crud2.png&quot; class=&quot;image fit&quot; style=&quot;width: 48%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;br /&gt;
&lt;/div&gt;

&lt;p&gt;By the way, ‘gewicht’ in the first image stands for weight. 
To make sure the ratios are fair, we made sure that every tower has a ‘weight’ to multiply its log values by. 
These weights are calculated by the amount of employees/tower, with the largest tower having a weight of 1.&lt;/p&gt;

&lt;p&gt;Let’s take a look at how we set up our backend structure for creating crud endpoints.
In our &lt;code class=&quot;highlighter-rouge&quot;&gt;/routes&lt;/code&gt; directory we keep all files that define the urls and methods of every endpoint, and tell it which controller and method to use:&lt;br /&gt;
&lt;em&gt;timespan.route.ts&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/timespan/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timespanController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTimespanList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/timespan/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timespanController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTimespan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;next under our &lt;code class=&quot;highlighter-rouge&quot;&gt;/controllers&lt;/code&gt; directory we have our controllers where all our functionality/logic is&lt;br /&gt;
&lt;em&gt;timespan.controller.ts&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getTimespanList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NextFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timespanModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusMessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;authentication&quot;&gt;Authentication&lt;/h2&gt;
&lt;p&gt;To prevent everyone from changing these configurations of course we had to add some authentication functionality. 
As you can see in the router code above, we created an authentication middleware so that on every route that we want the user to be authenticated, we can simply add &lt;code class=&quot;highlighter-rouge&quot;&gt;this.authenticate()&lt;/code&gt; to the route. 
This checks a JWT token in the headers. 
We check the token to be valid. 
If it’s not valid, we send an &lt;code class=&quot;highlighter-rouge&quot;&gt;unauthorized&lt;/code&gt; response, and if it is valid, we decode it and add it as a user object on the request. 
This way we can access it in the controller and do some logic depending on its role, etc.
&lt;code class=&quot;highlighter-rouge&quot;&gt;this.authenticate&lt;/code&gt; is a method we added to the &lt;code class=&quot;highlighter-rouge&quot;&gt;core.route.ts&lt;/code&gt;.
Every route extends this super class so that we can put common code and middleware in this file.&lt;/p&gt;

&lt;p&gt;JWT stands for JSON Web Token and is a JSON-based open standard for creating access tokens that assert some number of claims. 
For example, a server could generate a token that has the claim &lt;code class=&quot;highlighter-rouge&quot;&gt;logged in as admin&lt;/code&gt; and provide that to a client. 
The client could then use that token to prove that he is logged in as admin.&lt;/p&gt;

&lt;h2 id=&quot;deploy&quot;&gt;Deploy&lt;/h2&gt;
&lt;p&gt;Finally we deployed it to the Proximus data center and watched the Proximus employees take on the challenge.&lt;/p&gt;

&lt;div style=&quot;text-align: center; margin: 0px auto;&quot;&gt;
    &lt;a href=&quot;/img/stairwaytohealth/result1.jpg&quot; data-lightbox=&quot;results&quot; data-title=&quot;Large screen @ Proximus towers&quot;&gt;
        &lt;img alt=&quot;result1&quot; src=&quot;/img/stairwaytohealth/result1.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 61.45%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
    &lt;a href=&quot;/img/stairwaytohealth/result2.jpg&quot; data-lightbox=&quot;results&quot; data-title=&quot;Informing the employees&quot;&gt;
        &lt;img alt=&quot;result2&quot; src=&quot;/img/stairwaytohealth/result2.jpg&quot; class=&quot;image fit&quot; style=&quot;width: 34.55%; display: inline-block;&quot; /&gt;
    &lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;After four hard weeks of working and writing many lines of code, we delivered our project to Proximus and the contest could start.
 Things we would have done differently:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Use mongo indexes and aggregation for large amounts of data&lt;/li&gt;
  &lt;li&gt;Use javascript date in stead of timestamps in mongo, easier to create aggregate with dates&lt;/li&gt;
  &lt;li&gt;Dockerize! So far, the most work has gone into getting the application deployed&lt;/li&gt;
  &lt;li&gt;Implement I18N translations at the beginning, as it is better to add translations while working on the component&lt;/li&gt;
  &lt;li&gt;Also we learned how complicated it can be to have one component with multiple switching charts. Instead of switching components.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Michael&quot;, &quot;last_name&quot;=&gt;&quot;Vervloet&quot;, &quot;permalink&quot;=&gt;&quot;/author/michael-vervloet/&quot;, &quot;avatar&quot;=&gt;&quot;michael-vervloet.jpg&quot;, &quot;linkedin&quot;=&gt;&quot;michaelvervloet&quot;, &quot;github&quot;=&gt;&quot;MiVvlt&quot;, &quot;title&quot;=&gt;&quot;SoftWare Engineer&quot;, &quot;title2&quot;=&gt;&quot;JavaScript Developer&quot;, &quot;email&quot;=&gt;&quot;michael.vervloet@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Michael is a full stack JavaScript developer specializing himself in backend development with NodeJs and Express, with a solid background of frontend/hybrid mobile development. As a member of Ordina's core 'Internet of Things' team he has collaborated on some challenging and innovative IoT applications.&quot;}</name><email>michael.vervloet@ordina.be</email></author><category term="IoT" /><category term="NodeJS" /><category term="MongoDB" /><category term="Angular" /><category term="ExpressJS" /><category term="Express" /><category term="TypeScript" /><category term="Angular-CLI" /><category term="Gulp" /><category term="Internet of Things" /><category term="IoT" /><category term="LoRa" /><category term="Proximus" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/stairwaytohealth/stairway-to-health.jpg" /></entry><entry><title type="html">Percona Live 2017 Dublin</title><link href="https://ordina-jworks.github.io/conference/2017/10/09/perconaLive2017.html" rel="alternate" type="text/html" title="Percona Live 2017 Dublin" /><published>2017-10-09T00:00:00+00:00</published><updated>2017-10-09T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/conference/2017/10/09/perconaLive2017</id><content type="html" xml:base="https://ordina-jworks.github.io/conference/2017/10/09/perconaLive2017.html">&lt;p&gt;
  &lt;img class=&quot;image fit&quot; alt=&quot;Percona Live Europe Dublin Logo&quot; src=&quot;/img/percona-live-2017/logo.png&quot; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Percona Live Europe is a yearly conference on open source database organized by &lt;a href=&quot;https://www.percona.com/live/e17/&quot; target=&quot;_blank&quot;&gt;Percona&lt;/a&gt;.
We had the opportunity to attend this year’s conference in the beautiful city of Dublin.
Beside enjoying the local brews and drafts we attended several sessions out of which we highlight some sessions in this blog post.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;mongodb-shootout-mongodb-atlas-azure-cosmosdb-and-doing-it-yourself&quot;&gt;MongoDB Shootout: MongoDB Atlas, Azure CosmosDB and Doing It Yourself&lt;/h2&gt;

&lt;p&gt;When running MongoDB in the cloud, you have several options. 
David Murphy compared &lt;a href=&quot;https://www.mongodb.com/cloud/atlas&quot; target=&quot;_blank&quot;&gt;MongoDB Atlas&lt;/a&gt;, &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/cosmos-db/introduction&quot; target=&quot;_blank&quot;&gt;CosmosDB&lt;/a&gt; and the good old DIY.&lt;/p&gt;

&lt;p&gt;Using Atlas, you get monitoring, automation and the possibility to pay for backups.
You pay per instance and you have a wide variety of instances and regions to choose from on AWS, GCP and Azure.
The biggest downside is that the cost is about 44% more than running you own servers in the cloud.
This means that, in contrast to DIY, you continuously pay more instead of writing off your initial investment and paying less in the end.
The monitoring is really good but the problem here is that if you have have a polyglot environment with your own monitoring and alerting, you can not integrate it with Atlas so you end up with yet another tool.
Upgrading is really easy and just a click of the button thanks to the automation.
Backups need to be paid for per GB and are taken continuously.&lt;/p&gt;

&lt;p&gt;CosmosDB is offered by Microsoft on Azure and claims to be MongoDB compatible. 
This is not completely true because they have no support for the aggregation framework.
So you can only use it for simple CRUD operations.
The pricing is based on a pay-per-operation model which means it’s really hard to figure out what your cost will be and how it will evolve over time.
Here you also have the downside of continuously paying more than DIY.
The monitoring is very basic and of no help when you run into problems or strange behaviour, it’s like a black box.
Upgrading is done behind the scenes which means you don’t have to worry unless the upgrade means your code is no longer compatible, then you are stuck.
Backups are very basic because they are taken approximately every four hours and only the latest 2 backups are stored.&lt;/p&gt;

&lt;p&gt;DIY has the most power to offer IF you have a mature, and complete DevOps team.
With DIY you pay a high price up-front for hardware and people.
You need to implement your own monitoring, i.e. with the &lt;a href=&quot;https://www.elastic.co/products&quot; target=&quot;_blank&quot;&gt;Elastic stack&lt;/a&gt; or Percona’s &lt;a href=&quot;https://www.percona.com/doc/percona-monitoring-and-management/index.html&quot; target=&quot;_blank&quot;&gt;PMM&lt;/a&gt;.
Also, automation is a big part of the effort.
And last but not least, you need to implement your own backup strategy.
The biggest upside is that you have full control over what you implement and how you do things.
You choose the cloud service provider or the hardware you want to use.
You choose what you want to monitor and how you alert.
You choose how often and when you backup.
But of course, it’s all up to you.&lt;/p&gt;

&lt;h2 id=&quot;visualize-your-data-with-grafana&quot;&gt;Visualize Your Data With Grafana&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://grafana.com/&quot; target=&quot;_blank&quot;&gt;Grafana&lt;/a&gt; is used to build monitoring dashboards based on time series data.
Grafana supports a wide range of &lt;a href=&quot;https://grafana.com/plugins?type=datasource&quot; target=&quot;_blank&quot;&gt;data sources&lt;/a&gt; to get its data and generate the dashboard.
There are already a lot of pre-built &lt;a href=&quot;https://grafana.com/dashboards&quot; target=&quot;_blank&quot;&gt;dashboards&lt;/a&gt; you can use and customize for your own needs.
You can build your own dashboards with &lt;a href=&quot;https://grafana.com/plugins?type=panel&quot; target=&quot;_blank&quot;&gt;panels&lt;/a&gt;.
Each panel is fed with data from a datasource based on a query.
Grafana has created a query editor with support for different data sources, like PromQL for Prometheus, to make it easier to build the queries you need.
The end result can look like this :
&lt;img src=&quot;/img/percona-live-2017/grafanaDashboard.png&quot; alt=&quot;Grafana Dashboard&quot; class=&quot;image&quot; width=&quot;55%&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;database-reliability-engineering-what-why-and-how&quot;&gt;Database Reliability Engineering: What, Why and How?&lt;/h2&gt;

&lt;p&gt;The DBA from the old days, hidden in a basement behind closets, performing magic on that mysterious thing called a database, is dead.
Enter the Database Reliability Engineer (DBRE, loosely based on &lt;a href=&quot;https://en.wikipedia.org/wiki/Site_reliability_engineering&quot; target=&quot;_blank&quot;&gt;SRE&lt;/a&gt;), a person who embraces the new paradigms in the IT-world.
He is an advocate of how data should be treated and used, he teaches his colleagues, he takes part in pair-programming, he is an active team member in cross-functional teams.
A DBRE’s knowledge is not confined to a single system, he can support polyglot persistence.
He can support these systems on premise and in the cloud.
He automates as much as possible and uses tools of the trade including source control systems and helps creating infrastructure as code.
The DBRE enables his organisation to apply known principles of the software engineering world to the database world.
In this role he applies principles from Database Reliability Engineering, like designing for scale, availability, operations and performance.
Also visibility, alerting and database change and release management are just a few parts of the tasks to do.
For more detailed information make sure to check out the book &lt;a href=&quot;http://shop.oreilly.com/product/0636920039761.do&quot; target=&quot;_blank&quot;&gt;Database Reliability Engineering&lt;/a&gt;, a must read for everyone in the field.&lt;/p&gt;

&lt;h2 id=&quot;mongodb-security-checklist&quot;&gt;MongoDB Security Checklist&lt;/h2&gt;

&lt;p&gt;MongoDB has been in the news lately due to MongoDB ransomware attacks. 
This might make you wonder whether or not MongoDB is secure.
Well, rest assured it is very secure.
But you need to turn security on, at least until the next major release where security will be on by default.
MongoDB has a plethora of security features in their community edition and the commercial offering provides even more goodies like LDAP integration and baked in encryption-at-rest.
It starts with simple username/password authentication and moves on to x.509 certificates based authentication.
Once authenticated you have authorization with either build-in or user-defined roles and privileges, so you can fine-tune which users have access to which database or collection and which actions they can perform on them.
You can further lock-down your MongoDB by fixing the network interface it is listening to so it’s not open to the internet, or encrypting the communication between replica-set or sharded-cluster members.
If you are running MongoDB, then reading the &lt;a href=&quot;https://docs.mongodb.com/manual/administration/security-checklist/&quot; target=&quot;_blank&quot;&gt;security checklist&lt;/a&gt; is a must!&lt;/p&gt;

&lt;h2 id=&quot;improvements-to-mongorocks-in-2017&quot;&gt;Improvements to MongoRocks in 2017&lt;/h2&gt;

&lt;p&gt;MongoRocks is MongoDB using RocksDB as the underlying storage engine.
From the MongoRocks &lt;a href=&quot;http://mongorocks.org/&quot; target=&quot;_blank&quot;&gt;website&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote class=&quot;clear&quot;&gt;&lt;p&gt;&quot;RocksDB is a key-value library based on Log Structured Merge Trees. It is maintained by the Facebook Database Engineering Team, and is based on LevelDB, by Sanjay Ghemawat and Jeff Dean at Google&quot;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;MongoRocks differs from WiredTiger in the way it stores data.
WiredTiger uses a B-tree where MongoRocks uses a LSM-tree structure.
Both have pros and cons of course.
An LSM-tree structure favours space and insert efficiency over read efficiency.
An B+ tree structure favours update and read efficiency over space efficiency.
So depending on your workload you can choose which might suit you better.
Of course, nothing beats measuring what the effect of your workload is on performance of the choosen storage engine.
Because, you know, silver bullets and such…
So testing and measuring is key in deciding which engine you should choose.
Nevertheless, MongoRocks is showing nice improvements over previous versions and has several interesting benefits over WiredTiger.
Certainly when storage endurance is an issue or if your working set does not fit into memory.&lt;/p&gt;

&lt;h2 id=&quot;automatic-database-management-system-tuning-through-large-scale-machine-learning&quot;&gt;Automatic Database Management System Tuning Through Large-Scale Machine Learning&lt;/h2&gt;

&lt;p&gt;This is probably the most stunning talk of the conference.
OtterTune is a tool developed by students and researchers at Carnegie Mellon to automatically tune your database.
This is done by making clever use of previously collected data of other tunings and applying machine learning to it.
The presented results showed that for the given workload, OtterTune was at par with DBAs which had double digit years of experience.
Looking at this from the bright side, OtterTune would help DBAs to focus on areas other than figuring out which combination of the multiple settings they should use to tune their database.
It would definitely help to do better Database Reliability Engineering.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;This is just a small portion of the huge amount of sessions at Percona Live, but of course, one needs to choose.
It’s really great to see this conference putting open source on the foreground and displaying the wealth of choice and diversity of technologies in the open source database world.
We see that this space is continuously expanding and that the future is looking even more promising than the present.
Good times ahead!&lt;/p&gt;

&lt;h3 id=&quot;useful-links--further-reading&quot;&gt;Useful links &amp;amp; further reading&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.percona.com/live/e17/&quot; target=&quot;_blank&quot;&gt;Percona Live Europe Dublin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://mongorocks.org/&quot; target=&quot;_blank&quot;&gt;MongoRocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://grafana.com/&quot; target=&quot;_blank&quot;&gt;Grafana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.mongodb.com/cloud/atlas&quot; target=&quot;_blank&quot;&gt;MongoDB Atlas&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.elastic.co/products&quot; target=&quot;_blank&quot;&gt;Elastic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.mongodb.com/manual/administration/security-checklist/&quot; target=&quot;_blank&quot;&gt;MongoDB security checklist&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920039761.do&quot; target=&quot;_blank&quot;&gt;Database Reliability Engineering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Chris&quot;, &quot;last_name&quot;=&gt;&quot;De Bruyne&quot;, &quot;permalink&quot;=&gt;&quot;/author/chris-de-bruyne&quot;, &quot;avatar&quot;=&gt;&quot;chris-de-bruyne.jpg&quot;, &quot;title&quot;=&gt;&quot;Senior Java Developer&quot;, &quot;title2&quot;=&gt;&quot;Competence Lead Databases&quot;, &quot;email&quot;=&gt;&quot;chris.debruyne@ordina.be&quot;, &quot;twitter&quot;=&gt;&quot;ceedeebee2901&quot;, &quot;bio&quot;=&gt;&quot;Chris is a Senior Java Developer at Ordina Belgium, passionate about Java and MongoDB. As competence leader Databases he guides his fellow developers by giving workshops and presentations. Chris is passionate to help colleagues and clients to get the most out of MongoDB and the Java eco system.&quot;}</name><email>chris.debruyne@ordina.be</email></author><category term="Conference" /><category term="Percona Live" /><category term="MySql" /><category term="MongoDB" /><category term="MariaDB" /><category term="DBA" /><category term="PostgreSQL" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/percona-live-2017/logo2.png" /></entry><entry><title type="html">Kickstarter Trajectory 2017</title><link href="https://ordina-jworks.github.io/kickstarters/2017/10/05/Kickstarter-Trajectory-2017.html" rel="alternate" type="text/html" title="Kickstarter Trajectory 2017" /><published>2017-10-05T00:00:00+00:00</published><updated>2017-10-05T00:00:00+00:00</updated><id>https://ordina-jworks.github.io/kickstarters/2017/10/05/Kickstarter-Trajectory-2017</id><content type="html" xml:base="https://ordina-jworks.github.io/kickstarters/2017/10/05/Kickstarter-Trajectory-2017.html">&lt;blockquote&gt;
  &lt;p&gt;This year, 45 young professionals started the various Ordina Kickstarter trajectories.
Five of those, participated in the Kickstarter trajectory of JWorks.
Each of them looking for a challenge and a fresh start!
For some, it was a transition between school and work, and Ordina handled this very well.
The main goal of this trajectory was to widen every student’s knowledge of the IT world.
They taught us the basics of every topic that’s hot at the moment.
This will definitely come in handy during our first project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;first-impressions&quot;&gt;First impressions&lt;/h1&gt;

&lt;p&gt;When we arrived the first day, we were welcomed with breakfast and afterwards, we got a tour around the building.
The corporate culture here is truly a plus for Ordina and we immediately felt at home as everybody is really friendly and helpful.
We got our equipment consisting of a car and either a Windows laptop or a MacBook Pro depending on our preference.
It’s clear that, starting from day one, Ordina makes sure that their consultants are well equipped to work successfully.&lt;/p&gt;

&lt;h1 id=&quot;what-is-the-kickstarter-trajectory&quot;&gt;What is the Kickstarter trajectory?&lt;/h1&gt;

&lt;p&gt;The Kickstarter trajectory consisted of intensive training spanning two months.
During this time, courses on different frontend and backend technologies, methods, tools and soft skills were given by senior consultants and external lecturers. 
This trajectory is ideal for graduating students and people who want to make a switch to IT.
The constant guidance and support made this a good preparation for our first project.&lt;/p&gt;

&lt;p&gt;During the fourth week we had a team building event with all the kickstarters from the different units. 
The goal was to get to know the other kickstarters and strengthen our team spirit by shooting each other with bow and arrow!&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Teambuilding&quot; src=&quot;/img/kickstarters/2017/teambuilding-kickstarter.jpg&quot; class=&quot;image fit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the last week of the Kickstarter trajectory, the ‘&lt;a href=&quot;https://jobs.ordina.be/nl-nl/evenementen/2017/join/&quot; target=&quot;_blank&quot;&gt;JOIN Event&lt;/a&gt;’ was held.
This day was split into two parts: the unit meeting where the whole JWorks unit gathers for a year report where every competence center presents its past and upcoming activities, and the completed and current projects are highlighted. 
And in the afternoon the JOIN Event itself. 
There were talks given by members of JWorks as well as by external speakers about upcoming or commonly used technologies such as Docker and Spinnaker, but also about Scrum and User Experience.
In addition to gaining knowledge about these subjects, this event provides a unique opportunity to meet most members of the unit or at least see them, since there are over a hundred.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Join 2017&quot; src=&quot;/img/kickstarters/2017/join.jpg&quot; class=&quot;image fit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Other events we could participate in were the CC-meetings and the Ordina Boardgame Night.
These also provided opportunities to get to know both our and other units as we deepened our understanding of the presented subjects.
As you can see Ordina employees are very involved.&lt;/p&gt;

&lt;h1 id=&quot;training&quot;&gt;Training&lt;/h1&gt;

&lt;p&gt;We kicked off our career at Ordina in the JWorks unit.
The main technologies used in this unit are Java &amp;amp; JavaScript.
Most of the workshops in the Kickstarter trajectory are based on these two technologies.
Small side note, don’t be fooled by these names: Java &amp;amp; JavaScript have no underlying connection.
In general, the development of modern applications is divided into two main groups: the frontend part and the backend part.
Java dominates in the backend part, while JavaScript is located in the frontend part.
For two months, we’ve had the luxury to deepen our knowledge in both domains, in order to obtain a comprehensive understanding of the cutting-edge technology stack that’s being used in JWorks.
Below you’ll find a brief overview of the technologies we explored and applied in the workshops.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;HTML5, CSS3, BEM, SASS&lt;/li&gt;
      &lt;li&gt;JavaScript, TypeScript&lt;/li&gt;
      &lt;li&gt;Angular (2+), Ionic&lt;/li&gt;
      &lt;li&gt;Npm, Bower, webpack&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Newest features in Java 7/8/9&lt;/li&gt;
      &lt;li&gt;Java EE, Spring, Spring Boot with Maven&lt;/li&gt;
      &lt;li&gt;JPA, Hibernate&lt;/li&gt;
      &lt;li&gt;Unit Testing: JUnit, Mockito, etc.&lt;/li&gt;
      &lt;li&gt;MongoDB&lt;/li&gt;
      &lt;li&gt;Cloud solutions (PaaS, IaaS, SaaS): Pivotal Cloud Foundry and OpenShift&lt;/li&gt;
      &lt;li&gt;Docker, Git&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Design principles and methodologies&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Microservices&lt;/li&gt;
      &lt;li&gt;Agile, Scrum&lt;/li&gt;
      &lt;li&gt;DevOps, Continuous Integration&lt;/li&gt;
      &lt;li&gt;DDD, BDD, TDD&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rather than learning these technologies in isolation, we learned to create applications by combining them.
For example, we used TypeScript, CSS and Ionic to build mobile apps, we wrote backend logic by uniting the forces of Spring Boot, Java and unit testing.
We also combined Angular, TypeScript, SASS, HTML and npm to create a web application.&lt;/p&gt;

&lt;p&gt;In our projects, we learned to utilize the Version Control System Git to collaborate with a team and share projects and code progress.
One thing we’ll never forget is that if we push breaking changes to the master branch and break the build, we’ll have to buy “boterkoeken” for the unit!
Last but not least, we were introduced to the wonderful world where clean code and microservices are the heroes that kick spaghetti code and monoliths in the butt.&lt;/p&gt;

&lt;p&gt;During the trajectory we also had a couple of “free” days during which we had to read the &lt;a href=&quot;https://www.amazon.de/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&quot; target=&quot;_blank&quot;&gt;Clean Code&lt;/a&gt; book and prepare ourselves for the &lt;a href=&quot;https://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;amp;get_params=p_exam_id:1Z0-808&quot; target=&quot;_blank&quot;&gt;Oracle Certified Associate, Java SE 8 Programmer I exam&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;memorable-moments&quot;&gt;Memorable moments&lt;/h1&gt;

&lt;p&gt;“The soft skill sessions were real eyeopeners and gave me a better understanding regarding introducing myself, giving presentations and the Agile methodology.
The introduction to microservices was very interesting since moving away from monoliths is the way to go.” – Ken&lt;/p&gt;

&lt;p&gt;“The tips received during the communication essentials sessions are a backpack full, good enough to present myself in a proper way.
Diverse technologies used in JWorks e.g. turning a monolith to microservices, a different type of database like MongoDB, running your applications in Docker containers and such.” – Michiel&lt;/p&gt;

&lt;p&gt;“Learning about the existence of ‘microservices’ versus ‘monoliths’.
Writing unit-tests to see if the code does what it should do before deploying the application in production.
And the introduction to the MongoDB database and how to use it in the command line interface.” – Jef&lt;/p&gt;

&lt;p&gt;“The communication sessions were worth their weight in gold!
How often do you get a chance to practice communication in the most awkward situations?
I guess every day, but at least in these sessions there were no real repercussions :)” – Simon&lt;/p&gt;

&lt;p&gt;“Learning about all those different technologies.
There really is too much to choose from.
But if I have to pick something, it’s the Spring Boot session.
I previously experimented with Spring Boot at my internship, where nothing seemed to make sense.
But after this session, everything I was struggling with became clear and fell into place.” – Nick&lt;/p&gt;

&lt;h1 id=&quot;the-new-jworks-colleagues&quot;&gt;The new JWorks colleagues&lt;/h1&gt;

&lt;p&gt;&lt;img class=&quot;p-image&quot; alt=&quot;Nick Geudens&quot; src=&quot;/img/kickstarters/2017/nick-geudens.jpg&quot; /&gt;
&lt;img class=&quot;p-image&quot; alt=&quot;Ken De Becker&quot; src=&quot;/img/kickstarters/2017/ken-de-becker.jpg&quot; /&gt;
&lt;img class=&quot;p-image&quot; alt=&quot;Michiel Willems&quot; src=&quot;/img/kickstarters/2017/michiel-willems.jpg&quot; /&gt;
&lt;img class=&quot;p-image&quot; alt=&quot;Jef Willems&quot; src=&quot;/img/kickstarters/2017/jef-willems.jpg&quot; /&gt;
&lt;img class=&quot;p-image&quot; alt=&quot;Simon Buysse&quot; src=&quot;/img/kickstarters/2017/simon-buysse.jpg&quot; /&gt;&lt;/p&gt;</content><author><name>{&quot;first_name&quot;=&gt;&quot;Nick&quot;, &quot;last_name&quot;=&gt;&quot;Geudens&quot;, &quot;permalink&quot;=&gt;&quot;/author/nick-geudens/&quot;, &quot;avatar&quot;=&gt;&quot;nick-geudens.jpg&quot;, &quot;linkedin&quot;=&gt;&quot;nickgeudens&quot;, &quot;github&quot;=&gt;&quot;nickgeudens&quot;, &quot;title&quot;=&gt;&quot;Java Consultant&quot;, &quot;email&quot;=&gt;&quot;nick.geudens@ordina.be&quot;, &quot;bio&quot;=&gt;&quot;Nick is a motivated Java developer at Ordina where he successfully completed the kickstarter trajectory in 2017. His main focus is backend development where he likes to experiment with databases as well as Spring Boot applications.&quot;}</name><email>nick.geudens@ordina.be</email></author><category term="Kickstarters" /><category term="Spring" /><category term="Angular" /><category term="Unit Test" /><category term="Microservices" /><category term="Spring Boot" /><category term="Ionic" /><category term="MongoDB" /><summary type="html">This year, 45 young professionals started the various Ordina Kickstarter trajectories. Five of those, participated in the Kickstarter trajectory of JWorks. Each of them looking for a challenge and a fresh start! For some, it was a transition between school and work, and Ordina handled this very well. The main goal of this trajectory was to widen every student’s knowledge of the IT world. They taught us the basics of every topic that’s hot at the moment. This will definitely come in handy during our first project.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ordina-jworks.github.io/img/kicks.png" /></entry></feed>